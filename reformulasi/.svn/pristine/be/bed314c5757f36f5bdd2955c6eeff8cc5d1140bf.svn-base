 
        <?php
        /* Generated by Sovdev 2 ERP CRUD Generator 2017-10-19 09:20:23 */
        /* Location: ./modules/reformulasi/controllers/request_refor.php */
        /* Please DO NOT modify this information : */ 
         
        if ( ! defined('BASEPATH')) exit('No direct script access allowed');
        class request_refor extends MX_Controller {
            function __construct() {
                parent::__construct();
                $this->load->library('auth');
                $this->dbset = $this->load->database('formulasi', false, true);
                $this->user = $this->auth->user();
                $this->load->library('lib_utilitas');
                $this->load->library('auth_localnon');
            }
            function index($action = '') {
                $action = $this->input->get('action');
                //Bikin Object Baru Nama nya $grid      
                $grid = new Grid;
                $grid->setTitle('Request Reformulasi');
                $grid->setTable('plc2.req_refor');      
                $grid->setUrl('request_refor');

                //List Table
                $grid->addList('vNo_req_refor','iKey','no_produk','nama_produk','vbatch_no','vName','vAlasan_refor','iSubmit','iStatus'); 
                $grid->setSortBy('Req_refor_ID');
                $grid->setSortOrder('asc');  

                //List field
                $grid->addFields('iStatus','vNo_req_refor','tTanggal_usulan_refor','vNo_deviasi','vbatch_no','iNo_usulan','iKey','cNIP','idept_id','iteam_pd','vAlasan_refor','vFile','request_sample'); 

               
               if($this->auth_localnon->is_manager()){
                    $x=$this->auth_localnon->dept();
                    $manager=$x['manager'];
                    if(in_array('PD', $manager)){
                        $type='PD';
                        //$grid->setQuery('plc2_upb.iteampd_id IN ('.$this->auth_localnon->my_teams().')', null);
                        $teamPD='AND plc2.req_refor.iteam_pd IN ('.$this->auth_localnon->my_teams().')';
                    }
                    else{$type='';}
                }
                else{
                    $x=$this->auth_localnon->dept();
                    $team=$x['team'];
                    if(in_array('PD', $team)){
                        $type='PD';
                        //$grid->setQuery('plc2_upb.iteampd_id IN ('.$this->auth_localnon->my_teams().')', null);
                        $teamPD='AND plc2.req_refor.iteam_pd IN ('.$this->auth_localnon->my_teams().')';
                    }
                    else{$type='';}
                }


                $grid ->setSql("SELECT
                                        a.*
                                        , produk.*
                                        ,c.*


                                        FROM (plc2.req_refor)
                                        JOIN plc2.req_refor a ON a.Req_refor_ID = plc2.req_refor.Req_refor_ID
                                        JOIN (  select * from (
                                                select a.idossier_upd_id as pk,a.vUpd_no as no_produk , a.vNama_usulan as nama_produk , '2' as iKey from dossier.dossier_upd a where a.lDeleted=0
                                                union 
                                                select b.iupb_id as pk ,b.vupb_nomor as no_produk, b.vupb_nama as nama_produk , '1' as iKey from plc2.plc2_upb b where b.lDeleted=0
                                            ) as produk) as produk on  produk.pk=a.iNo_usulan and produk.iKey = a.iKey
                                        JOIN hrd.employee c on c.cNip =  a.cNIP

                            ");         
        
                $grid ->setSqlCond("WHERE a.lDeleted=0
                                    ".$teamPD."
                                    and produk.nama_produk like '%".$_GET['nama_produk']."%'
                                    and c.vName like '%".$_GET['vName']."%'
                                    
                                    ");     

                $grid ->setSqlOrder(" GROUP BY Req_refor_ID
                                ORDER BY `Req_refor_ID` DESC
                                ");     


                //Setting Grid Width Name 
                /*
                    Kamu bisa merubah nama label dari sini, Contoh :
                    $grid->setLabel('nama field','nama field yang akan diubah');

                */

                  //set search
                $grid->setSearch('vNo_req_refor','iKey','vbatch_no','nama_produk','vName');
            
                
                $grid->setLabel('vFile','Upload File');

                $grid->setWidth('no_produk', '100');
                $grid->setAlign('no_produk', 'center');
                $grid->setLabel('no_produk','No Usulan');

                $grid->setWidth('nama_produk', '280');
                $grid->setAlign('nama_produk', 'left');
                $grid->setLabel('nama_produk','Nama Usulan Produk');

                $grid->setWidth('vName', '200');
                $grid->setAlign('vName', 'left');
                $grid->setLabel('vName','Requestor');


                $grid->setWidth('vNo_req_refor', '100');
                $grid->setAlign('vNo_req_refor', 'center');
                $grid->setLabel('vNo_req_refor','No Request');
            
                $grid->setWidth('vNo_deviasi', '100');
                $grid->setAlign('vNo_deviasi', 'left');
                $grid->setLabel('vNo_deviasi','No Deviasi');
            
                $grid->setWidth('iNo_usulan', '100');
                $grid->setAlign('iNo_usulan', 'left');
                $grid->setLabel('iNo_usulan','No Usulan Produk');
            
                $grid->setWidth('iKey', '100');
                $grid->setAlign('iKey', 'center');
                $grid->setLabel('iKey','Jenis Refor');
            
                $grid->setWidth('vbatch_no', '80');
                $grid->setAlign('vbatch_no', 'center');
                $grid->setLabel('vbatch_no','No Batch');
            
                $grid->setWidth('cNIP', '200');
                $grid->setAlign('cNIP', 'left');
                $grid->setLabel('cNIP','Nama Inisiator');
            
                $grid->setWidth('idept_id', '100');
                $grid->setAlign('idept_id', 'left');
                $grid->setLabel('idept_id','Departement');
            
                $grid->setWidth('tTanggal_usulan_refor', '100');
                $grid->setAlign('tTanggal_usulan_refor', 'left');
                $grid->setLabel('tTanggal_usulan_refor','Tgl Permintaan Refor');
            
                $grid->setWidth('vAlasan_refor', '200');
                $grid->setAlign('vAlasan_refor', 'left');
                $grid->setLabel('vAlasan_refor','Keterangan');
            
                $grid->setWidth('iteam_pd', '100');
                $grid->setAlign('iteam_pd', 'left');
                $grid->setLabel('iteam_pd','Team PD');
            
                $grid->setWidth('iStatus', '100');
                $grid->setAlign('iStatus', 'center');
                $grid->setLabel('iStatus','Status Approval');
            
                $grid->setWidth('iSubmit', '100');
                $grid->setAlign('iSubmit', 'center');
                $grid->setLabel('iSubmit','Status Submit');
            
                $grid->setWidth('cApproved', '100');
                $grid->setAlign('cApproved', 'left');
                $grid->setLabel('cApproved','CAPPROVED');
            
                $grid->setWidth('vreason_approved', '100');
                $grid->setAlign('vreason_approved', 'left');
                $grid->setLabel('vreason_approved','VREASON_APPROVED');
            
                $grid->setWidth('cformulator', '100');
                $grid->setAlign('cformulator', 'left');
                $grid->setLabel('cformulator','CFORMULATOR');
            
                $grid->setWidth('istatus_terima_req', '100');
                $grid->setAlign('istatus_terima_req', 'left');
                $grid->setLabel('istatus_terima_req','ISTATUS_TERIMA_REQ');
            
                $grid->setWidth('cApproved_terima', '100');
                $grid->setAlign('cApproved_terima', 'left');
                $grid->setLabel('cApproved_terima','CAPPROVED_TERIMA');
            
                $grid->setWidth('dApproved_terima', '100');
                $grid->setAlign('dApproved_terima', 'left');
                $grid->setLabel('dApproved_terima','DAPPROVED_TERIMA');
            
                $grid->setWidth('vreason_terima', '100');
                $grid->setAlign('vreason_terima', 'left');
                $grid->setLabel('vreason_terima','Keterangan');
            
                $grid->setWidth('dTgl_rev_mbr', '100');
                $grid->setAlign('dTgl_rev_mbr', 'left');
                $grid->setLabel('dTgl_rev_mbr','DTGL_REV_MBR');
            
                $grid->setWidth('vNo_cc', '100');
                $grid->setAlign('vNo_cc', 'left');
                $grid->setLabel('vNo_cc','VNO_CC');
            
                $grid->setWidth('dPengajuan_cc', '100');
                $grid->setAlign('dPengajuan_cc', 'left');
                $grid->setLabel('dPengajuan_cc','DPENGAJUAN_CC');
            
                $grid->setWidth('iStatus_cc', '100');
                $grid->setAlign('iStatus_cc', 'left');
                $grid->setLabel('iStatus_cc','ISTATUS_CC');
            
                $grid->setWidth('dApproved_cc', '100');
                $grid->setAlign('dApproved_cc', 'left');
                $grid->setLabel('dApproved_cc','DAPPROVED_CC');
            
                $grid->setWidth('cApproved_cc', '100');
                $grid->setAlign('cApproved_cc', 'left');
                $grid->setLabel('cApproved_cc','CAPPROVED_CC');
            
                $grid->setWidth('dUji_BE', '100');
                $grid->setAlign('dUji_BE', 'left');
                $grid->setLabel('dUji_BE','DUJI_BE');
            
                $grid->setWidth('dSelesai_uji_BE', '100');
                $grid->setAlign('dSelesai_uji_BE', 'left');
                $grid->setLabel('dSelesai_uji_BE','DSELESAI_UJI_BE');
            
                $grid->setWidth('vNo_hasil_uji_BE', '100');
                $grid->setAlign('vNo_hasil_uji_BE', 'left');
                $grid->setLabel('vNo_hasil_uji_BE','VNO_HASIL_UJI_BE');
            
                $grid->setWidth('vHasil_uji_BE', '100');
                $grid->setAlign('vHasil_uji_BE', 'left');
                $grid->setLabel('vHasil_uji_BE','VHASIL_UJI_BE');
            
                $grid->setWidth('iStatus_uji_BE', '100');
                $grid->setAlign('iStatus_uji_BE', 'left');
                $grid->setLabel('iStatus_uji_BE','ISTATUS_UJI_BE');
            
                $grid->setWidth('dApproved_uji_BE', '100');
                $grid->setAlign('dApproved_uji_BE', 'left');
                $grid->setLabel('dApproved_uji_BE','DAPPROVED_UJI_BE');
            
                $grid->setWidth('cApproved_uji_BE', '100');
                $grid->setAlign('cApproved_uji_BE', 'left');
                $grid->setLabel('cApproved_uji_BE','CAPPROVED_UJI_BE');
            
                $grid->setWidth('dCreate', '100');
                $grid->setAlign('dCreate', 'left');
                $grid->setLabel('dCreate','DCREATE');
            
                $grid->setWidth('cCreated', '100');
                $grid->setAlign('cCreated', 'left');
                $grid->setLabel('cCreated','CCREATED');
            
                $grid->setWidth('dupdate', '100');
                $grid->setAlign('dupdate', 'left');
                $grid->setLabel('dupdate','DUPDATE');
            
                $grid->setWidth('cUpdate', '100');
                $grid->setAlign('cUpdate', 'left');
                $grid->setLabel('cUpdate','CUPDATE');
            
                $grid->setWidth('lDeleted', '100');
                $grid->setAlign('lDeleted', 'left');
                $grid->setLabel('lDeleted','LDELETED');
            
                //Example modifikasi GRID ERP
                /*
                    - Set Query
                        $grid->setQuery('lDeleted = 0 ', null); 
                        $grid->setQuery('plc2_upb.iupb_id IN (select distinct(bk.iupb_id) from plc2.plc2_upb_spesifikasi_refor bk where bk.iappqa=2 and bk.ldeleted=0)', null);  

                    - Join Table
                        $grid->setJoinTable('hrd.employee', 'employee.cNip = pk_master.vnip', 'inner');

                    - Change Field Name
                        $grid->changeFieldType('ideleted','combobox','',array(''=>'Pilih',0=>'Aktif',1=>'Tidak aktif'));
                */

                $grid->changeFieldType('iKey','combobox','',array(''=>'Pilih',1=>'Local',2=>'Export'));
                $grid->changeFieldType('iStatus','combobox','',array('0'=>'Waiting Approval',1=>'Rejected',2=>'Approved'));
                $grid->changeFieldType('iSubmit','combobox','',array(0=>'Draft',1=>'Submitted'));
               
               
                
                //set required
                $grid->setRequired('vNo_req_refor','vNo_deviasi','iNo_usulan','iKey','vbatch_no','cNIP','idept_id','tTanggal_usulan_refor','vAlasan_refor','iteam_pd','iStatus','iSubmit','cApproved','vreason_approved','cformulator','istatus_terima_req','cApproved_terima','dApproved_terima','vreason_terima','dTgl_rev_mbr','vNo_cc','dPengajuan_cc','iStatus_cc','dApproved_cc','cApproved_cc','dUji_BE','dSelesai_uji_BE','vNo_hasil_uji_BE','vHasil_uji_BE','iStatus_uji_BE','dApproved_uji_BE','cApproved_uji_BE','dCreate','cCreated','dupdate','cUpdate','lDeleted'); 

                $grid->setGridView('grid');

                switch ($action) {
                    case 'json':
                            $grid->getJsonData();
                            break;
                    case 'view':
                            $grid->render_form($this->input->get('id'), true);
                            break;
                    case 'create':
                            $grid->render_form();
                            break;
                    case 'createproses':
                            $isUpload = $this->input->get('isUpload');
                            if($isUpload) {
                                $lastId=$this->input->get('lastId');
                                $path = realpath("files/reformulasi/request_refor");
                                if(!file_exists($path."/".$lastId)){
                                    if (!mkdir($path."/".$lastId, 0777, true)) { //id review
                                        die('Failed upload, try again!');
                                    }
                                }

                                $file_name= "";
                                $file_vKeterangan = array();
                                $fileId = array();
                        
                                foreach($_POST as $key=>$value) {
                                                            
                                    if ($key == 'file_vKeterangan') {
                                        foreach($value as $y=>$u) {
                                            $file_vKeterangan[$y] = $u;
                                        }
                                    }
                                    
                                    
                                    
                                    //
                                    if ($key == 'namafile') {
                                        foreach($value as $k=>$v) {
                                            $file_name[$k] = $v;
                                        }
                                    }
                                    
                                    
                                    
                                    //
                                    if ($key == 'fileid') {
                                        foreach($value as $k=>$v) {
                                            $fileId[$k] = $v;
                                        }
                                    }
                                    
                                    
                                }
                                $i=0;
                                foreach ($_FILES['fileupload']["error"] as $key => $error) {
                                    if ($error == UPLOAD_ERR_OK) {
                                        $tmp_name = $_FILES['fileupload']["tmp_name"][$key];
                                        $name =$_FILES['fileupload']["name"][$key];
                                        $data['vFilename'] = $name;
                                        $data['dCreate'] = date('Y-m-d H:i:s');

                                            if(move_uploaded_file($tmp_name, $path."/".$lastId."/".$name)) {
                                                $sql[]="INSERT INTO plc2.req_refor_file (Req_refor_ID, vFilename, vKeterangan, dCreate, cCreate) 
                                                        VALUES (".$lastId.",'".$data['vFilename']."','".$fvKeterangan[$i]."','".$data['dCreate']."','".$this->user->gNIP."')";
                                                $i++;   
                                            }
                                            else{
                                                echo "Upload ke folder gagal";  
                                            }
                                    }
                                }
                                foreach($sql as $q) {
                                    try {
                                    $this->db->query($q);
                                    }catch(Exception $e) {
                                    die($e);
                                    }
                                }
                                $r['message']="Data Berhasil Disimpan";
                                $r['status'] = TRUE;
                                $r['last_id'] = $this->input->get('lastId');                    
                                echo json_encode($r);
                            }else{
                                echo $grid->saved_form();
                            }
                            break;
                    case 'download':
                            $this->download($this->input->get('file'));
                            break;
                    case 'update':
                            $grid->render_form($this->input->get('id'));
                            break;
                    case 'updateproses':
                            $isUpload = $this->input->get('isUpload');
                            $sql = array();
                            $sql1 = array();
                            $file_name= "";
                            $file_name1= "";
                            
                            $fileId = array();
                            $path = realpath("files/reformulasi/request_refor");
                    
                            if (!file_exists( $path."/".$this->input->post('request_refor_Req_refor_ID') )) {
                                mkdir($path."/".$this->input->post('request_refor_Req_refor_ID'), 0777, true);                      
                            }

                    
                            $file_vKeterangan = array();
                    
                            foreach($_POST as $key=>$value) {
                                                        
                                if ($key == 'file_vKeterangan') {
                                    foreach($value as $y=>$u) {
                                        $file_vKeterangan[$y] = $u;
                                    }
                                }
                                
                                
                                
                                //
                                if ($key == 'namafile') {
                                    foreach($value as $k=>$v) {
                                        $file_name[$k] = $v;
                                    }
                                }
                                
                                
                                
                                //
                                if ($key == 'fileid') {
                                    foreach($value as $k=>$v) {
                                        $fileId[$k] = $v;
                                    }
                                }
                                
                                
                            }
                    
                    
                            $last_index = 0;
                            
                    
                            if($isUpload) {
                                $j = $last_index;               
                                                            
                                if (isset($_FILES['fileupload'])) {
                                    $this->hapusfile($path, $file_name, 'req_refor_file', $this->input->post('request_refor_Req_refor_ID'));
                                    foreach ($_FILES['fileupload']["error"] as $key => $error) {    
                                        if ($error == UPLOAD_ERR_OK) {
                                            $tmp_name = $_FILES['fileupload']["tmp_name"][$key];
                                            $name = $_FILES['fileupload']["name"][$key];
                                            $data['vFilename'] = $name;
                                            $data['id']=$this->input->post('request_refor_Req_refor_ID');
                                            $data['nip']=$this->user->gNIP;
                                            $data['dCreate'] = date('Y-m-d H:i:s');
                                            //$file_tanggal[$i] = date('l, F jS, Y', strtotime($file_tanggal[$i]));     
                                            if(move_uploaded_file($tmp_name, $path."/".$this->input->post('request_refor_Req_refor_ID')."/".$name)) 
                                            {                                   
                                                $sql[] = "INSERT INTO plc2.req_refor_file(Req_refor_ID, vFilename, dCreate, vKeterangan,cCreate) 
                                                    VALUES ('".$data['id']."', '".$data['vFilename']."','".$data['dCreate']."','".$file_vKeterangan[$j]."','".$data['nip']."')";                                                                      
                                                $j++;                                                                           
                                            }
                                            else{
                                            echo "Upload ke folder gagal";  
                                            }
                                        }
                                        
                                    }                       
                                        
                                                            
                                    foreach($sql as $q) {
                                            try {
                                                    $this->db->query($q);
                                            }catch(Exception $e) {
                                                    die($e);
                                            }
                                    }
                                }   
                                
                                
                                $r['status'] = TRUE;
                                $r['last_id'] = $this->input->get('lastId');                    
                                echo json_encode($r);
                                exit();
                            }  else {
                                if (is_array($file_name)) {                                 
                                    $this->hapusfile($path, $file_name, 'req_refor_file', $this->input->post('request_refor_Req_refor_ID'));
                                }
                                
                                                    
                                echo $grid->updated_form();
                            }
                            break;
                    case 'delete':
                            echo $grid->delete_row();
                            break; 
                    
                        //Ini Merupakan Standart Case Untuk Approve

                        case 'approve':
                            echo $this->approve_view();
                            break;
                        case 'approve_process':
                            echo $this->approve_process();
                            break;
                        case 'reject':
                            echo $this->reject_view();
                            break;
                        case 'reject_process':
                            echo $this->reject_process();
                            break; 
                     
                    default:
                            $grid->render_grid();
                            break;
                }
            }
            //Create Manipulate Field 

            //Jika Ingin Menambahkan Seting grid seperti button edit enable dalam kondisi tertentu
            
            function listBox_Action($row, $actions) {

                $le_manager = false;
                if($this->auth_localnon->is_manager()){
                    $x=$this->auth_localnon->dept();
                    $manager=$x['manager'];
                    if(in_array('PD', $manager)){
                        $type='PD';
                        $le_manager = true;
                    }
                    else{$type='';}
                }
                else{
                    $x=$this->auth_localnon->dept();
                    $team=$x['team'];
                    if(in_array('PD', $team)){
                        $type='PD';
                    }
                    else{$type='';}
                }

                if ($type=='PD') {

                    $iSubmit = $row->iSubmit;
                    $logged_nip =$this->user->gNIP;
                    $Requestor = $this->whoAmI($row->cNIP);
                    
                    if($iSubmit > 0){
                        //if ($Requestor['cUpper'] == $logged_nip ) {
                        if ($le_manager) {
                            // atasan requestor, diganti jadi manager PD
                            if($row->iStatus == 0){
                                // belum approval

                            }else{
                                //$actions['edit'] = 'ulala';
                                unset($actions['edit']);        
                            }
                        }else{
                            //$actions['edit'] = 'ulala2';
                            unset($actions['edit']);    
                        }
                        
                        //sudah submit
                    }else{
                        // masih draft

                    }

                    
                }else{
                    // tidak masuk team PD
                    unset($actions['edit']);    

                }


               
              
                return $actions;
            } 
            

            function whoAmI($nip){
                $sql = 'select b.vDescription as vdepartemen,a.*,b.* 
                        from hrd.employee a 
                        join hrd.msdepartement b on b.iDeptID=a.iDepartementID
                        where a.cNip ="'.$nip.'"
                        ';
                $data = $this->db->query($sql)->row_array();
                return $data;
            }
            
            function insertBox_request_refor_vNo_req_refor($field, $id) {
                $o = '<label title="Auto Number">Auto Generate</label>';
                $o .= '<input type="hidden" name="isdraft" id="isdraft">';
                

                return $o;
            }



            function updateBox_request_refor_vNo_req_refor($field, $id, $value, $rowData) {
                $o = "<input type='hidden' name='".$field."' id='".$id."' readonly='readonly' value='".$value."'/>";
                $o .= "<label title='Auto Number'>".$value."</label>";
                $o .= '<input type="hidden" name="isdraft" id="isdraft">';
                return $o;
            }

            
            function insertBox_request_refor_vNo_deviasi($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_vNo_deviasi($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            

            function insertBox_request_refor_iNo_usulan($field, $id) {
                $return = '<script>
                                $( "button.icon_pop" ).button({
                                    icons: {
                                        primary: "ui-icon-newwin"
                                    },
                                    text: false
                                })
                            </script>';
                $return .= '<input type="hidden" name="'.$field.'" id="'.$id.'" class="input_rows1 required" />
                            ';
                $return .= '<input type="text" name="'.$id.'_dis" class="required" disabled="TRUE" id="'.$id.'_dis" class="input_rows1" size="45" />';
                $return .= '&nbsp;<button class="icon_pop"  onclick="browse(\''.base_url().'processor/reformulasi/browse/request/product?field=request_refor\',\'List Product\')" type="button">&nbsp;</button>';                
                
                return $return;
            }

            function updateBox_request_refor_iNo_usulan($field, $id, $value, $rowData) {
                $sqlD = ' select * from (
                        select a.idossier_upd_id as pk,a.vUpd_no as no_produk , a.vNama_usulan as nama_produk , "2" as iKey 
                        from dossier.dossier_upd a 
                        where a.lDeleted=0
                        and a.ihold=0
                            union 
                        select b.iupb_id as pk ,b.vupb_nomor as no_produk, b.vupb_nama as nama_produk , "1" as iKey 
                        from plc2.plc2_upb b 
                        where b.lDeleted=0
                        and b.ihold=0 and b.itipe_id not in (6) and b.iKill=0) as produk
                        where produk.pk= "'.$value.'"



                        ';
                $dataD = $this->db->query($sqlD)->row_array();


                
                if ($this->input->get('action') == 'view') {
                    $return= $dataD['no_produk'].' - '.$dataD['nama_produk'] ;

                }else{
                    
                    if ($rowData['iSubmit'] == 0) {
                        $return = '<script>
                                    $( "button.icon_pop" ).button({
                                        icons: {
                                            primary: "ui-icon-newwin"
                                        },
                                        text: false
                                    })
                                </script>';
                    $return .= '<input type="hidden" name="'.$field.'" id="'.$id.'" class="input_rows1 required" value="'.$value.'" />
                                ';
                    $return .= '<input type="text" name="'.$field.'_dis" class="required" disabled="TRUE" id="'.$id.'_dis" class="input_rows1" size="45" value="'.$dataD['no_produk'].' - '.$dataD['nama_produk'].'"/>';
                    $return .= '&nbsp;<button class="icon_pop"  onclick="browse(\''.base_url().'processor/reformulasi/browse/request/product?field=request_refor\',\'List Product\')" type="button">&nbsp;</button>';                 
                    

                    
                    }else{
                        $return= $dataD['no_produk'].' - '.$dataD['nama_produk'] ;
                        $return .= '<input type="hidden" name="'.$field.'" id="'.$id.'" class="input_rows1 required" value="'.$value.'" />';
                    }
                    
                }
                
                return $return;
            }


            
            function insertBox_request_refor_iKey($field, $id) {
                $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<input type="text"   id="'.$id.'_dis" readonly="readony" class="input_rows1 required" size="10" />';
                return $return;
            }
            function updateBox_request_refor_iKey($field, $id, $value, $rowData) {
                if ($value==1) {
                    $pField =  'Refor Local';
                }else if ($value==2){
                    $pField =  'Refor Export';
                }else{
                    $pField =  '-';
                }
                if ($this->input->get('action') == 'view') {
                     $return= $pField; 
                }else{
                    $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                    $return .= '<input type="text"   id="'.$id.'_dis" readonly="readony" class="input_rows1 required" size="10" value="'.$pField.'" />';
              
                } 
                return $return;
            } 

            function insertBox_request_refor_vbatch_no($field, $id) {
                $return = '<script>
                                $( "button.icon_pop" ).button({
                                    icons: {
                                        primary: "ui-icon-newwin"
                                    },
                                    text: false
                                })
                            </script>';
                $return .= '<input type="hidden" name="'.$field.'" id="'.$id.'" class="input_rows1 required" />
                            ';
                $return .= '<input type="text" name="'.$id.'_dis" class="required" disabled="TRUE" id="'.$id.'_dis" class="input_rows1" size="45" />';
                $return .= '&nbsp;<button class="icon_pop"  onclick="browse(\''.base_url().'processor/reformulasi/browse/request/batch?field=request_refor\',\'List Batch\')" type="button">&nbsp;</button>';                
                
                return $return;
            }

            function updateBox_request_refor_vbatch_no($field, $id, $value, $rowData) {
                $sqlD = ' select * from kanban.kbn_mbr a where a.vBatch_no = "'.$value.'" ';
                $dataD = $this->db->query($sqlD)->row_array();


                
                if ($this->input->get('action') == 'view') {
                    $return= $dataD['vBatch_no'].' - '.$dataD['vNama'] ;

                }else{
                    
                    if ($rowData['iSubmit'] == 0) {
                        $return = '<script>
                                    $( "button.icon_pop" ).button({
                                        icons: {
                                            primary: "ui-icon-newwin"
                                        },
                                        text: false
                                    })
                                </script>';
                    $return .= '<input type="hidden" name="'.$field.'" id="'.$id.'" class="input_rows1 required" value="'.$value.'" />
                                ';
                    $return .= '<input type="text" name="'.$field.'_dis" class="required" disabled="TRUE" id="'.$id.'_dis" class="input_rows1" size="45" value="'.$dataD['vBatch_no'].' - '.$dataD['vNama'].'"/>';
                    $return .= '&nbsp;<button class="icon_pop"  onclick="browse(\''.base_url().'processor/reformulasi/browse/request/batch?field=request_refor\',\'List Batch\')" type="button">&nbsp;</button>';                 
                    

                    
                    }else{
                        $return= $dataD['vBatch_no'].' - '.$dataD['vNama'] ;
                        $return .= '<input type="hidden" name="'.$field.'" id="'.$id.'" class="input_rows1 required" value="'.$value.'" />';
                    }
                    
                }
                
                return $return;
            }  
            
            function insertBox_request_refor_vbatch_nox($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_vbatch_nox($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
           

            function insertBox_request_refor_cNIP($field, $id) {
                $iAm = $this->whoAmI($this->user->gNIP);
                $return = '<input type="hidden" name="'.$field.'" value="'.$iAm['cNip'].'" readonly="readonly" id="'.$id.'" class="  input_rows1 required" size="8" />';
                $return .= $iAm['vName'];
                return $return;
            }

            function updateBox_request_refor_cNIP($field, $id, $value, $rowData) {
                $iAm = $this->whoAmI($value);
                if ($this->input->get('action') == 'view') {
                    $return= $iAm['vName'];

                }
                else{
                    $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'" value="'.$value.'" readonly="readonly" class=" input_rows1 required" size="8" />';
                    $return .= $iAm['vName'];
                }
                return $return;
            }

            function insertBox_request_refor_idept_id($field, $id) {
                $iAm = $this->whoAmI($this->user->gNIP);
                $return = '<input type="hidden" name="'.$field.'" value="'.$iAm['iDepartementID'].'" readonly="readonly" id="'.$id.'" class="  input_rows1 required" size="8" />';
                $return .= $iAm['vdepartemen'];
                return $return;
            }

            function updateBox_request_refor_idept_id($field, $id, $value, $rowData) {
                $iAm = $this->whoAmI($rowData['cNIP']);
                if ($this->input->get('action') == 'view') {
                    $return= $iAm['vdepartemen'];

                }
                else{
                    $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'" value="'.$value.'" readonly="readonly" class=" input_rows1 required" size="8" />';
                    $return .= $iAm['vdepartemen'];
                }
                return $return;
            }

            function insertBox_request_refor_iteam_pd($field, $id) {
                $sql = "SELECT t.* FROM plc2.plc2_upb_team t
                        WHERE t.vtipe = 'PD' AND t.ldeleted = '0' AND t.iteam_id IN (1,2)";
                $teams = $this->db->query($sql)->result_array();
                $echo = '<select name="'.$id.'" id="'.$id.'">';
                $echo .= '<option value="">--Pilih--</option>';
                foreach($teams as $t) {
                    $echo .= '<option value="'.$t['iteam_id'].'">'.$t['vteam'].'</option>';
                }
                $echo .= '</select>';
                return $echo;
            }
            function updateBox_request_refor_iteam_pd($field, $id, $value, $rowData) {
                $sql = "SELECT t.* FROM plc2.plc2_upb_team t
                        WHERE t.vtipe = 'PD' AND t.ldeleted = '0' AND t.iteam_id IN (1,2) ";
                $teams = $this->db->query($sql)->result_array();
                $echo = '<select name="'.$id.'" id="'.$id.'">';
                $echo .= '<option value="">--Pilih--</option>';
                foreach($teams as $t) {
                    $selected = $rowData['iteam_pd'] == $t['iteam_id'] ? 'selected' : '';
                    $echo .= '<option '.$selected.' value="'.$t['iteam_id'].'">'.$t['vteam'].'</option>';
                }
                $echo .= '</select>';
                return $echo;
            }


            function insertBox_request_refor_tTanggal_usulan_refor($field, $id) {
                $return = '<input type="text" name="'.$field.'" value="'.date('Y-m-d').'" readonly="readonly" id="'.$id.'" class="  input_rows1 required" size="8" />';
                return $return;
            }

            function updateBox_request_refor_tTanggal_usulan_refor($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                    $return= $value;

                }
                else{
                    $return = '<input type="text" name="'.$field.'"  id="'.$id.'" value="'.$value.'" readonly="readonly" class=" input_rows1 required" size="8" />';
                }
                return $return;
            }

            
            function insertBox_request_refor_vAlasan_refor($field, $id) {
                $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250"></textarea>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 255);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(255 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">250</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_vAlasan_refor($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= '<label title="Note">'.nl2br($value).'</label>'; 
                }else{
                    $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250">'.nl2br($value).'</textarea>';
                } 
                return $return;
            }   
            
            
            
            function insertBox_request_refor_iStatus($field, $id) {
                $o='-';
                $o.='
                <script type="text/javascript">
                    // datepicker
                     $(".tanggal").datepicker({changeMonth:true,
                                                changeYear:true,
                                                dateFormat:"yy-mm-dd" });

                    // input number
                       $(".angka").numeric();
                </script>
                ';

                return $o;
            }

            function updateBox_request_refor_iStatus($field, $id, $value, $rowData) {
                if(($value <> 0) || (!empty($value))){
                    $sql_dtapp = 'select * 
                                from plc2.req_refor a 
                                join hrd.employee b on b.cNip=a.cApproval
                                where
                                a.lDeleted = 0
                                and  a.Req_refor_ID = "'.$rowData['Req_refor_ID'].'"';
                    $row = $this->db->query($sql_dtapp)->row_array();
                    if($value==2){
                        $st='<p style="color:green;font-size:120%;">Approved';
                        $ret= $st.' oleh '.$row['vName'].' pada '.$row['dApproval'].'</br> Alasan: '.$row['vRemark'].'</p>';
                    }
                    elseif($value==1){
                        $st='<p style="color:red;font-size:120%;">Rejected';
                        $ret= $st.' oleh '.$row['vName'].' pada '.$row['dApproval'].'</br> Alasan: '.$row['vRemark'].'</p>';
                    } 
                    
                }
                else{
                    $ret='Waiting for Approval';
                }
                

                $ret.='
                <script type="text/javascript">
                    // datepicker
                     $(".tanggal").datepicker({changeMonth:true,
                                                changeYear:true,
                                                dateFormat:"yy-mm-dd" });

                    // input number
                       $(".angka").numeric();
                </script>
                ';

                return $ret;
            }
           
            
            function insertBox_request_refor_iSubmit($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_request_refor_iSubmit($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_cApproved($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_cApproved($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_vreason_approved($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "200" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 200);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(200 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">200</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_vreason_approved($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "200"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 200) {
                                            this.value = this.value.substring(0, 200);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(200 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">200</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_cformulator($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_cformulator($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_istatus_terima_req($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_request_refor_istatus_terima_req($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_cApproved_terima($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_cApproved_terima($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_dApproved_terima($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dApproved_terima($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_vreason_terima($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "200" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 200);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(200 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">200</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_vreason_terima($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "200"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 200) {
                                            this.value = this.value.substring(0, 200);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(200 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">200</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_dTgl_rev_mbr($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dTgl_rev_mbr($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_vNo_cc($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_vNo_cc($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_dPengajuan_cc($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dPengajuan_cc($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_iStatus_cc($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_request_refor_iStatus_cc($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_dApproved_cc($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dApproved_cc($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_cApproved_cc($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_cApproved_cc($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_dUji_BE($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dUji_BE($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_dSelesai_uji_BE($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dSelesai_uji_BE($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_vNo_hasil_uji_BE($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_vNo_hasil_uji_BE($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_vHasil_uji_BE($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_request_refor_vHasil_uji_BE($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_iStatus_uji_BE($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_request_refor_iStatus_uji_BE($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_dApproved_uji_BE($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dApproved_uji_BE($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_cApproved_uji_BE($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_cApproved_uji_BE($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_dCreate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dCreate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_cCreated($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_cCreated($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_dupdate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_request_refor_dupdate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_request_refor_cUpdate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_request_refor_cUpdate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_request_refor_lDeleted($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_request_refor_lDeleted($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }

            function insertBox_request_refor_vFile($field, $id) {
                $data['date'] = date('Y-m-d H:i:s');    
                return $this->load->view('request_refor_file',$data,TRUE);
            }

            function updateBox_request_refor_vFile($field, $id, $value, $rowData) {
            
                $qr="select * from plc2.req_refor_file where Req_refor_ID='".$rowData['Req_refor_ID']."' and lDeleted=0";
                $data['rows'] = $this->db->query($qr)->result_array();
                $data['date'] = date('Y-m-d H:i:s');    
                return $this->load->view('request_refor_file',$data,TRUE);
            }

            function insertBox_request_refor_request_sample($field, $id) {
                 
                return 'Save First. !!';
            }

            function updateBox_request_refor_request_sample($field, $id, $value, $rowData) {
                
                if($rowData['iKey']==2){
                    // jika refor export, tampilkan list request sample
                    $qr="select * , if(a.iapppd=2,'Approved',if(a.iapppd=1,'Rejected','Waiting Approval')) as setatus 
                    from plc2.plc2_upb_request_sample a 
                    join plc2.plc2_upb_request_sample_detail b on b.ireq_id=a.ireq_id
                    join plc2.req_refor c on c.iKey=a.iKey and c.iNo_usulan=a.iupb_id
                    where a.ldeleted=0
                    and b.ldeleted=0
                    and c.lDeleted=0
                    and a.irefor=1
                    and a.iKey=2
                    and c.Req_refor_ID='".$rowData['Req_refor_ID']."'";

                    $data['rows'] = $this->db->query($qr)->result_array();
                    $data['date'] = date('Y-m-d H:i:s');    
                    return $this->load->view('request_refor_sample',$data,TRUE);

                }else{
                    return 'Jenis Refor Lokal tidak melalui request sample';
                }
                
            }

            

            
            
                //Ini Merupakan Standart Approve yang digunakan di erp
 
                function approve_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/request_refor";                             
                                            if(o.status == true) { 
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_request_refor").html(data);
                                                     
                                                });
                                                
                                            }
                                                reload_grid("grid_request_refor");
                                        }
                                        
                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Approve</h1><br />';
                    $echo .= '<form id="form_request_refor_approve" action="'.base_url().'processor/reformulasi/request_refor?action=approve_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark : 
                            <input type="hidden" name="Req_refor_ID" value="'.$this->input->get('Req_refor_ID').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_request_refor_approve\')">Approve</button>';
                        
                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                } 
 
                function approve_process() {
                    
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $Req_refor_ID = $post['Req_refor_ID'];
                    $lvl = $post['lvl'];
                    $vRemark_uji = $post['vRemark'];
                    


                    
                    $data=array('iStatus'=>'2','cApproval'=>$cNip , 'dApproval'=>date('Y-m-d H:i:s'), 'vRemark'=>$vRemark_uji);
                    $this -> db -> where('Req_refor_ID', $Req_refor_ID);
                    $updet = $this -> db -> update('plc2.req_refor', $data);


                    if($updet){

                        


                        
                            $qsql="select *, if(a.iStatus=2,'Approved','Rejected') as setatus 
                                    from plc2.req_refor a 
                                    join hrd.employee b on b.cNip=a.cNIP
                                    where a.Req_refor_ID='".$Req_refor_ID."'";
                        
                            $rsql = $this->db->query($qsql)->row_array();

                            $pkProd = $rsql['iNo_usulan'];
                            if ($rsql['iKey']==2) {
                                /*update UPB / UPD menjadi status refor */
                                $data=array('irefor'=>'1');
                                $this -> db -> where('idossier_upd_id', $pkProd);
                                $updet = $this -> db -> update('dossier.dossier_upd', $data);    
                            }else{
                                /*update UPB / UPD menjadi status refor */
                                $data=array('irefor'=>'1');
                                $this -> db -> where('iupb_id', $pkProd);
                                $updet = $this -> db -> update('plc2.plc2_upb', $data);    
                            }
                            



                            $Requestor = $this->whoAmI($rsql['cNIP']);
                            $logged_nip = $this->user->gNIP;
                            $iAm = $this->whoAmI($logged_nip);

                            

                            $to = $cc = '';
                            
                            $to = $Requestor['vEmail'];
                            $cc = $iAm['vEmail'];

                           /* echo $to;
                            echo "<br>";
                            echo $cc;*/
                            
                          
                            $subject="Approval Reformulasi: No Request ".$rsql['vNo_req_refor'];

                                $content="
                                Diberitahukan bahwa telah ada Approval Reformulasi, dari permintaan reformulasi yang anda buat. 
                                    dengan rincian sebagai berikut :<br><br>  
                                    <table border='0' style='width: 600px;'>
                                        <tr>
                                                <td style='width: 110px;'><b>Requestor </b></td><td style='width: 20px;'> : </td>
                                                <td>".$rsql['cNip'].' || '.$rsql['vName']."</td>
                                        </tr>
                                        <tr>
                                                <td><b>No Request  </b></td><td> : </td>
                                                <td>".$rsql['vNo_req_refor']."</td>
                                        </tr> 
                                        <tr>
                                                <td><b>Status  </b></td><td> : </td>
                                                <td>".$rsql['setatus']."</td>
                                        </tr> 
                                    </table> 
                                <br/> 
                                Link Aplikasi : www.npl-net.com/erp <br>
                                Menu : Reformulasi - Transaksi - Request Reformulasi
                                <br/> <br/>
                                Demikian, mohon segera follow up  pada aplikasi ERP Reformulasi. Terimakasih.<br><br><br>
                                Post Master"; 
                                //echo $content;
                                 $this->lib_utilitas->send_email($to, $cc, $subject, $content);

                            


                    }

                    $data['status']  = true;
                    $data['last_id'] = $post['Req_refor_ID'];
                    return json_encode($data);


                }
            

        
            
                //Ini Merupakan Standart Reject yang digunakan di erp

                function reject_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    var remark = $("#request_refor_remark").val();
                                    if (remark=="") {
                                        alert("Remark tidak boleh kosong ");
                                        return
                                    }

                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/request_refor";                             
                                            if(o.status == true) { 
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_request_refor").html(data);
                                                     
                                                });
                                                
                                            }
                                                reload_grid("grid_request_refor");
                                        }
                                        
                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Reject</h1><br />';
                    $echo .= '<form id="form_request_refor_reject" action="'.base_url().'processor/reformulasi/request_refor?action=reject_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark : 
                            <input type="hidden" name="Req_refor_ID" value="'.$this->input->get('Req_refor_ID').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark" id="reject_request_refor_remark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_request_refor_reject\')">Reject</button>';
                        
                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                }


                
                function reject_process() {
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $Req_refor_ID = $post['Req_refor_ID'];
                    $lvl = $post['lvl'];
                    $vRemark_uji = $post['vRemark'];

                    
                    $data=array('iStatus'=>'1','cApproval'=>$cNip , 'dApproval'=>date('Y-m-d H:i:s'), 'vRemark'=>$vRemark_uji);
                    $this -> db -> where('Req_refor_ID', $Req_refor_ID);
                    $updet = $this -> db -> update('plc2.req_refor', $data);

                    if($updet){

                        


                        
                            $qsql="select *, if(a.iStatus=2,'Approved','Rejected') as setatus 
                                    from plc2.req_refor a 
                                    join hrd.employee b on b.cNip=a.cNIP
                                    where a.Req_refor_ID='".$Req_refor_ID."'";
                        
                            $rsql = $this->db->query($qsql)->row_array();

                            $pkProd = $rsql['iNo_usulan'];
                            if ($rsql['iKey']==2) {
                                /*update UPB / UPD menjadi status refor */
                                $data=array('irefor'=>'1');
                                $this -> db -> where('idossier_upd_id', $pkProd);
                                $updet = $this -> db -> update('dossier.dossier_upd', $data);    
                            }else{
                                /*update UPB / UPD menjadi status refor */
                                $data=array('irefor'=>'1');
                                $this -> db -> where('iupb_id', $pkProd);
                                $updet = $this -> db -> update('plc2.plc2_upb', $data);    
                            }
                            



                            $Requestor = $this->whoAmI($rsql['cNIP']);
                            $logged_nip = $this->user->gNIP;
                            $iAm = $this->whoAmI($logged_nip);

                            

                            $to = $cc = '';
                            
                            $to = $Requestor['vEmail'];
                            $cc = $iAm['vEmail'];

                           /* echo $to;
                            echo "<br>";
                            echo $cc;*/
                            
                          
                            $subject="Approval Reformulasi: No Request ".$rsql['vNo_req_refor'];

                                $content="
                                Diberitahukan bahwa telah ada Approval Reformulasi, dari permintaan reformulasi yang anda buat. 
                                    dengan rincian sebagai berikut :<br><br>  
                                    <table border='0' style='width: 600px;'>
                                        <tr>
                                                <td style='width: 110px;'><b>Requestor </b></td><td style='width: 20px;'> : </td>
                                                <td>".$rsql['cNip'].' || '.$rsql['vName']."</td>
                                        </tr>
                                        <tr>
                                                <td><b>No Request  </b></td><td> : </td>
                                                <td>".$rsql['vNo_req_refor']."</td>
                                        </tr> 
                                        <tr>
                                                <td><b>Status  </b></td><td> : </td>
                                                <td>".$rsql['setatus']."</td>
                                        </tr> 
                                    </table> 
                                <br/> 
                                Link Aplikasi : www.npl-net.com/erp <br>
                                Menu : Reformulasi - Transaksi - Request Reformulasi
                                <br/> <br/>
                                Demikian, mohon segera follow up  pada aplikasi ERP Reformulasi. Terimakasih.<br><br><br>
                                Post Master"; 
                                //echo $content;
                                 $this->lib_utilitas->send_email($to, $cc, $subject, $content);

                            


                    }
                    
                    $data['status']  = true;
                    $data['last_id'] = $post['Req_refor_ID'];
                    return json_encode($data);
                }
            

        
            //Standart Setiap table harus memiliki dCreate , cCreated, dupdate, cUpdate
            function before_insert_processor($row, $postData) {
                $postData['dCreate'] = date('Y-m-d H:i:s');
                $postData['cCreated']=$this->user->gNIP;

                if($postData['isdraft']==true){
                    $postData['iSubmit']=0;
                } 
                else{$postData['iSubmit']=1;} 



                if ( $postData['iKey'] == 1 ) {
                    // Local
                    $sqCekLast = 'select a.vNo_req_refor,a.iKey,a.* from plc2.req_refor a where a.iKey=1 order by a.Req_refor_ID DESC limit 1';
                    $dataLast = $this->db->query($sqCekLast)->row_array(); 

                    //$kode = substr($dataLast['vNo_req_refor'], 0,3);
                    $kode = 'RFL';
                    $nomorLast = substr($dataLast['vNo_req_refor'], 3,5);
                    $nomorNow = $nomorLast+1;

                }else{
                    // Eksport
                    $sqCekLast = 'select a.vNo_req_refor,a.iKey,a.* from plc2.req_refor a where a.iKey=2 order by a.Req_refor_ID DESC limit 1';
                    $dataLast = $this->db->query($sqCekLast)->row_array();                     
                    //$kode = substr($dataLast['vNo_req_refor'], 0,3);
                    $kode = 'RFE';
                    $nomorLast = substr($dataLast['vNo_req_refor'], 3,5);
                    $nomorNow = $nomorLast+1;

                }

                $nomor =  $kode.str_pad($nomorNow, 5, "0", STR_PAD_LEFT);

                $postData['vNo_req_refor']=$nomor;

                /*$nomor =  $kode.str_pad($nomorNow, 5, "0", STR_PAD_LEFT);
                $sql = "UPDATE plc2.req_refor SET vNo_req_refor = '".$nomor."' WHERE Req_refor_ID=$id LIMIT 1";
                $query = $this->db->query( $sql );*/


                return $postData;

            }
            function before_update_processor($row, $postData) {
                $postData['dupdate'] = date('Y-m-d H:i:s');
                $postData['cUpdate'] = $this->user->gNIP;

                if($postData['isdraft']==true){
                    $postData['iSubmit']=0;
                } 
                else{$postData['iSubmit']=1;} 


                return $postData; 
            }    
        
            function after_insert_processor($fields, $id, $postData) {

                // kirim email ketika submit
                
                        $logged_nip =$this->user->gNIP;
                        $iAm = $this->whoAmI($logged_nip);
                        $myUpper = $this->whoAmI($iAm['cUpper']);
                        $pk=$id;

                        $iSubmit = $postData['iSubmit'];

                        if ($iSubmit > 0) {
                         
                            
                            $qsql="select * 
                                    from plc2.req_refor a 
                                    join hrd.employee b on b.cNip=a.cNIP
                                    where a.Req_refor_ID='".$pk."'";
                            $rsql = $this->db->query($qsql)->row_array();
                            
                            $teamPD = $rsql['iteam_pd'] ;

                            $toEmail2='';
                            $toEmail = $this->lib_utilitas->get_email_team( $teamPD );
                            $toEmail2 = $this->lib_utilitas->get_email_leader( $teamPD );                        


                            $to = $cc = '';
                            
                            //$to = $myUpper['vEmail'];
                            $to = $toEmail2;
                            //$cc = $iAm['vEmail'];
                            $cc = $toEmail.';'.$iAm['vEmail'];

                            $subject="Request Reformulasi: No Request ".$rsql['vNo_req_refor'];

                                $content="
                                Diberitahukan bahwa telah ada permintaan Reformulasi, dan membutuhkan Approval Bpk/Ibu. 
                                    dengan rincian sebagai berikut :<br><br>  
                                    <table border='0' style='width: 600px;'>
                                        <tr>
                                                <td style='width: 110px;'><b>Requestor </b></td><td style='width: 20px;'> : </td>
                                                <td>".$rsql['cNip'].' || '.$rsql['vName']."</td>
                                        </tr>
                                        <tr>
                                                <td><b>No Request  </b></td><td> : </td>
                                                <td>".$rsql['vNo_req_refor']."</td>
                                        </tr> 
                                    </table> 
                                <br/> 
                                Link Aplikasi : http://www.npl-net.com/erp/<br>
                                Menu : Reformulasi - Transaksi - Request Reformulasi
                                <br/> <br/>
                                Demikian, mohon segera follow up  pada aplikasi ERP Reformulasi. Terimakasih.<br><br><br>
                                Post Master"; 

                                $this->lib_utilitas->send_email($to, $cc, $subject, $content);

                        }
                        
                            
                        
                

            }
    
            function after_update_processor($fields, $id, $postData) {
                //Example After Update
                /*
                $cNip = $this->sess_auth->gNIP; 
                $sql = 'Place Query In Here';
                $this->dbset->query($sql);
                */

                        // kirim email ketika submit
        
                $logged_nip =$this->user->gNIP;
                $iAm = $this->whoAmI($logged_nip);
                $myUpper = $this->whoAmI($iAm['cUpper']);
                $pk=$id;

                $iSubmit = $postData['iSubmit'];

                if ($iSubmit > 0) {
                 
                    
                    $qsql="select * 
                            from plc2.req_refor a 
                            join hrd.employee b on b.cNip=a.cNIP
                            where a.Req_refor_ID='".$pk."'";
                    $rsql = $this->db->query($qsql)->row_array();
                    
                    $teamPD = $rsql['iteam_pd'] ;

                    $toEmail2='';
                    $toEmail = $this->lib_utilitas->get_email_team( $teamPD );
                    $toEmail2 = $this->lib_utilitas->get_email_leader( $teamPD );                        


                    $to = $cc = '';
                    
                    //$to = $myUpper['vEmail'];
                    $to = $toEmail2;
                    //$cc = $iAm['vEmail'];
                    $cc = $toEmail.';'.$iAm['vEmail'];

                    $subject="Request Reformulasi: No Request ".$rsql['vNo_req_refor'];

                        $content="
                        Diberitahukan bahwa telah ada permintaan Reformulasi, dan membutuhkan Approval Bpk/Ibu. 
                            dengan rincian sebagai berikut :<br><br>  
                            <table border='0' style='width: 600px;'>
                                <tr>
                                        <td style='width: 110px;'><b>Requestor </b></td><td style='width: 20px;'> : </td>
                                        <td>".$rsql['cNip'].' || '.$rsql['vName']."</td>
                                </tr>
                                <tr>
                                        <td><b>No Request  </b></td><td> : </td>
                                        <td>".$rsql['vNo_req_refor']."</td>
                                </tr> 
                            </table> 
                        <br/> 
                        Link Aplikasi : http://www.npl-net.com/erp/<br>
                        Menu : Reformulasi - Transaksi - Request Reformulasi
                        <br/> <br/>
                        Demikian, mohon segera follow up  pada aplikasi ERP Reformulasi. Terimakasih.<br><br><br>
                        Post Master"; 

                        $this->lib_utilitas->send_email($to, $cc, $subject, $content);

                }

            }

            function manipulate_insert_button($buttons) {
                unset($buttons['save']);


                $save_draft = '<button onclick="javascript:save_draft_btn_multiupload(\'request_refor\', \''.base_url().'processor/reformulasi/request/refor?draft=true\', this, true)" class="ui-button-text icon-save" id="button_save_draft_request_refor">Save as Draft</button>';
                $save = '<button onclick="javascript:save_btn_multiupload(\'request_refor\', \''.base_url().'processor/reformulasi/request/refor?company_id='.$this->input->get('company_id').'&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this)" class="ui-button-text icon-save" id="button_save_request_refor">Save &amp; Submit</button>';
                $js = $this->load->view('js/request_refor_js');
                $js .= $this->load->view('js/upload_js');
                $buttons['save'] = $save_draft.$save.$js;

                return $buttons;
            }


            function manipulate_update_button($buttons, $rowData) { 
                //Load Javascript In Here 
                $logged_nip =$this->user->gNIP;
                $Requestor = $this->whoAmI($rowData['cNIP']);
                $iSubmit = $rowData['iSubmit'];


                $update = '<button onclick="javascript:update_btn_back(\'request_refor\', \''.base_url().'processor/reformulasi/request/refor?company_id='.$this->input->get('company_id').'&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this)" class="ui-button-text icon-save" id="button_save_request_refor">Update & Submit</button>';
                $updatedraft = '<button onclick="javascript:update_draft_btn(\'request_refor\', \''.base_url().'processor/reformulasi/request/refor?company_id='.$this->input->get('company_id').'&draft=true&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this, true)" class="ui-button-text icon-save" id="button_save_request_refor">Update as Draft</button>';


               // $reqBB = '<button id="2476" rel="plc/sample/permintaan/sample" style="cursor:pointer;" group="47" class="ui-button-text icon-save" >Permintaan Sample</button>';
                
                $reqBB1 = '<span class="file ui-button-text icon-save" id="2476" rel="plc/sample/permintaan/sample" style="cursor:pointer;" group="47">Permintaan Sample</span>';
                $reqBB = '<span class="file ui-button-text ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary" id="2476" rel="plc/sample/permintaan/sample" style="cursor:pointer;" group="47" role="button" aria-disabled="false"><span class="ui-button-icon-primary "></span><span class="ui-button-text">Permintaan Sample</span></span>';

                $approve = '<button onclick="javascript:load_popup(\''.base_url().'processor/reformulasi/request/refor?action=approve&Req_refor_ID='.$rowData['Req_refor_ID'].'&cNip='.$logged_nip.'&lvl=1&status=1&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\')" class="ui-button-text icon-save" id="button_approve_request_refor">Approve</button>';
                $reject = '<button onclick="javascript:load_popup(\''.base_url().'processor/reformulasi/request/refor?action=reject&Req_refor_ID='.$rowData['Req_refor_ID'].'&cNip='.$logged_nip.'&lvl=1&status=1&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\')" class="ui-button-text icon-save" id="button_reject_request_refor">Reject</button>';
                $js = $this->load->view('js/request_refor_js');
                $js .= $this->load->view('js/upload_js');

                if ($this->input->get('action') == 'view') {
                    
                    if($iSubmit > 0){
                        $buttons['update'] = $reqBB.$js;    
                    }else{
                        unset($buttons['update']);
                    }
                    
                }
                else{ 
                    $le_manager = false;
                    if($this->auth_localnon->is_manager()){
                        $x=$this->auth_localnon->dept();
                        $manager=$x['manager'];
                        if(in_array('PD', $manager)){
                            $type='PD';
                            $le_manager = true;
                        }
                        else{$type='';}
                    }
                    else{
                        $x=$this->auth_localnon->dept();
                        $team=$x['team'];
                        if(in_array('PD', $team)){
                            $type='PD';
                        }
                        else{$type='';}
                    }

                    if ($type=='PD') {

                        $logged_nip =$this->user->gNIP;
                        $Requestor = $this->whoAmI($row->cNIP);
                        
                        /*if($iSubmit > 0){
                            //sudah submit
                            if ($Requestor['cUpper'] == $logged_nip ) {
                                // atasan requestor
                                if($rowData['iStatus'] == 0){
                                    // belum approval
                                    $buttons['update'] = $reqBB.$reject.$approve.$js;
                                }else{
                                    unset($buttons['update']);        

                                }
                            }else{
                                $buttons['update'] = $reqBB.$js;
                            }
                        
                            
                        }else{
                            // masih draft
                            $buttons['update'] = $updatedraft.$update.$js;
                        }*/

                        if($iSubmit > 0){
                            //if ($Requestor['cUpper'] == $logged_nip ) {
                            if ($le_manager) {
                                // atasan requestor, diganti jadi manager PD
                                if($rowData['iStatus'] == 0){
                                    // belum approval
                                    // cek jenis refor lokal atau export
                                    if ($rowData['iKey']==2) {
                                        // jika export
                                        // cek sudah ada permintaan sample apa belum
                                        $qr="select *, if(a.iapppd=2,'Approved',if(a.iapppd=1,'Rejected','Waiting Approval')) as setatus 
                                            from plc2.plc2_upb_request_sample a 
                                            join plc2.plc2_upb_request_sample_detail b on b.ireq_id=a.ireq_id
                                            join plc2.req_refor c on c.iKey=a.iKey and c.iNo_usulan=a.iupb_id
                                            where a.ldeleted=0
                                            and b.ldeleted=0
                                            and c.lDeleted=0
                                            and a.irefor=1
                                            and a.iKey=2
                                            and c.Req_refor_ID='".$rowData['Req_refor_ID']."'
                                            ";
                                        $datas = $this->db->query($qr)->result_array();
                                        if (empty($datas)) {
                                            $buttons['update'] = $reqBB.$js;
                                            
                                        }else{
                                            // sudah ada permintaan sample
                                            $buttons['update'] = $reqBB.$reject.$approve.$js;
                                        }

                                    }else{
                                        $buttons['update'] = $reqBB.$reject.$approve.$js;
                                    }
                                    

                                    

                                }else{
                                    unset($buttons['update']);               
                                }
                            }else{
                                $buttons['update'] = $reqBB.$js;
                                
                            }
                            
                            //sudah submit
                        }else{
                            // masih draft
                            $buttons['update'] = $updatedraft.$update.$js;

                        }

                        
                    }else{
                        // tidak masuk team PD
                        unset($buttons['update']);   

                    }


                    

                        
                }
                
                return $buttons;
            }
            function download($vFilename) {
                $this->load->helper('download');        
                $name = $vFilename;
                $id = $_GET['id'];
                $tempat = $_GET['path'];
                $path = file_get_contents('./files/reformulasi/'.$tempat.'/'.$id.'/'.$name);    
                force_download($name, $path);
            }

            function readDirektory($path, $empty="") {
                $vFilename = array();
                        
                if (empty($empty)) {
                    if ($handle = opendir($path)) {     
                        while (false !== ($entry = readdir($handle))) {
                           if ($entry != '.' && $entry != '..' && $entry != '.svn') {                   
                                //unlink($path."/".$entry);
                                $vFilename[] = $entry;
                            }
                        }       
                        closedir($handle);
                    }
                        
                    $x =  $vFilename;
                } else {
                    if ($handle = opendir($path)) {     
                        while (false !== ($entry = readdir($handle))) {
                           if ($entry != '.' && $entry != '..' && $entry != '.svn') {                   
                                //echo $path."/".$entry;
                                unlink($path."/".$entry);                   
                            }
                        }       
                        closedir($handle);
                    }
                    
                    $x = "";
                }
                
                return $x;
            }

            function hapusfile($path, $file_name, $table, $lastId){
                $path = $path."/".$lastId;
                $path = str_replace("\\", "/", $path);
                //echo 'aa : '.$file_name;
                //
                if (is_array($file_name)) {
                                
                    $list_dir  = $this->readDirektory($path);
                    $list_sql  = $this->readSQL($table, $lastId);
                    asort($file_name);      
                    asort($list_dir);       
                    asort($list_sql);
                    
                    //print_r($list_dir);
                    //print_r($list_sql);
                    //print_r($file_name);
                    //$del = array();
                    foreach($list_dir as $v) {              
                        if (!in_array($v, $file_name)) {                
                            unlink($path.'/'.$v);   
                        }           
                    }
                    foreach($list_sql as $v) {
                        if (!in_array($v, $file_name)) {                
                            $del = "delete from plc2.".$table." where Req_refor_ID = {$lastId} and vFilename= '{$v}'";
                            mysql_query($del);  
                        }
                        
                    }
                    
                    //print_r($del);
                    //exit;
                } else {
                    $this->readDirektory($path, 1);
                    $this->readSQL($table, $lastId, 1);
                }
            } 

            function readSQL($table, $lastId, $empty="") {
                $list_file = array();
                if (empty($empty)) {
                    $sql = "SELECT vFilename from plc2.".$table." where Req_refor_ID=".$lastId;
                    $query = mysql_query($sql);
                    while($row = mysql_fetch_array($query, MYSQL_ASSOC)) {  
                        $list_file[] = $row['vFilename'];
                    }
                    
                    $x = $list_file;
                } else {            
                    $sql = "SELECT vFilename from plc2.".$table." where Req_refor_ID=".$lastId;
                    $query = mysql_query($sql);
                    $sql2 = array();
                    while($row = mysql_fetch_array($query, MYSQL_ASSOC)) {
                        $sql2[] = "DELETE FROM plc2.".$table." where Req_refor_ID=".$lastId." and vFilename='".$row['vFilename']."'";         
                    }
                    
                    foreach($sql2 as $q) {
                        try {
                            mysql_query($q);
                        }catch(Exception $e) {
                            die($e);
                        }
                    }
                    
                  $x = "";
                }
                
                return $x;
            } 




            //Output
            public function output(){
                $this->index($this->input->get('action'));
            }
        }