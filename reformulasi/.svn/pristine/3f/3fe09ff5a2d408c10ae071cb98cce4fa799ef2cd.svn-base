 
        <?php
        /* Generated by Sovdev 2 ERP CRUD Generator 2017-11-21 14:15:43 */
        /* Location: ./modules/reformulasi/controllers/lokal_maping_proses.php */
        /* Please DO NOT modify this information : */ 
         
        if ( ! defined('BASEPATH')) exit('No direct script access allowed');
        class lokal_maping_proses extends MX_Controller {
            function __construct() {
                parent::__construct();
                $this->load->library('auth_local');
                $this->db = $this->load->database('formulasi', false, true);
                $this->user = $this->auth_local->user();
                $this->arrEmployee = array(); 
                $this->arrEmployeeUpper = array();
            }
            function index($action = '') {
                $action = $this->input->get('action');
                //Bikin Object Baru Nama nya $grid      
                $grid = new Grid;
                $grid->setTitle('Mapping Proses Reformulasi Lokal');
                $grid->setTable('reformulasi.local_req_refor');      
                $grid->setUrl('lokal_maping_proses');

                //List Table
                
                //$grid->addList('vNo_req_refor','vNo_deviasi','itemas.c_itnam','vBatch_no','isubmit_maping'); 
                //Revisi 2018-01-15 by : Achmad Aries Pirnando
                $grid->addList('vNo_req_refor','vNo_deviasi','itemas.c_itnam','isubmit_maping'); 
                $grid->setSortBy('iLocal_req_refor');
                $grid->setSortOrder('desc');  

                //List field
                // $grid->addFields('vNo_req_refor','c_iteno','vBatch_no','cInisiator','cdapart','vAlasan_refor','iupload_f','iteam_pd',
                //     'dRequest','iStatus','cFormulator','iUji_be','imaping_d'); 

                //Revisi 2018-01-15 by : Achmad Aries Pirnando
                $grid->addFields('vNo_req_refor','c_iteno','cInisiator','cdapart','vAlasan_refor','iupload_f','iteam_pd',
                    'dRequest','iStatus','cFormulator','iUji_be','imaping_d'); 

                //Setting Grid Width Name 
                /*
                    Kamu bisa merubah nama label dari sini, Contoh :
                    $grid->setLabel('nama field','nama field yang akan diubah');

                */
                
                $grid->setWidth('iStatus', '100');
                $grid->setAlign('iStatus', 'left');
                $grid->setLabel('iStatus','Approval Atasan Inisiator');

                $grid->setWidth('isubmit_maping', '200');
                $grid->setAlign('isubmit_maping', 'left');
                $grid->setLabel('isubmit_maping','Status'); 


                $grid->setWidth('iupload_f', '100');
                $grid->setAlign('iupload_f', 'left');
                $grid->setLabel('iupload_f','Upload File');

                $grid->setWidth('iteam_pd', '100');
                $grid->setAlign('iteam_pd', 'left');
                $grid->setLabel('iteam_pd','Team PD');

                $grid->setWidth('dRequest', '100');
                $grid->setAlign('dRequest', 'left');
                $grid->setLabel('dRequest','Tanggal Permintaan Refor Lokal');

                $grid->setWidth('vNo_req_refor', '100');
                $grid->setAlign('vNo_req_refor', 'left');
                $grid->setLabel('vNo_req_refor','No Request');
            
                $grid->setWidth('vNo_deviasi', '100');
                $grid->setAlign('vNo_deviasi', 'left');
                $grid->setLabel('vNo_deviasi','No Memo');
            
                $grid->setWidth('c_iteno', '100');
                $grid->setAlign('c_iteno', 'left');
                $grid->setLabel('c_iteno','Nama Product');

                $grid->setWidth('cIteno', '300');
                $grid->setAlign('cIteno', 'left');
                $grid->setLabel('cIteno','Nama Product'); 
            
                $grid->setWidth('iUji_be', '100');
                $grid->setAlign('iUji_be', 'left');
                $grid->setLabel('iUji_be','Perlu Uji BE'); 

                $grid->setWidth('vBatch_no', '100');
                $grid->setAlign('vBatch_no', 'left');
                $grid->setLabel('vBatch_no','No Batch');
                
                $grid->setWidth('cFormulator', '100');
                $grid->setAlign('cFormulator', 'left');
                $grid->setLabel('cFormulator','Nama Formulator'); 

                $grid->setWidth('cInisiator', '100');
                $grid->setAlign('cInisiator', 'left');
                $grid->setLabel('cInisiator','Nama Inisiator'); 

                $grid->setWidth('imaping_d', '100');
                $grid->setAlign('imaping_d', 'left');
                $grid->setLabel('imaping_d','Maping Proses');

                $grid->setWidth('cdapart', '100');
                $grid->setAlign('cdapart', 'left');
                $grid->setLabel('cdapart','Dapartement'); 

                $grid->setWidth('vAlasan_refor', '100');
                $grid->setAlign('vAlasan_refor', 'left');
                $grid->setLabel('vAlasan_refor','Alasan Refor');

                $grid->setWidth('itemas.c_itnam', '100');
                $grid->setAlign('itemas.c_itnam', 'left');
                $grid->setLabel('itemas.c_itnam','Nama Product');


                $grid->changeFieldType('isubmit_maping','combobox','',array(''=>'--Selected--',0=>'Draft - Need to be Publish',1=>'Submitted'));
                $grid->setJoinTable('sales.itemas', 'itemas.c_iteno = local_req_refor.cIteno', 'inner');
                
                $le_manager = false;
                if($this->auth_local->is_manager()){
                    $x=$this->auth_local->dept();
                    $manager=$x['manager'];
                    if(in_array('MIS', $manager)){
                        $type='MIS';
                        $le_manager = true;
                    }
                    else{$type='';}
                }
                else{
                    $x=$this->auth_local->dept();
                    $team=$x['team'];
                    if(in_array('MIS', $team)){
                        $type='MIS';
                    }
                    else{$type='';}
                }

                if($type == 'MIS'){

                    // jika group MIS maka buka semua
                }else{ 
                    // grid row hanya formulator sesuai login , atau upper dengan keperluan untuk approval 
                    $callchild = $this->_child($this->user->gNIP);
                                      
                    $arrnip = '';
                    foreach ($this->arrEmployee as $key => $nipchild) {
                        if ($key >0 ) {
                            $arrnip .= ",'".$nipchild['nip']."'";
                        }else{
                            $arrnip .= "'".$nipchild['nip']."'";
                        }
                    }
                    $grid->setQuery('(cFormulator = "'.$this->user->gNIP.'") or ( cFormulator in ('.$arrnip.') ) ', null); 

                }
                $grid->setQuery('local_req_refor.lDeleted = 0 ', null);
                $grid->setQuery('iStatus_terima_req = 1 ', null);
                
            
                //Example modifikasi GRID ERP
                /*
                    - Set Query
                        $grid->setQuery('lDeleted = 0 ', null); 
                        $grid->setQuery('plc2_upb.iupb_id IN (select distinct(bk.iupb_id) from plc2.plc2_upb_spesifikasi_fg bk where bk.iappqa=2 and bk.ldeleted=0)', null);  

                    - Join Table
                        $grid->setJoinTable('hrd.employee', 'employee.cNip = pk_master.vnip', 'inner');

                    - Change Field Name
                        $grid->changeFieldType('ideleted','combobox','',array(''=>'Pilih',0=>'Aktif',1=>'Tidak aktif'));
                */

                 //set search
                $grid->setSearch('vNo_req_refor','vNo_deviasi','itemas.c_itnam','vBatch_no','isubmit_maping');
                //$grid->setSearch('vNo_req_refor','vNo_deviasi','c_iteno','iUji_be','dCreate','cCreated','dupdate','cUpdate','lDeleted');
                
                //set required
                $grid->setRequired('vNo_req_refor','vNo_deviasi','c_iteno','iUji_be','dCreate','cCreated','dupdate','cUpdate','lDeleted'); 

                $grid->setGridView('grid');

                switch ($action) {
                    case 'json':
                            $grid->getJsonData();
                            break;
                    case 'view':
                            $grid->render_form($this->input->get('id'), true);
                            break;
                    case 'create':
                            $grid->render_form();
                            break;
                    case 'createproses':
                            echo $grid->saved_form();
                            break;
                    case 'update':
                            $grid->render_form($this->input->get('id'));
                            break;
                    case 'updateproses':
                            echo $grid->updated_form(); 
                            break;
                    case 'delete':
                            echo $grid->delete_row();
                            break; 
                    /*
                        //Ini Merupakan Standart Case Untuk Approve

                        case 'approve':
                            echo $this->approve_view();
                            break;
                        case 'approve_process':
                            echo $this->approve_process();
                            break;
                        case 'reject':
                            echo $this->reject_view();
                            break;
                        case 'reject_process':
                            echo $this->reject_process();
                            break; 
                    */ 
                    default:
                            $grid->render_grid();
                            break;
                }
            }
            //Create Manipulate Field 

            //Jika Ingin Menambahkan Seting grid seperti button edit enable dalam kondisi tertentu
            function _child ($nip){ 
                $sql = "SELECT cNip, vName 
                            FROM hrd.employee 
                            WHERE cUpper = '$nip' 
                            AND dresign = '0000-00-00'
                            ORDER BY vName ASC";
                $dt_cek = $this->db->query($sql)->result_array();     
                if(!empty($dt_cek)){ 
                    foreach($dt_cek as $x){
                        $isi['nip'] = $x['cNip'];
                        $isi['name'] = $x['vName'];
                        array_push($this->arrEmployee, $isi);
                        $this->_child($x['cNip']);
                    } 
                } 
            }

            function _upper ($nip){ 
                $sql = "SELECT cUpper, vName 
                            FROM hrd.employee a
                            join hrd.position b on b.iPostID=a.iPostID
                            WHERE a.cNip = '$nip' 
                            AND a.dresign = '0000-00-00'
                            and b.iLvlemp <= 6
                            ORDER BY vName ASC";
                $dt_cek = $this->db->query($sql)->result_array();     
                if(!empty($dt_cek)){ 
                    foreach($dt_cek as $x){
                        $isi['nip'] = $x['cUpper'];
                        array_push($this->arrEmployeeUpper, $isi);
                        $this->_upper($x['cUpper']);
                    } 
                } 
            }
            function listBox_Action($row, $actions) {

                if ($row->isubmit_maping==1) { 
                    unset($actions['edit']);
                }else{
                    if($row->cFormulator <> $this->user->gNIP){
                        if($this->auth_local->is_manager()){ 
                            unset($actions['edit']);
                        } 
                    }
                    
                }
                return $actions;
            } 
            
            function listBox_lokal_maping_proses_cIteno($value) { 
                $itname = "SELECT i.`c_itnam` FROM sales.`itemas` i WHERE i.`lDeleted` = 0 AND i.`c_iteno` = '".$value."'";
                $c_itnam = $this->db->Query($itname)->row_array();
                if(empty($c_itnam['c_itnam'])){
                    $c_itnam['c_itnam'] = '-';
                }
                return $c_itnam['c_itnam'];
            }


            function insertBox_lokal_maping_proses_vAlasan_refor($field, $id) {
                $o  = "<textarea name='".$id."' id='".$id."' class='' style='width: 240px; height: 50px;'size='250'></textarea>";        
                $o .= " ";                            
                return $o;
            }

            function updateBox_lokal_maping_proses_vAlasan_refor($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {  
                    $o = "<label title='Note'>".nl2br($rowData['vAlasan_refor'])."</label>";
                
                }else{
                    if($value=""){
                        $o = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.nl2br($rowData['vAlasan_refor']).'"/>';
                        $o .= " "; 
                    }else{
                        $o = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.nl2br($rowData['vAlasan_refor']).'"/>';
                        $o .= "<label title='Note'>".nl2br($rowData['vAlasan_refor'])."</label>";
                    }
                    
                }

                return $o;
            }

            function insertBox_lokal_maping_proses_imaping_d($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_lokal_maping_proses_imaping_d($field, $id, $value, $rowData) {
                $sq_all='SELECT * FROM reformulasi.`master_proses_refor` mp WHERE mp.`lDeleted` = 0 
                        AND mp.`ijenisrefor` = 1 AND mp.iforMaping=1 ORDER BY mp.iUrutan ASC';
                $sq_cek ='SELECT lm.imaster_proses_refor FROM reformulasi.lokal_mapping_refor lm WHERE lm.lDeleted = 0 AND 
                    lm.iLocal_req_refor= "'.$rowData["iLocal_req_refor"].'"';
                $data['sq_all'] = $this->db->query($sq_all)->result_array();
                $data['sq_cek'] = $this->db->query($sq_cek)->result_array(); 
                $data['isubmit_maping'] = $rowData['isubmit_maping'];
                $r=$this->load->view('local/lokal_maping_proses_detail',$data,TRUE);
                return $r;
            }  

            function insertBox_lokal_maping_proses_iupload_f($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_lokal_maping_proses_iupload_f($field, $id, $value, $rowData) {
                $sq_all='SELECT * FROM reformulasi.`local_req_refor_file` lf WHERE lf.lDeleted = 0 AND lf.iLocal_req_refor = "'.$rowData['iLocal_req_refor'].'"'; 
                $data['sq_all'] = $this->db->query($sq_all)->result_array();  
                $r=$this->load->view('local/lokal_maping_proses_file',$data,TRUE);
                return $r;
            }  

            

            function insertBox_lokal_maping_proses_vNo_req_refor($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<input type="hidden" name="isdraft" id="isdraft">';
                return $return;
            }
            function updateBox_lokal_maping_proses_vNo_req_refor($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" readonly name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<input type="hidden" name="isdraft" id="isdraft">';

                } 
                return $return;
            }  


            
            function insertBox_lokal_maping_proses_vNo_deviasi($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_lokal_maping_proses_vNo_deviasi($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_lokal_maping_proses_c_iteno($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_lokal_maping_proses_c_iteno($field, $id, $value, $rowData) {

                $itname = "SELECT i.`c_itnam` FROM sales.`itemas` i WHERE i.`lDeleted` = 0 AND i.`c_iteno` = '".$rowData['cIteno']."'";
                $c_itnam = $this->db->Query($itname)->row_array();
                if(empty($c_itnam['c_itnam'])){
                    $c_itnam['c_itnam'] = '-';
                }
                if ($this->input->get('action') == 'view') {
                     $return= $c_itnam['c_itnam']; 
                }else{
                $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<input readonly type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value="'.$c_itnam['c_itnam'].'"/>';

                } 
                return $return;
            }   

            function insertBox_lokal_maping_proses_iteam_pd($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50" />';
                $return .= '';
                return $return;
            }
            function updateBox_lokal_maping_proses_iteam_pd($field, $id, $value, $rowData) {

                $itname = "SELECT r.vteam FROM reformulasi.`reformulasi_team` r WHERE r.ldeleted=0 AND r.ireformulasi_team= '".$rowData['iteam_pd']."'";
                $c_itnam = $this->db->Query($itname)->row_array();
                if(empty($c_itnam['vteam'])){
                    $c_itnam['vteam'] = '-';
                }
                if ($this->input->get('action') == 'view') {
                     $return= $c_itnam['vteam']; 
                }else{
                $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<input readonly type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value="'.$c_itnam['vteam'].'"/>';

                } 
                return $return;
            }   
            
            function insertBox_lokal_maping_proses_iUji_be($field, $id) {
                $return = '<select id="'.$id.'" class="required combobox" name="'.$field.'">
                    <option value="">--Select--</option>
                    <option value="0">NO</option>
                    <option value="1">YES</option>
                  </select><input type="hidden" name="isdraft" id="isdraft">';
                return $return;
            }
            function updateBox_lokal_maping_proses_iUji_be($field, $id, $value, $rowData) {
                $ast = array(''=>'--Select--','0'=>'NO','1'=>'YES'); 

                if ($this->input->get('action') == 'view') {
                    $return= $ast[$value];
                }
                else{
                    $return  = "<select id='".$id."' class='combobox' name='".$field."'>";            
                        foreach($ast as $k=>$v) {
                            if ($k == $value) $selected = " selected";
                            else $selected = "";
                            $return .= "<option {$selected} value='".$k."'>".$v."</option>";
                        }            
                    $return .= "</select><input type='hidden' name='isdraft' id='isdraft'>";
                }
                
                return $return;
            }   


            
            function insertBox_lokal_maping_proses_dCreate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_lokal_maping_proses_dCreate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_lokal_maping_proses_vBatch_no($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= ' ';
                return $return;
            }
            function updateBox_lokal_maping_proses_vBatch_no($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input readonly type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= ' ';

                } 
                return $return;
            }   

            function insertBox_lokal_maping_proses_dRequest($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50" />';
                $return .= ' ';
                return $return;
            }
            function updateBox_lokal_maping_proses_dRequest($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input readonly type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= ' ';

                } 
                return $return;
            }   
            
            function insertBox_lokal_maping_proses_dupdate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_lokal_maping_proses_dupdate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_lokal_maping_proses_cInisiator($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50" />';
                $return .= ' ';
                return $return;
            }
            function updateBox_lokal_maping_proses_cInisiator($field, $id, $value, $rowData) {
                $vn = "SELECT e.`vName` FROM hrd.`employee` e WHERE e.`cNip` = '".$rowData['cInisiator']."'";
                $vName = $this->db->query($vn)->row_array();
                if(empty($vName['vName'])){
                    $vName['vName'] = '-';
                }
                if ($this->input->get('action') == 'view') {
                     $return= $vName['vName']; 
                }else{
                $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<input readonly type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value="'.$vName['vName'].'"/>';
                

                } 
                return $return;
            }   

            function insertBox_lokal_maping_proses_iStatus($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= ' ';
                return $return;
            }
            function updateBox_lokal_maping_proses_iStatus($field, $id, $value, $rowData) {
                $vn = "SELECT e.`vName` FROM hrd.`employee` e WHERE e.`cNip` = '".$rowData['cApproval']."'";
                $vName = $this->db->query($vn)->row_array();
                if($value==2){
                    if(empty($vName['vName'])){
                        $vName['vName'] = 'Approved'.' Tgl '.$rowData['dApproval'];
                    }else{ 
                        $vName['vName'] = 'Approved by '.$vName['vName'].' Tgl '.$rowData['dApproval'];
                    }
                }else if($value==1){
                    if(empty($vName['vName'])){
                        $vName['vName'] = 'Rejected'.' Tgl '.$rowData['dApproval'];
                    }else{ 
                        $vName['vName'] = 'Rejected by '.$vName['vName'].' Tgl '.$rowData['dApproval'];
                    }
                }else{
                    $vName['vName'] = 'Waiting Approval';
                }
                
                if ($this->input->get('action') == 'view') {
                     $return= $vName['vName']; 
                }else{
                $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= $vName['vName'];
                

                } 
                return $return;
            }   

            function insertBox_lokal_maping_proses_cFormulator($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50" />';
                $return .= ' ';
                return $return;
            }
            function updateBox_lokal_maping_proses_cFormulator($field, $id, $value, $rowData) {
                $vn = "SELECT e.`vName` FROM hrd.`employee` e WHERE e.`cNip` = '".$rowData['cFormulator']."'";
                $vName = $this->db->query($vn)->row_array();
                if(empty($vName['vName'])){
                    $vName['vName'] = '-';
                }
                if ($this->input->get('action') == 'view') {
                     $return= $vName['vName']; 
                }else{
                $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<input readonly type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value="'.$vName['vName'].'"/>';
                

                } 
                return $return;
            }   

            function insertBox_lokal_maping_proses_cdapart($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50" />';
                $return .= ' ';
                return $return;
            }
            function updateBox_lokal_maping_proses_cdapart($field, $id, $value, $rowData) {
                $vn = "SELECT e.`vName`, m.`vDescription` FROM hrd.`employee` e 
                        JOIN hrd.`msdepartement` m ON m.`iDeptID` = e.`iDepartementID` 
                        WHERE e.`cNip` = '".$rowData['cInisiator']."'";
                $vName = $this->db->query($vn)->row_array();
                if(empty($vName['vDescription'])){
                    $vName['vDescription'] = '-';
                }
                if ($this->input->get('action') == 'view') {
                     $return= $vName['vDescription']; 
                }else{
                $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<input readonly type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value="'.$vName['vDescription'].'"/>';
                

                } 
                return $return;
            }   

            
            function insertBox_lokal_maping_proses_lDeleted($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_lokal_maping_proses_lDeleted($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
 
            
            /*
                //Ini Merupakan Standart Approve yang digunakan di erp
 
                function approve_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/lokal_maping_proses";                             
                                            if(o.status == true) { 
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_lokal_maping_proses").html(data);
                                                     
                                                });
                                                
                                            }
                                                reload_grid("grid_lokal_maping_proses");
                                        }
                                        
                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Approve</h1><br />';
                    $echo .= '<form id="form_lokal_maping_proses_approve" action="'.base_url().'processor/reformulasi/lokal_maping_proses?action=approve_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark : 
                            <input type="hidden" name="iLocal_req_refor" value="'.$this->input->get('iLocal_req_refor').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_lokal_maping_proses_approve\')">Approve</button>';
                        
                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                } 
 
                function approve_process() {
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $iLocal_req_refor = $post['iLocal_req_refor'];
                    $vRemark = $post['vRemark'];
                    $lvl = $post['lvl'];
 
                    //Letakan Query Update approve disini

                    $data['status']  = true;
                    $data['last_id'] = $post['iLocal_req_refor'];
                    return json_encode($data);
                }
            */

        
            /*
                //Ini Merupakan Standart Reject yang digunakan di erp

                function reject_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    var remark = $("#lokal_maping_proses_remark").val();
                                    if (remark=="") {
                                        alert("Remark tidak boleh kosong ");
                                        return
                                    }

                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/lokal_maping_proses";                             
                                            if(o.status == true) { 
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_lokal_maping_proses").html(data);
                                                     
                                                });
                                                
                                            }
                                                reload_grid("grid_lokal_maping_proses");
                                        }
                                        
                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Reject</h1><br />';
                    $echo .= '<form id="form_lokal_maping_proses_reject" action="'.base_url().'processor/reformulasi/lokal_maping_proses?action=reject_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark : 
                            <input type="hidden" name="iLocal_req_refor" value="'.$this->input->get('iLocal_req_refor').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark" id="reject_lokal_maping_proses_remark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_lokal_maping_proses_reject\')">Reject</button>';
                        
                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                }


                
                function reject_process() {
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $iLocal_req_refor = $post['iLocal_req_refor'];
                    $vRemark = $post['vRemark'];
                    $lvl = $post['lvl'];
 
                    //Letakan Query Update approve disini

                    $data['status']  = true;
                    $data['last_id'] = $post['iLocal_req_refor'];
                    return json_encode($data);
                }
            */

        
            //Standart Setiap table harus memiliki dCreate , cCreated, dupdate, cUpdate
            function before_insert_processor($row, $postData) {
                $postData['dCreate'] = date('Y-m-d H:i:s');
                $postData['cCreated']=$this->user->gNIP;

                if($postData['isdraft']==true){
                    $postData['isubmit_maping']=0; 
                } 
                else{
                    $postData['isubmit_maping']=1; 
                } 

                return $postData;

            }
            function before_update_processor($row, $postData) {
                $postData['dupdate'] = date('Y-m-d H:i:s');
                $postData['cUpdate'] = $this->user->gNIP;

                if($postData['isdraft']==true){
                    $postData['isubmit_maping']=0; 
                } 
                else{
                    $postData['isubmit_maping']=1; 
                } 

                return $postData; 
            }    
        
            function after_insert_processor($fields, $id, $postData) {
                //Example After Insert
                /*
                $cNip = $this->sess_auth_local->gNIP; 
                $sql = 'Place Query In Here';
                $this->dbset->query($sql);
                */
            }
    
            function after_update_processor($fields, $id, $postData) {
                 if(isset($postData['katdetail'])){
                    //if(($postData['katdetail'][0])!=""){
                        $this->db->where('iLocal_req_refor', $id);
                        $this->db->update('reformulasi.lokal_mapping_refor',array('lDeleted'=>1,
                                        'dupdate'=>date('Y-m-d H:i:s'),'cUpdate'=>$this->user->gNIP));
                            
                        foreach($postData['katdetail'] as $k=>$v){
                            $pri2['iLocal_req_refor']=$id;
                            $pri2['imaster_proses_refor']=$k;
                            $pri2['dCreate']=date('Y-m-d H:i:s');
                            $pri2['cCreated']=$this->user->gNIP;
                            $this->db->insert('reformulasi.lokal_mapping_refor', $pri2);

                        }
                    //}
                }

                if($postData['isubmit_maping']){
                    $sqlD = "SELECT mp.`imaster_proses_refor`, mp.`iUrutan`, lm.`iLocal_req_refor` FROM 
                        reformulasi.lokal_mapping_refor lm JOIN reformulasi.`master_proses_refor` mp 
                        ON lm.`imaster_proses_refor` = mp.`imaster_proses_refor` WHERE lm.`iLocal_req_refor` = '".$id."'
                        AND lm.`lDeleted` = 0 AND mp.`lDeleted` = 0 ORDER BY mp.`iUrutan` LIMIT 1";
                    $sqlDQ = $this->db->query($sqlD)->row_array(); 
                    if(empty($sqlDQ)){
                        $sql2 = "UPDATE reformulasi.`local_req_refor` st SET st.`iStatus_proses` = '".$sqlDQ['imaster_proses_refor']."' 
                        WHERE  st.`iLocal_req_refor` = '13'";
                    }else{
                        $sql2 = "UPDATE reformulasi.`local_req_refor` st SET st.`iStatus_proses` = '".$sqlDQ['imaster_proses_refor']."' 
                        WHERE  st.`iLocal_req_refor` = '".$id."'";
                    }
                    
                    $this->db->query($sql2);
                }
            }
            function manipulate_update_button($buttons, $rowData) { 
                //Load Javascript In Here 
                if ($this->input->get('action') == 'view') {
                    unset($buttons['update_back']);
                    unset($buttons['update']);
                }
                else{ 
                    $cNip= $this->user->gNIP;
            
                    $js = $this->load->view('local/js/lokal_maping_proses_js'); 
                    $update = '<button onclick="javascript:update_btn_back(\'lokal_maping_proses\', \''.base_url().'processor/reformulasi/lokal/maping/proses?company_id='.$this->input->get('company_id').'&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this)" class="ui-button-text icon-save" id="button_update_lokal_maping_proses">Update & Submit</button>';
                    $updatedraft = '<button onclick="javascript:update_draft_btn(\'lokal_maping_proses\', \''.base_url().'processor/reformulasi/lokal/maping/proses?company_id='.$this->input->get('company_id').'&draft=true&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this, true)" class="ui-button-text icon-save" id="button_save_lokal_maping_proses">Update as Draft</button>';

                    if($rowData['isubmit_maping']==0){
                        $buttons['update'] = $updatedraft.$update.$js;  
                    }else{
                        unset($buttons['update_back']);
                        unset($buttons['update']);
                    }

                }
                
                return $buttons;
            }
            //Output
            public function output(){
                $this->index($this->input->get('action'));
            }
        }