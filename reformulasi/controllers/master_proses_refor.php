 
        <?php
        /* Generated by Sovdev 2 ERP CRUD Generator 2017-11-21 13:59:07 */
        /* Location: ./modules/reformulasi/controllers/master_proses_refor.php */
        /* Please DO NOT modify this information : */ 
         
        if ( ! defined('BASEPATH')) exit('No direct script access allowed');
        class master_proses_refor extends MX_Controller {
            function __construct() {
                parent::__construct();
                $this->load->library('auth');
                $this->db = $this->load->database('formulasi', false, true);
                $this->user = $this->auth->user();
                $this->jns_refor = array("Local", "Export");
                $this->jns_wajib = array("Optional", "Wajib");
            }
            function index($action = '') {
                $action = $this->input->get('action');
                //Bikin Object Baru Nama nya $grid      
                $grid = new Grid;
                $grid->setTitle('Master Proses');
                $grid->setTable('reformulasi.master_proses_refor');      
                $grid->setUrl('master_proses_refor');

                //List Table
                $grid->addList('vkode_proses_refor','vNamaProses','vDeskripsi','iUrutan','iwajib','ijenisrefor'); 
                $grid->setSortBy('imaster_proses_refor');
                $grid->setSortOrder('asc');  

                //List field
                $grid->addFields('vkode_proses_refor','vNamaProses','vDeskripsi','iUrutan','iwajib','ijenisrefor'); 

                //Setting Grid Width Name 
                /*
                    Kamu bisa merubah nama label dari sini, Contoh :
                    $grid->setLabel('nama field','nama field yang akan diubah');

                */
        
                $grid->setWidth('vkode_proses_refor', '100');
                $grid->setAlign('vkode_proses_refor', 'center');
                $grid->setLabel('vkode_proses_refor','Kode Proses');
            
                $grid->setWidth('vNamaProses', '200');
                $grid->setAlign('vNamaProses', 'left');
                $grid->setLabel('vNamaProses','Nama Proses');

                $grid->setWidth('vDeskripsi', '300');
                $grid->setAlign('vDeskripsi', 'left');
                $grid->setLabel('vDeskripsi','Deskripsi');

                $grid->setWidth('iUrutan', '50');
                $grid->setAlign('iUrutan', 'center');
                $grid->setLabel('iUrutan','Urutan');
            
                $grid->setWidth('iwajib', '150');
                $grid->setAlign('iwajib', 'center');
                $grid->setLabel('iwajib','Optional');
            
                $grid->setWidth('ijenisrefor', '150');
                $grid->setAlign('ijenisrefor', 'center');
                $grid->setLabel('ijenisrefor','Jenis Refor');
            
                $grid->setWidth('dCreate', '100');
                $grid->setAlign('dCreate', 'left');
                $grid->setLabel('dCreate','DCREATE');
            
                $grid->setWidth('cCreated', '100');
                $grid->setAlign('cCreated', 'left');
                $grid->setLabel('cCreated','CCREATED');
            
                $grid->setWidth('dupdate', '100');
                $grid->setAlign('dupdate', 'left');
                $grid->setLabel('dupdate','DUPDATE');
            
                $grid->setWidth('cUpdate', '100');
                $grid->setAlign('cUpdate', 'left');
                $grid->setLabel('cUpdate','CUPDATE');
            
                $grid->setWidth('lDeleted', '100');
                $grid->setAlign('lDeleted', 'left');
                $grid->setLabel('lDeleted','LDELETED');
            
                //Example modifikasi GRID ERP
                /*
                    - Set Query
                        $grid->setQuery('lDeleted = 0 ', null); 
                        $grid->setQuery('plc2_upb.iupb_id IN (select distinct(bk.iupb_id) from plc2.plc2_upb_spesifikasi_fg bk where bk.iappqa=2 and bk.ldeleted=0)', null);  

                    - Join Table
                        $grid->setJoinTable('hrd.employee', 'employee.cNip = pk_master.vnip', 'inner');

                    - Change Field Name
                        $grid->changeFieldType('ideleted','combobox','',array(''=>'Pilih',0=>'Aktif',1=>'Tidak aktif'));
                */

                 //set search
                $grid->setSearch('vkode_proses_refor','vNamaProses');
                
                //set required
                $grid->setRequired('vkode_proses_refor','vNamaProses','vDeskripsi','iUrutan','iwajib','ijenisrefor','dCreate','cCreated','dupdate','cUpdate','lDeleted'); 

                $grid->setGridView('grid');

                switch ($action) {
                    case 'json':
                            $grid->getJsonData();
                            break;
                    case 'view':
                            $grid->render_form($this->input->get('id'), true);
                            break;
                    case 'create':
                            $grid->render_form();
                            break;
                    case 'createproses':
                            echo $grid->saved_form();
                            break;
                    case 'update':
                            $grid->render_form($this->input->get('id'));
                            break;
                    case 'updateproses':
                            echo $grid->updated_form();
                            break;
                    case 'delete':
                            echo $grid->delete_row();
                            break; 
                    /*
                        //Ini Merupakan Standart Case Untuk Approve

                        case 'approve':
                            echo $this->approve_view();
                            break;
                        case 'approve_process':
                            echo $this->approve_process();
                            break;
                        case 'reject':
                            echo $this->reject_view();
                            break;
                        case 'reject_process':
                            echo $this->reject_process();
                            break; 
                    */ 
                    default:
                            $grid->render_grid();
                            break;
                }
            }
            //Create Manipulate Field 

            //Jika Ingin Menambahkan Seting grid seperti button edit enable dalam kondisi tertentu
            /* 
            function listBox_Action($row, $actions) {
                if ($row->vNo_Or<>'' || $row->vNo_Or<>NULL) { 
                        unset($actions['edit']);
                }
                return $actions;
            } 
            */

            function listBox_master_proses_refor_iwajib($value) {
                if($value==0){
                    $vstatus='Optional';
                }elseif($value==1){
                    $vstatus='Wajib';
                }
                return $vstatus;
            }

            function listBox_master_proses_refor_ijenisrefor($value) {
                if($value==1){
                    $vstatus='Local';
                }elseif($value==2){
                    $vstatus='Export';
                }
                return $vstatus;
            }
        
            function insertBox_master_proses_refor_vkode_proses_refor($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "100" />';
                return $return;
            }
            function updateBox_master_proses_refor_vkode_proses_refor($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "100"  value="'.$value.'"/>';

                } 
                return $return;
            }   
            
            function insertBox_master_proses_refor_vNamaProses($field, $id) {
                $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250"></textarea>';
                return $return;
            }
            function updateBox_master_proses_refor_vNamaProses($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= '<label title="Note">'.nl2br($value).'</label>'; 
                }else{
                    $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250">'.nl2br($value).'</textarea>';

                } 
                return $return;
            }   

            function insertBox_master_proses_refor_vDeskripsi($field, $id) {
                $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250"></textarea>';
                return $return;
            }
            function updateBox_master_proses_refor_vDeskripsi($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= '<label title="Note">'.nl2br($value).'</label>'; 
                }else{
                    $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250">'.nl2br($value).'</textarea>';

                } 
                return $return;
            }  

            function insertBox_master_proses_refor_iUrutan($field, $id) {
                $return = '<input type="number" min="1" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "100" />';
                return $return;
            }
            function updateBox_master_proses_refor_iUrutan($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="number" min="1" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "100"  value="'.$value.'"/>';

                } 
                return $return;
            }  
            
            function insertBox_master_proses_refor_iwajib($field, $id) {
                $o = '<select class="input_rows1 required" name="'.$field.'" id="'.$id.'">';
                $o .= '<option value="0" selected>Optional</option>';
                $o .= '<option value="1">Wajib</option>';
                $o .= '</select> <style>
                         #'.$id.'{
                             width:100px;   
                        }
                      </style>';
                return $o;
            }
            function updateBox_master_proses_refor_iwajib($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $this->jns_wajib[$value]; 
                }else{
                    $return = '<select class="input_rows1 required" name="'.$field.'" id="'.$id.'">';
                    $data = '';
                    foreach ($this->jns_wajib as $i => $j) {
                        if ($value == $i){
                            $selected = " selected";
                        }else{
                            $selected = "";
                        }
                        $return .= '<option '.$selected.' value="'.$i.'">'.$j.'</option>';
                    }
                    $return .= '</select> <style>
                             #'.$id.'{
                                 width:100px;   
                            }
                          </style>';
                } 
                return $return;
            }   
            
            function insertBox_master_proses_refor_ijenisrefor($field, $id) {
                $o = '<select class="input_rows1 required" name="'.$field.'" id="'.$id.'">';
                $o .= '<option value="1" selected>Lokal</option>';
                $o .= '<option value="2">Export</option>';
                $o .= '</select> <style>
                         #'.$id.'{
                             width:100px;   
                        }
                      </style>';
                return $o;
            }
            function updateBox_master_proses_refor_ijenisrefor($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $this->jns_refor[$value-1]; 
                }else{
                    $return = '<select class="input_rows1 required" name="'.$field.'" id="'.$id.'">';
                    $data = '';
                    foreach ($this->jns_refor as $i => $j) {
                        if ($value == ($i+1) ){
                            $selected = " selected";
                        }else{
                            $selected = "";
                        }
                        $return .= '<option '.$selected.' value="'.($i+1).'">'.$j.'</option>';
                    }
                    $return .= '</select> <style>
                             #'.$id.'{
                                 width:100px;   
                            }
                          </style>';
                } 
                return $return;
            }   
            
            function insertBox_master_proses_refor_dCreate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_master_proses_refor_dCreate($field, $id, $value, $rowData) {
                    if ($this->input->get('action') == 'view') {
                        $return= $value; 
                    }
                    else{
                        $return = '<input type="text" name="'.$field.'"  id="'.$id.'" value="'.$value.'" class="input_rows1 required" size="30" />';
                    } 
                return $return;
            }   
            
            function insertBox_master_proses_refor_cCreated($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_master_proses_refor_cCreated($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_master_proses_refor_dupdate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_master_proses_refor_dupdate($field, $id, $value, $rowData) {
                    if ($this->input->get('action') == 'view') {
                        $return= $value; 
                    }
                    else{
                        $return = '<input type="text" name="'.$field.'"  id="'.$id.'" value="'.$value.'" class="input_rows1 required" size="30" />';
                    } 
                return $return;
            }   
            
            function insertBox_master_proses_refor_cUpdate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_master_proses_refor_cUpdate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_master_proses_refor_lDeleted($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_master_proses_refor_lDeleted($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            /*
                //Ini Merupakan Standart Approve yang digunakan di erp
 
                function approve_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/master_proses_refor";                             
                                            if(o.status == true) { 
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_master_proses_refor").html(data);
                                                     
                                                });
                                                
                                            }
                                                reload_grid("grid_master_proses_refor");
                                        }
                                        
                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Approve</h1><br />';
                    $echo .= '<form id="form_master_proses_refor_approve" action="'.base_url().'processor/reformulasi/master_proses_refor?action=approve_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark : 
                            <input type="hidden" name="imaster_proses_refor" value="'.$this->input->get('imaster_proses_refor').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_master_proses_refor\')">Approve</button>';
                        
                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                } 
 
                function approve_process() {
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $imaster_proses_refor = $post['imaster_proses_refor'];
                    $vRemark = $post['vRemark'];
                    $lvl = $post['lvl'];
 
                    //Letakan Query Update approve disini

                    $data['status']  = true;
                    $data['last_id'] = $post['imaster_proses_refor'];
                    return json_encode($data);
                }
            */

        
            /*
                //Ini Merupakan Standart Reject yang digunakan di erp

                function reject_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    var remark = $("#master_proses_refor_remark").val();
                                    if (remark=="") {
                                        alert("Remark tidak boleh kosong ");
                                        return
                                    }

                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/master_proses_refor";                             
                                            if(o.status == true) { 
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_master_proses_refor").html(data);
                                                     
                                                });
                                                
                                            }
                                                reload_grid("grid_master_proses_refor");
                                        }
                                        
                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Reject</h1><br />';
                    $echo .= '<form id="form_master_proses_refor_reject" action="'.base_url().'processor/reformulasi/master_proses_refor?action=reject_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark : 
                            <input type="hidden" name="imaster_proses_refor" value="'.$this->input->get('imaster_proses_refor').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark" id="reject_master_proses_refor_remark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_master_proses_refor_reject\')">Reject</button>';
                        
                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                }


                
                function reject_process() {
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $imaster_proses_refor = $post['imaster_proses_refor'];
                    $vRemark = $post['vRemark'];
                    $lvl = $post['lvl'];
 
                    //Letakan Query Update approve disini

                    $data['status']  = true;
                    $data['last_id'] = $post['imaster_proses_refor'];
                    return json_encode($data);
                }
            */

        
            //Standart Setiap table harus memiliki dCreate , cCreated, dupdate, cUpdate
            function before_insert_processor($row, $postData) {
                $postData['vkode_proses_refor'] = strtoupper($postData['vkode_proses_refor']);
                $postData['vNamaProses'] = strtoupper($postData['vNamaProses']);
                $postData['dCreate'] = date('Y-m-d H:i:s');
                $postData['cCreated']=$this->user->gNIP;
                return $postData;

            }
            function before_update_processor($row, $postData) {
                $postData['vkode_proses_refor'] = strtoupper($postData['vkode_proses_refor']);
                $postData['vNamaProses'] = strtoupper($postData['vNamaProses']);
                $postData['dupdate'] = date('Y-m-d H:i:s');
                $postData['cUpdate'] = $this->user->gNIP;
                return $postData; 
            }    
        
            function after_insert_processor($fields, $id, $postData) {
                //Example After Insert
                /*
                $cNip = $this->sess_auth->gNIP; 
                $sql = 'Place Query In Here';
                $this->dbset->query($sql);
                */
            }
    
            function after_update_processor($fields, $id, $postData) {
                //Example After Update
                /*
                $cNip = $this->sess_auth->gNIP; 
                $sql = 'Place Query In Here';
                $this->dbset->query($sql);
                */
            }
            function manipulate_update_button($buttons, $rowData) { 
                //Load Javascript In Here 
                if ($this->input->get('action') == 'view') {
                    unset($buttons['update']);
                }
                else{ 
                    
                }

                /*reference to schedulercheck/views/sourceModul */
                
                /*reference to schedulercheck/views/sourceJS */
                //$js = $this->load->view('standardJS');
                //$js = $this->load->view('numberJS');
                //$js = $this->load->view('uploadjs');

                
                return $buttons;
            }
            function manipulate_insert_button($buttons) { 
                //unset($buttons['save']);

                /*reference to schedulercheck/views/sourceModul */

                /*reference to schedulercheck/views/sourceJS */
                //$js = $this->load->view('standardJS');
                //$js = $this->load->view('numberJS');
                //$js = $this->load->view('uploadjs');
                
                return $buttons;
            }
            //Output
            public function output(){
                $this->index($this->input->get('action'));
            }
        }