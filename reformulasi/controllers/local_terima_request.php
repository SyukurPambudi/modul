 
        <?php
        /* Generated by Sovdev 2 ERP CRUD Generator 2017-11-21 14:48:05 */
        /* Location: ./modules/reformulasi/controllers/local_terima_request.php */
        /* Please DO NOT modify this information : */ 
         
        if ( ! defined('BASEPATH')) exit('No direct script access allowed');
        class local_terima_request extends MX_Controller {
            function __construct() {
                parent::__construct();
                $this->load->library('auth_local');
                $this->db = $this->load->database('formulasi', false, true);
                $this->user = $this->auth_local->user();
                $this->load->library('lib_utilitas');
                $this->arrEmployee = array(); 
                $this->arrEmployeeUpper = array();
            }
            function index($action = '') {
                $action = $this->input->get('action');
                //Bikin Object Baru Nama nya $grid      
                $grid = new Grid;
                $grid->setTitle('Request Reformulasi Local');
                $grid->setTable('reformulasi.local_req_refor');      
                $grid->setUrl('local_terima_request');

                //List Table
                $grid->addList('vNo_req_refor','itemas.c_itnam','dRequest','iSubmit_terima','master_proses_refor.vNamaProses'); 
                $grid->setSortBy('iLocal_req_refor');
                $grid->setSortOrder('DESC');  

                //List field
                $grid->addFields('iStatus','vNo_req_refor','vNo_deviasi','cIteno','cInisiator','idept_id','dRequest','iteam_pd','vAlasan_refor','vFile','cFormulator'); 

                //Setting Grid Width Name 
                /*
                    Kamu bisa merubah nama label dari sini, Contoh :
                    $grid->setLabel('nama field','nama field yang akan diubah');

                */
            
                $grid->setLabel('vFile','Upload File');

                $grid->setWidth('vNo_req_refor', '150');
                $grid->setAlign('vNo_req_refor', 'center');
                $grid->setLabel('vNo_req_refor','No Request');
            
                $grid->setWidth('vNo_deviasi', '100');
                $grid->setAlign('vNo_deviasi', 'left');
                $grid->setLabel('vNo_deviasi','No Memo');
            
                $grid->setWidth('iNo_usulan', '100');
                $grid->setAlign('iNo_usulan', 'left');
                $grid->setLabel('iNo_usulan','No Usulan Produk');
            
                $grid->setWidth('iKey', '100');
                $grid->setAlign('iKey', 'center');
                $grid->setLabel('iKey','Jenis Refor');
            
                $grid->setWidth('vBatch_no', '100');
                $grid->setAlign('vBatch_no', 'center');
                $grid->setLabel('vBatch_no','No Batch');

                $grid->setWidth('cIteno', '300');
                $grid->setAlign('cIteno', 'center');
                $grid->setLabel('cIteno','Nama Produk');

                $grid->setWidth('itemas.c_itnam', '300');
                $grid->setAlign('itemas.c_itnam', 'center');
                $grid->setLabel('itemas.c_itnam','Nama Produk');

                
            
                $grid->setWidth('cInisiator', '200');
                $grid->setAlign('cInisiator', 'left');
                $grid->setLabel('cInisiator','Nama Inisiator');
            
                $grid->setWidth('idept_id', '100');
                $grid->setAlign('idept_id', 'left');
                $grid->setLabel('idept_id','Departement');
            
                $grid->setWidth('dRequest', '100');
                $grid->setAlign('dRequest', 'left');
                $grid->setLabel('dRequest','Tgl Request');
            
                $grid->setWidth('vAlasan_refor', '200');
                $grid->setAlign('vAlasan_refor', 'left');
                $grid->setLabel('vAlasan_refor','Alasan Refor');
            
                $grid->setWidth('iteam_pd', '100');
                $grid->setAlign('iteam_pd', 'left');
                $grid->setLabel('iteam_pd','Team PD');
            
                $grid->setWidth('iStatus', '100');
                $grid->setAlign('iStatus', 'center');
                $grid->setLabel('iStatus','Status Approval');
            
                $grid->setWidth('iSubmit_terima', '150');
                $grid->setAlign('iSubmit_terima', 'center');
                $grid->setLabel('iSubmit_terima','Status Submit');

                $grid->setWidth('iStatus_proses', '200');
                $grid->setAlign('iStatus_proses', 'center');
                $grid->setLabel('iStatus_proses','Current Proses');

                $grid->setWidth('master_proses_refor.vNamaProses', '200');
                $grid->setAlign('master_proses_refor.vNamaProses', 'center');
                $grid->setLabel('master_proses_refor.vNamaProses','Current Proses');

                

                
            
                $grid->setWidth('cApproved', '100');
                $grid->setAlign('cApproved', 'left');
                $grid->setLabel('cApproved','CAPPROVED');
            
                $grid->setWidth('vreason_approved', '100');
                $grid->setAlign('vreason_approved', 'left');
                $grid->setLabel('vreason_approved','VREASON_APPROVED');
            
                $grid->setWidth('cFormulator', '100');
                $grid->setAlign('cFormulator', 'left');
                $grid->setLabel('cFormulator','cFormulator');
            
                $grid->setWidth('istatus_terima_req', '100');
                $grid->setAlign('istatus_terima_req', 'left');
                $grid->setLabel('istatus_terima_req','ISTATUS_TERIMA_REQ');
            
                $grid->setWidth('cApproved_terima', '100');
                $grid->setAlign('cApproved_terima', 'left');
                $grid->setLabel('cApproved_terima','CAPPROVED_TERIMA');
            
                $grid->setWidth('dApproved_terima', '100');
                $grid->setAlign('dApproved_terima', 'left');
                $grid->setLabel('dApproved_terima','DAPPROVED_TERIMA');
            
                $grid->setWidth('vreason_terima', '100');
                $grid->setAlign('vreason_terima', 'left');
                $grid->setLabel('vreason_terima','Keterangan');
            
                $grid->setWidth('dTgl_rev_mbr', '100');
                $grid->setAlign('dTgl_rev_mbr', 'left');
                $grid->setLabel('dTgl_rev_mbr','DTGL_REV_MBR');
            
                $grid->setWidth('vNo_cc', '100');
                $grid->setAlign('vNo_cc', 'left');
                $grid->setLabel('vNo_cc','VNO_CC');
            
                $grid->setWidth('dPengajuan_cc', '100');
                $grid->setAlign('dPengajuan_cc', 'left');
                $grid->setLabel('dPengajuan_cc','DPENGAJUAN_CC');
            
                $grid->setWidth('iStatus_cc', '100');
                $grid->setAlign('iStatus_cc', 'left');
                $grid->setLabel('iStatus_cc','ISTATUS_CC');
            
                $grid->setWidth('dApproved_cc', '100');
                $grid->setAlign('dApproved_cc', 'left');
                $grid->setLabel('dApproved_cc','DAPPROVED_CC');
            
                $grid->setWidth('cApproved_cc', '100');
                $grid->setAlign('cApproved_cc', 'left');
                $grid->setLabel('cApproved_cc','CAPPROVED_CC');
            
                $grid->setWidth('dUji_BE', '100');
                $grid->setAlign('dUji_BE', 'left');
                $grid->setLabel('dUji_BE','DUJI_BE');
            
                $grid->setWidth('dSelesai_uji_BE', '100');
                $grid->setAlign('dSelesai_uji_BE', 'left');
                $grid->setLabel('dSelesai_uji_BE','DSELESAI_UJI_BE');
            
                $grid->setWidth('vNo_hasil_uji_BE', '100');
                $grid->setAlign('vNo_hasil_uji_BE', 'left');
                $grid->setLabel('vNo_hasil_uji_BE','VNO_HASIL_UJI_BE');
            
                $grid->setWidth('vHasil_uji_BE', '100');
                $grid->setAlign('vHasil_uji_BE', 'left');
                $grid->setLabel('vHasil_uji_BE','VHASIL_UJI_BE');
            
                $grid->setWidth('iStatus_uji_BE', '100');
                $grid->setAlign('iStatus_uji_BE', 'left');
                $grid->setLabel('iStatus_uji_BE','ISTATUS_UJI_BE');
            
                $grid->setWidth('dApproved_uji_BE', '100');
                $grid->setAlign('dApproved_uji_BE', 'left');
                $grid->setLabel('dApproved_uji_BE','DAPPROVED_UJI_BE');
            
                $grid->setWidth('cApproved_uji_BE', '100');
                $grid->setAlign('cApproved_uji_BE', 'left');
                $grid->setLabel('cApproved_uji_BE','CAPPROVED_UJI_BE');
            
                $grid->setWidth('dCreate', '100');
                $grid->setAlign('dCreate', 'left');
                $grid->setLabel('dCreate','DCREATE');
            
                $grid->setWidth('cCreated', '100');
                $grid->setAlign('cCreated', 'left');
                $grid->setLabel('cCreated','CCREATED');
            
                $grid->setWidth('dupdate', '100');
                $grid->setAlign('dupdate', 'left');
                $grid->setLabel('dupdate','DUPDATE');
            
                $grid->setWidth('cUpdate', '100');
                $grid->setAlign('cUpdate', 'left');
                $grid->setLabel('cUpdate','CUPDATE');
            
                $grid->setWidth('lDeleted', '100');
                $grid->setAlign('lDeleted', 'left');
                $grid->setLabel('lDeleted','LDELETED');

                $grid->setWidth('cFormulator', '100');
                $grid->setAlign('cFormulator', 'left');
                $grid->setLabel('cFormulator','PIC Formulator Refor');

                
                $grid->changeFieldType('iStatus','combobox','',array('0'=>'Waiting Approval',1=>'Rejected',2=>'Approved'));
                $grid->changeFieldType('iSubmit_terima','combobox','',array(0=>'Waiting for assignment',1=>'Assigned'));

                $grid->setJoinTable('reformulasi.master_proses_refor', 'master_proses_refor.imaster_proses_refor = local_req_refor.iStatus_proses', 'inner');
                $grid->setJoinTable('sales.itemas', 'itemas.c_iteno = local_req_refor.cIteno', 'inner');

                //Example modifikasi GRID ERP
                /*
                    - Set Query
                        $grid->setQuery('lDeleted = 0 ', null); 
                        $grid->setQuery('plc2_upb.iupb_id IN (select distinct(bk.iupb_id) from reformulasi.plc2_upb_spesifikasi_fg bk where bk.iappqa=2 and bk.ldeleted=0)', null);  

                    - Join Table
                        $grid->setJoinTable('hrd.employee', 'employee.cNip = pk_master.vnip', 'inner');

                    - Change Field Name
                        $grid->changeFieldType('ideleted','combobox','',array(''=>'Pilih',0=>'Aktif',1=>'Tidak aktif'));
                */

                $le_manager = false;
                if($this->auth_local->is_manager()){
                    $x=$this->auth_local->dept();
                    $manager=$x['manager'];
                    if(in_array('PD', $manager)){
                        $type='PD';
                        $le_manager = true;
                    }
                    else{$type='';}
                }
                else{
                    $x=$this->auth_local->dept();
                    $team=$x['team'];
                    if(in_array('PD', $team)){
                        $type='PD';
                    }
                    else{$type='';}
                }

                if($this->auth_local->is_manager()){
                    if($type == 'PD'){

                        // hanya tampil data sesuai PD yang dipilih 
                        $grid->setQuery('local_req_refor.iteam_pd  IN ('.$this->auth_local->my_teams().') ', null);                     
                    }else{

                        // jika bukan manager PD , maka hilangkan data pada main grid
                            $grid->setQuery('local_req_refor.cFormulator', $this->user->gNIP);                     

                    }

                }else{
                    // jika bukan manager , maka hilangkan data pada main grid
                    $grid->setQuery('local_req_refor.cFormulator', $this->user->gNIP);                     
                }

                

                $grid->setQuery('local_req_refor.iStatus = 2', null); 

                 //set search
                $grid->setSearch('vNo_req_refor','itemas.c_itnam','vBatch_no');
                
                //set required
                $grid->setRequired('vNo_req_refor','cIteno','cInisiator','dRequest','iteam_pd','vAlasan_refor','cFormulator'); 

                $grid->setGridView('grid');

                switch ($action) {
                    case 'json':
                            $grid->getJsonData();
                            break;
                    case 'getPicRefor':
                            echo $this->getPicRefor();
                            break;
                    case 'view':
                            $grid->render_form($this->input->get('id'), true);
                            break;
                    case 'create':
                            $grid->render_form();
                            break;
                    case 'createproses':
                            $isUpload = $this->input->get('isUpload');
                            if($isUpload) {
                                $lastId=$this->input->get('lastId');
                                $path = realpath("files/reformulasi/local/request_refor");
                                if(!file_exists($path."/".$lastId)){
                                    if (!mkdir($path."/".$lastId, 0777, true)) { //id review
                                        die('Failed upload, try again!');
                                    }
                                }

                                $file_name= "";
                                $file_vKeterangan = array();
                                $fileId = array();
                        
                                foreach($_POST as $key=>$value) {
                                                            
                                    if ($key == 'file_vKeterangan') {
                                        foreach($value as $y=>$u) {
                                            $file_vKeterangan[$y] = $u;
                                        }
                                    }
                                    
                                    
                                    
                                    //
                                    if ($key == 'namafile') {
                                        foreach($value as $k=>$v) {
                                            $file_name[$k] = $v;
                                        }
                                    }
                                    
                                    
                                    
                                    //
                                    if ($key == 'fileid') {
                                        foreach($value as $k=>$v) {
                                            $fileId[$k] = $v;
                                        }
                                    }
                                    
                                    
                                }
                                $i=0;
                                foreach ($_FILES['fileupload']["error"] as $key => $error) {
                                    if ($error == UPLOAD_ERR_OK) {
                                        $tmp_name = $_FILES['fileupload']["tmp_name"][$key];
                                        $name =$_FILES['fileupload']["name"][$key];
                                        $data['vFilename'] = $name;
                                        $data['dCreate'] = date('Y-m-d H:i:s');

                                            if(move_uploaded_file($tmp_name, $path."/".$lastId."/".$name)) {
                                                $sql[]="INSERT INTO reformulasi.local_req_refor_file (iLocal_req_refor, vFilename, vKeterangan, dCreate, cCreate) 
                                                        VALUES (".$lastId.",'".$data['vFilename']."','".$fvKeterangan[$i]."','".$data['dCreate']."','".$this->user->gNIP."')";
                                                $i++;   
                                            }
                                            else{
                                                echo "Upload ke folder gagal";  
                                            }
                                    }
                                }
                                foreach($sql as $q) {
                                    try {
                                    $this->db->query($q);
                                    }catch(Exception $e) {
                                    die($e);
                                    }
                                }
                                $r['message']="Data Berhasil Disimpan";
                                $r['status'] = TRUE;
                                $r['last_id'] = $this->input->get('lastId');                    
                                echo json_encode($r);
                            }else{
                                echo $grid->saved_form();
                            }
                            break;

                            /*echo $grid->saved_form();
                            break;*/
                    case 'update':
                            $grid->render_form($this->input->get('id'));
                            break;
                    case 'updateproses':
                            echo $grid->updated_form();
                            break;
                    case 'delete':
                            echo $grid->delete_row();
                            break;
                    case 'getBatch':
                            echo $this->getBatch();
                            break; 

                    case 'getProduk':
                            echo $this->getProduk();
                            break; 

                    case 'download':
                            $this->download($this->input->get('file'));
                            break;

                    
                    
                        //Ini Merupakan Standart Case Untuk Approve

                        case 'approve':
                            echo $this->approve_view();
                            break;
                        case 'approve_process':
                            echo $this->approve_process();
                            break;
                        case 'reject':
                            echo $this->reject_view();
                            break;
                        case 'reject_process':
                            echo $this->reject_process();
                            break; 
                     
                    default:
                            $grid->render_grid();
                            break;
                }
            }
            //Create Manipulate Field 

            //Jika Ingin Menambahkan Seting grid seperti button edit enable dalam kondisi tertentu
            /* 
            function listBox_Action($row, $actions) {
                if ($row->vNo_Or<>'' || $row->vNo_Or<>NULL) { 
                        unset($actions['edit']);
                }
                return $actions;
            } 
            */

                function _child ($nip){ 
                    $sql = "SELECT cNip, vName 
                                FROM hrd.employee 
                                WHERE cUpper = '$nip' 
                                AND dresign = '0000-00-00'
                                ORDER BY vName ASC";
                    $dt_cek = $this->db->query($sql)->result_array();     
                    if(!empty($dt_cek)){ 
                        foreach($dt_cek as $x){
                            $isi['nip'] = $x['cNip'];
                            $isi['name'] = $x['vName'];
                            array_push($this->arrEmployee, $isi);
                            $this->_child($x['cNip']);
                        } 
                    } 
                }

                function _upper ($nip){ 
                    $sql = "SELECT cUpper, vName 
                                FROM hrd.employee a
                                join hrd.position b on b.iPostID=a.iPostID
                                WHERE a.cNip = '$nip' 
                                AND a.dresign = '0000-00-00'
                                and b.iLvlemp <= 6
                                ORDER BY vName ASC";
                    $dt_cek = $this->db->query($sql)->result_array();     
                    if(!empty($dt_cek)){ 
                        foreach($dt_cek as $x){
                            $isi['nip'] = $x['cUpper'];
                            array_push($this->arrEmployeeUpper, $isi);
                            $this->_upper($x['cUpper']);
                        } 
                    } 
                }



            function listBox_Action($row, $actions) {

                $cInisiator = $row->cInisiator;
                $iSubmit_terima = $row->iSubmit_terima;
                $iStatus = $row->iStatus;
                $logged_nip =$this->user->gNIP;
                $Requestor = $this->whoAmI($row->cInisiator);

                $userLogin = $this->whoAmI($logged_nip);

                $le_manager = false;
                if($this->auth_local->is_manager()){
                    $x=$this->auth_local->dept();
                    $manager=$x['manager'];
                    if(in_array('PD', $manager)){
                        $type='PD';
                        $le_manager = true;
                    }
                    else{$type='';}
                }
                else{
                    $x=$this->auth_local->dept();
                    $team=$x['team'];
                    if(in_array('PD', $team)){
                        $type='PD';
                    }
                    else{$type='';}
                }

                if($this->auth_local->is_manager()){
                    if($type == 'PD'){

                        // hanya tampil data sesuai PD yang dipilih 
                        //$grid->setQuery('local_req_refor.iteam_pd  IN ('.$this->auth_local->my_teams().') ', null);
                        if($iSubmit_terima > 0){
                            //sudah submit
                            unset($actions['edit']);    
                        }else{

                        }

                    }else{

                        // jika bukan manager PD , maka hilangkan data pada main grid
                            //$grid->setQuery('local_req_refor.iStatus = 2', null); 
                            unset($actions['edit']);


                    }

                }else{
                    // jika bukan manager , maka hilangkan data pada main grid
                    //$grid->setQuery('local_req_refor.iStatus = 2', null); 
                    unset($actions['edit']);                    
                }



                

                return $actions;
            } 


            function whoAmI($nip){
                $sql = 'select b.vDescription as vdepartemen,a.*,b.*,c.iLvlemp 
                        from hrd.employee a 
                        join hrd.msdepartement b on b.iDeptID=a.iDepartementID
                        join hrd.position c on c.iPostId=a.iPostID
                        where a.cNip ="'.$nip.'"
                        ';
                $data = $this->db->query($sql)->row_array();
                return $data;
            }

            
            function insertBox_local_terima_request_vNo_req_refor($field, $id) {
                $o = '<label title="Auto Number">Auto Generate</label>';
                $o .= '<input type="hidden" name="isdraft" id="isdraft">';
                

                return $o;
            }



            function updateBox_local_terima_request_vNo_req_refor($field, $id, $value, $rowData) {
                $o = "<input type='hidden' name='".$field."' id='".$id."' readonly='readonly' value='".$value."'/>";
                $o .= "<label title='Auto Number'>".$value."</label>";
                $o .= '<input type="hidden" name="isdraft" id="isdraft">';
                return $o;
            }

            
            
            function insertBox_local_terima_request_vNo_deviasi($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_vNo_deviasi($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'" readonly="readonly"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            } 

            function insertBox_local_terima_request_cIteno($field,$id){
                $url1 = base_url().'processor/reformulasi/local/terima/request?action=getProduk';
                $return = '<script language="text/javascript">
                            $(document).ready(function() {
                                var config1 = {
                                    source: function( request, response) {
                                        $.ajax({
                                            url: "'.$url1.'",
                                            dataType: "json",
                                            data: {
                                                term: request.term,
                                            },
                                            beforeSend: function(){
                                                $( "#'.$id.'" ).val("");
                                            },

                                            success: function( data ) {
                                                response( data );
                                            }
                                        });
                                    },
                                    select: function(event, ui){
                                        $( "#'.$id.'" ).val(ui.item.id);
                                        $( "#'.$id.'_text" ).val(ui.item.value);
                                        return false;
                                    },
                                    minLength: 2,
                                    autoFocus: true,
                                };
            
                                $( "#'.$id.'_text" ).livequery(function() {
                                    $( this ).autocomplete(config1);
                                });
            
                            });
                      </script>
                <input name="'.$id.'" id="'.$id.'" type="hidden" class="required"/>
                <input name="'.$id.'_text" id="'.$id.'_text" type="text" size="40"/>';
                return $return;
            }

            function updateBox_local_terima_request_cIteno($field, $id, $value, $rowData) {
                $url1 = base_url().'processor/reformulasi/local/terima/request?action=getProduk';
                $sql="select * from sales.itemas em where em.c_iteno='".$value."'";
                $dt=$this->db->query($sql)->row_array();
                if($this->input->get('action')=='view'){
                    $return =$dt['c_iteno'].'-'.$dt['c_itnam'];
                }else{
                     $return = '<script language="text/javascript">
                            $(document).ready(function() {
                                var config1 = {
                                    source: function( request, response) {
                                        $.ajax({
                                            url: "'.$url1.'",
                                            dataType: "json",
                                            data: {
                                                term: request.term,
                                            },
                                            beforeSend: function(){
                                                $( "#'.$id.'" ).val("");
                                            },

                                            success: function( data ) {
                                                response( data );
                                            }
                                        });
                                    },
                                    select: function(event, ui){
                                        $( "#'.$id.'" ).val(ui.item.id);
                                        $( "#'.$id.'_text" ).val(ui.item.value);
                                        return false;
                                    },
                                    minLength: 2,
                                    autoFocus: true,
                                };
            
                                $( "#'.$id.'_text" ).livequery(function() {
                                    $( this ).autocomplete(config1);
                                });
            
                            });
                          </script>
                    <input name="'.$id.'" id="'.$id.'" type="hidden" value="'.$value.'"  class="required"/>
                    <input name="'.$id.'_text" id="'.$id.'_text" readonly="readonly" value="'.trim($dt['c_iteno']).'-'.trim($dt['c_itnam']).'"  type="text" size="40"/>';

                }
                return $return;
            }


            function insertBox_local_terima_request_vBatch_no($field,$id){
                    $url = base_url().'processor/reformulasi/local/terima/request?action=getBatch';
                    $return = '<script language="text/javascript">
                                $(document).ready(function() {
                                    var config = {
                                        source: function( request, response) {
                                            $.ajax({
                                                url: "'.$url.'",
                                                dataType: "json",
                                                data: {
                                                    term: request.term,
                                                },

                                                success: function( data ) {
                                                    response( data );
                                                }
                                            });
                                        },
                                        select: function(event, ui){
                                            $( "#'.$id.'" ).val(ui.item.id);
                                            return false;
                                        },
                                        minLength: 2,
                                        autoFocus: true,
                                    };
                
                                    $( "#'.$id.'" ).livequery(function() {
                                        $( this ).autocomplete(config);
                                    });
                
                                });
                          </script>
                    <input name="'.$id.'" id="'.$id.'"  type="text" size="40" class=""/>';
                    return $return;
                }

            
             function updateBox_local_terima_request_vBatch_no($field, $id, $value, $rowData) {
                $url = base_url().'processor/reformulasi/local/terima/request?action=getBatch';
                $sql="select * from kanban.kbn_mbr em where em.vBatch_no='".$value."'";
                $dt=$this->db->query($sql)->row_array();
                if($this->input->get('action')=='view'){
                    $return =$dt['vBatch_no'];
                }else{
                     $return = '<script language="text/javascript">
                                $(document).ready(function() {
                                    var config = {
                                        source: function( request, response) {
                                            $.ajax({
                                                url: "'.$url.'",
                                                dataType: "json",
                                                data: {
                                                    term: request.term,
                                                },
                                                beforeSend: function(){
                                                    $( "#'.$id.'" ).val("");
                                                },

                                                success: function( data ) {
                                                    response( data );
                                                }
                                            });
                                        },
                                        select: function(event, ui){
                                            $( "#'.$id.'" ).val(ui.item.id);
                                            return false;
                                        },
                                        minLength: 2,
                                        autoFocus: true,
                                    };
                
                                    $( "#'.$id.'" ).livequery(function() {
                                        $( this ).autocomplete(config);
                                    });
                
                                });
                          </script>
                    <input name="'.$id.'" id="'.$id.'" value="'.$value.'"  readonly="readonly" type="text"  size="40" class=""/>';

                }
                return $return;
            }

            function updateBox_local_terima_request_vBatch_nox($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   

            function insertBox_local_terima_request_cInisiator($field, $id) {
                $iAm = $this->whoAmI($this->user->gNIP);
                $return = '<input type="hidden" name="'.$field.'" value="'.$iAm['cNip'].'" readonly="readonly" id="'.$id.'" class="  input_rows1 required" size="8" />';
                $return .= $iAm['vName'];
                return $return;
            }

            function updateBox_local_terima_request_cInisiator($field, $id, $value, $rowData) {
                $iAm = $this->whoAmI($value);
                if ($this->input->get('action') == 'view') {
                    $return= $iAm['vName'];

                }
                else{
                    $return = '<input type="hidden" name="'.$field.'"  id="'.$id.'" value="'.$value.'" readonly="readonly" class=" input_rows1 required" size="8" />';
                    $return .= $iAm['vName'];
                }
                return $return;
            }

            function insertBox_local_terima_request_idept_id($field, $id) {
                $iAm = $this->whoAmI($this->user->gNIP);
                $return .= $iAm['vdepartemen'];
                return $return;
            }

            function updateBox_local_terima_request_idept_id($field, $id, $value, $rowData) {
                $iAm = $this->whoAmI($rowData['cInisiator']);
                if ($this->input->get('action') == 'view') {
                    $return= $iAm['vdepartemen'];

                }
                else{
                    $return .= $iAm['vdepartemen'];
                }
                return $return;
            }


 
            

            function insertBox_local_terima_request_dRequest($field, $id) {
                $return = '<input type="text" name="'.$field.'" value="'.date('Y-m-d').'" readonly="readonly" id="'.$id.'" class="  input_rows1 required" size="8" />';
                return $return;
            }

            function updateBox_local_terima_request_dRequest($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                    $return= $value;

                }
                else{
                    $return = '<input type="text" name="'.$field.'"  readonly="readonly" id="'.$id.'" value="'.$value.'" readonly="readonly" class=" input_rows1 required" size="8" />';
                }
                return $return;
            } 

            function insertBox_local_terima_request_iteam_pd($field, $id) {
                $sql = "SELECT t.* FROM reformulasi.reformulasi_team t
                        WHERE t.vtipe = 'PD' AND t.ldeleted = '0' AND t.ireformulasi_team IN (1,2,3)";
                $teams = $this->db->query($sql)->result_array();
                $echo = '<select name="'.$id.'" id="'.$id.'">';
                $echo .= '<option value="">--Pilih--</option>';
                foreach($teams as $t) {
                    $echo .= '<option value="'.$t['ireformulasi_team'].'">'.$t['vteam'].'</option>';
                }
                $echo .= '</select>';
                return $echo;
            }
            function updateBox_local_terima_request_iteam_pd($field, $id, $value, $rowData) {
                $sql = "SELECT t.* FROM reformulasi.reformulasi_team t
                        WHERE t.vtipe = 'PD' AND t.ldeleted = '0' AND t.ireformulasi_team IN (".$rowData['iteam_pd'].") ";
                $teams = $this->db->query($sql)->row_array();
                
                $tampil = $teams['vteam']; 
                $tampil .= '<input name="'.$id.'" id="'.$id.'" type="hidden" value="'.$value.'"  class="required"/>';

                return $tampil;
            }

            
            function insertBox_local_terima_request_vAlasan_refor($field, $id) {
                $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250"></textarea>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 255);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(255 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">250</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_vAlasan_refor($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= '<label title="Note">'.nl2br($value).'</label>'; 
                }else{
                    $return = '<textarea name="'.$field.'" id="'.$id.'"  readonly="readonly" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250">'.nl2br($value).'</textarea>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_iSubmit_terima($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_iSubmit_terima($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            

            function insertBox_local_terima_request_iStatus($field, $id) {
                $o='-';
                $o.='
                <script type="text/javascript">
                    // datepicker
                     $(".tanggal").datepicker({changeMonth:true,
                                                changeYear:true,
                                                dateFormat:"yy-mm-dd" });

                    // input number
                       $(".angka").numeric();
                </script>
                ';

                return $o;
            }

            function updateBox_local_terima_request_iStatus($field, $id, $value, $rowData) {
                if(($value <> 0) || (!empty($value))){
                    $sql_dtapp = 'select * 
                                from reformulasi.local_req_refor a 
                                join hrd.employee b on b.cNip=a.cApproval
                                where
                                a.lDeleted = 0
                                and  a.iLocal_req_refor = "'.$rowData['iLocal_req_refor'].'"';
                    $row = $this->db->query($sql_dtapp)->row_array();
                    if($value==2){
                        $st='<p style="color:green;font-size:120%;">Approved';
                        $ret= $st.' oleh '.$row['vName'].' pada '.$row['dApproval'].'</br> Alasan: '.$row['vRemark'].'</p>';
                    }
                    elseif($value==1){
                        $st='<p style="color:red;font-size:120%;">Rejected';
                        $ret= $st.' oleh '.$row['vName'].' pada '.$row['dApproval'].'</br> Alasan: '.$row['vRemark'].'</p>';
                    } 
                    
                }
                else{
                    $ret='Waiting for Approval';
                }
                

                $ret.='
                <script type="text/javascript">
                    // datepicker
                     $(".tanggal").datepicker({changeMonth:true,
                                                changeYear:true,
                                                dateFormat:"yy-mm-dd" });

                    // input number
                       $(".angka").numeric();
                </script>
                ';

                $ret.="<input name='".$field."'  id='".$id."' type='hidden' value='".$value."' class='required' />";


                return $ret;
            }

            
            function insertBox_local_terima_request_iStatus_proses($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_iStatus_proses($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_cApproval($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_cApproval($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_vRemark($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "200" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 200);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(200 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">200</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_vRemark($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "200"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 200) {
                                            this.value = this.value.substring(0, 200);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(200 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">200</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_dApproval($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_dApproval($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_iSubmit_terima_terima($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_iSubmit_terima_terima($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_cFormulator($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_cFormulatorx($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_iStatus_terima_req($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_iStatus_terima_req($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_cApproved_terima($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_cApproved_terima($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_dApproved_terima($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_dApproved_terima($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_vreason_terima($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "200" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 200);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(200 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">200</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_vreason_terima($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "200"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 200) {
                                            this.value = this.value.substring(0, 200);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(200 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">200</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_iUji_be($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_iUji_be($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_dCreate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_dCreate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_cCreated($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_cCreated($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_dupdate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"}); 
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_dupdate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_cUpdate($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';
                return $return;
            }
            function updateBox_local_terima_request_cUpdate($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 50) {
                                            this.value = this.value.substring(0, 50);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(50 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">50</span> karakter<br/>';

                } 
                return $return;
            }   
            
            function insertBox_local_terima_request_lDeleted($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_local_terima_request_lDeleted($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value; 
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                } 
                return $return;
            }

            function insertBox_local_terima_request_vFile($field, $id) {
                $data['date'] = date('Y-m-d H:i:s');    
                return $this->load->view('local/request_refor_file',$data,TRUE);
            }

            function updateBox_local_terima_request_vFile($field, $id, $value, $rowData) {
            
                $qr="select * from reformulasi.local_req_refor_file where iLocal_req_refor='".$rowData['iLocal_req_refor']."' and lDeleted=0";
                $data['rows'] = $this->db->query($qr)->result_array();
                $data['date'] = date('Y-m-d H:i:s');    
                return $this->load->view('local/terima_request_file',$data,TRUE);
            }

            function getPicRefor() {
                    $teamPD = $_GET['teamPD'];
                    $term = $this->input->get('term');      
                    $data = array();
                    $sql = "select * 
                            from hrd.employee a
                            join hrd.company b on a.iCompanyID=b.iCompanyId
                            where 
                            a.lDeleted=0 
                            and  a.vName like '%".$term."%'
                            #hanya nip yang terdaftar pada team
                            and a.cNip in (select b.vnip 
                                            from reformulasi.reformulasi_team a 
                                            join reformulasi.reformulasi_team_item b on b.ireformulasi_team=a.ireformulasi_team
                                            where a.ldeleted=0
                                            and b.ldeleted=0
                                            and a.ireformulasi_team= '".$teamPD."' )
                            ";
                    $query = $this->db->query($sql);
                    if ($query->num_rows > 0) {
                        foreach($query->result_array() as $line) {
                            $row_array['value'] = trim($line['cNip']).' - '.trim($line['vName']);
                            $row_array['id']    = $line['cNip'];
                            $row_array['nama']    = trim($line['vName']);
                            array_push($data, $row_array);
                        }
                    }
                    echo json_encode($data);
                    exit;
            }


            function updateBox_local_terima_request_cFormulator($field, $id, $value, $rowData) {
                $url=base_url().'processor/reformulasi/local/terima/request?action=getPicRefor';

                $sql="select * from hrd.employee em where em.cNip='".$rowData['cFormulator']."'";
                $dt=$this->db->query($sql)->row_array();

                $cpic_pengirim=$dt['cNip'];
                $namepic=$dt['cNip']." - ".$dt['vName'];




                $re="
                    <input name='".$field."'  id='".$id."' type='hidden' value='".$cpic_pengirim."' class='required' />
                    <input name='".$field."_dis'  id='".$id."_dis' type='text' size='40' value='".$namepic."' class='required' />";
                $re.='<script>
                    var config3 = {
                        source: function( request, response) {
                            $.ajax({
                                url: "'.$url.'",
                                beforeSend: function(){
                                    $( "#'.$id.'" ).val("");
                                },
                                dataType: "json",
                                data: {
                                    term: request.term,
                                    teamPD:  $( "#local_terima_request_iteam_pd" ).val(),

                                },
                                success: function( data ) {
                                    response( data );
                                }
                            });
                        },
                        select: function(event, ui){
                            $( "#'.$id.'" ).val(ui.item.id);
                            $( "#'.$id.'_dis" ).val(ui.item.value);
                            return false;
                        },
                        minLength: 2,
                        autoFocus: true,
                    };

                    $( "#'.$id.'_dis" ).livequery(function() {
                        $( this ).autocomplete(config3);
                    });
                </script>';
                return $re;
            }


            
                           //Ini Merupakan Standart Approve yang digunakan di erp
 
                function approve_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/local/terima/request";                             
                                            if(o.status == true) { 
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_local_terima_request").html(data);
                                                     
                                                });
                                                
                                            }
                                                reload_grid("grid_local_terima_request");
                                        }
                                        
                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Approve</h1><br />';
                    $echo .= '<form id="form_local_terima_request_approve" action="'.base_url().'processor/reformulasi/local/terima/request?action=approve_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark : 
                            <input type="hidden" name="iLocal_req_refor" value="'.$this->input->get('iLocal_req_refor').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_local_terima_request_approve\')">Approve</button>';
                        
                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                } 
 
                function approve_process() {
                    
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $iLocal_req_refor = $post['iLocal_req_refor'];
                    $vRemark_uji = $post['vRemark'];
                    


                    
                    $data=array('iStatus'=>'2','cApproval'=>$cNip , 'dApproval'=>date('Y-m-d H:i:s'), 'vRemark'=>$vRemark_uji);
                    $this -> db -> where('iLocal_req_refor', $iLocal_req_refor);
                    $updet = $this -> db -> update('reformulasi.local_req_refor', $data);


                    if($updet){
                            $qsql="select a.*,b.*,rt.* , if(a.iStatus=2,'Approved','Rejected') as setatus,e.vEmail as mgr_mail 
                                    from reformulasi.local_req_refor a 
                                    join hrd.employee b on b.cNip=a.cInisiator
                                    join reformulasi.reformulasi_team rt on rt.ireformulasi_team=a.iteam_pd
                                    join hrd.employee e on e.cNip = rt.vnip
                                    where a.lDeleted=0
                                    and a.iLocal_req_refor='".$iLocal_req_refor."'";
                            $rsql = $this->db->query($qsql)->row_array();



                            $Requestor = $this->whoAmI($rsql['cInisiator']);
                            $logged_nip = $this->user->gNIP;
                            $iAm = $this->whoAmI($logged_nip);

                            

                            $to = $cc = '';
                            
                            $to = $rsql['mgr_mail'];
                            $cc = $iAm['vEmail'].','.$Requestor['vEmail'];

                          
                            $subject="Approval Reformulasi: No Request ".$rsql['vNo_req_refor'];

                                $content="
                                Diberitahukan bahwa telah ada Approval Reformulasi, dari permintaan reformulasi. 
                                    dengan rincian sebagai berikut :<br><br>  
                                    <table border='0' style='width: 600px;'>
                                        <tr>
                                                <td style='width: 110px;'><b>Requestor </b></td><td style='width: 20px;'> : </td>
                                                <td>".$rsql['cNip'].' || '.$rsql['vName']."</td>
                                        </tr>
                                        <tr>
                                                <td><b>No Request  </b></td><td> : </td>
                                                <td>".$rsql['vNo_req_refor']."</td>
                                        </tr> 
                                        <tr>
                                                <td><b>Status  </b></td><td> : </td>
                                                <td>".$rsql['setatus']."</td>
                                        </tr> 
                                    </table> 
                                <br/> 
                                Link Aplikasi : www.npl-net.com/erp <br>
                                Menu : Reformulasi - Transaksi - Request Reformulasi
                                <br/> <br/>
                                Demikian, mohon segera follow up  pada aplikasi ERP Reformulasi. Terimakasih.<br><br><br>
                                Post Master"; 
                                $this->lib_utilitas->send_email($to, $cc, $subject, $content);

                            


                    }

                    $data['status']  = true;
                    $data['last_id'] = $post['iLocal_req_refor'];
                    return json_encode($data);


                }
            

        
            
                //Ini Merupakan Standart Reject yang digunakan di erp

                function reject_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    var remark = $("#reject_request_refor_remark").val();
                                    if (remark=="") {
                                        alert("Remark tidak boleh kosong ");
                                        return
                                    }

                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/local/terima/request";                             
                                            if(o.status == true) { 
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_local_terima_request").html(data);
                                                     
                                                });
                                                
                                            }
                                                reload_grid("grid_local_terima_request");
                                        }
                                        
                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Reject</h1><br />';
                    $echo .= '<form id="form_local_terima_request_reject" action="'.base_url().'processor/reformulasi/local/terima/request?action=reject_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark : 
                            <input type="hidden" name="iLocal_req_refor" value="'.$this->input->get('iLocal_req_refor').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark" id="reject_request_refor_remark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_local_terima_request_reject\')">Reject</button>';
                        
                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                }


                
                function reject_process() {
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $iLocal_req_refor = $post['iLocal_req_refor'];
                    $vRemark_uji = $post['vRemark'];

                    
                    $data=array('iStatus'=>'1','cApproval'=>$cNip , 'dApproval'=>date('Y-m-d H:i:s'), 'vRemark'=>$vRemark_uji);
                    $this -> db -> where('iLocal_req_refor', $iLocal_req_refor);
                    $updet = $this -> db -> update('reformulasi.local_req_refor', $data);

                    if($updet){
                            $qsql="select a.*,b.*,rt.* , if(a.iStatus=2,'Approved','Rejected') as setatus,e.vEmail as mgr_mail 
                                    from reformulasi.local_req_refor a 
                                    join hrd.employee b on b.cNip=a.cInisiator
                                    join reformulasi.reformulasi_team rt on rt.ireformulasi_team=a.iteam_pd
                                    join hrd.employee e on e.cNip = rt.vnip
                                    where a.lDeleted=0
                                    and a.iLocal_req_refor='".$iLocal_req_refor."'";
                            $rsql = $this->db->query($qsql)->row_array();



                            $Requestor = $this->whoAmI($rsql['cInisiator']);
                            $logged_nip = $this->user->gNIP;
                            $iAm = $this->whoAmI($logged_nip);

                            

                            $to = $cc = '';
                            
                            $to = $rsql['mgr_mail'];
                            $cc = $iAm['vEmail'].','.$Requestor['vEmail'];

                          
                            $subject="Approval Reformulasi: No Request ".$rsql['vNo_req_refor'];

                                $content="
                                Diberitahukan bahwa telah ada Approval Reformulasi, dari permintaan reformulasi yang anda buat. 
                                    dengan rincian sebagai berikut :<br><br>  
                                    <table border='0' style='width: 600px;'>
                                        <tr>
                                                <td style='width: 110px;'><b>Requestor </b></td><td style='width: 20px;'> : </td>
                                                <td>".$rsql['cNip'].' || '.$rsql['vName']."</td>
                                        </tr>
                                        <tr>
                                                <td><b>No Request  </b></td><td> : </td>
                                                <td>".$rsql['vNo_req_refor']."</td>
                                        </tr> 
                                        <tr>
                                                <td><b>Status  </b></td><td> : </td>
                                                <td>".$rsql['setatus']."</td>
                                        </tr> 
                                    </table> 
                                <br/> 
                                Link Aplikasi : www.npl-net.com/erp <br>
                                Menu : Reformulasi - Transaksi - Request Reformulasi
                                <br/> <br/>
                                Demikian, mohon segera follow up  pada aplikasi ERP Reformulasi. Terimakasih.<br><br><br>
                                Post Master"; 
                                $this->lib_utilitas->send_email($to, $cc, $subject, $content);

                            


                    }
                    
                    $data['status']  = true;
                    $data['last_id'] = $post['iLocal_req_refor'];
                    return json_encode($data);
                }
            


        
            //Standart Setiap table harus memiliki dCreate , cCreated, dupdate, cUpdate
            function before_insert_processor($row, $postData) {
                $postData['dCreate'] = date('Y-m-d H:i:s');
                $postData['cCreated']=$this->user->gNIP;
                if($postData['isdraft']==true){
                    $postData['iSubmit_terima']=0;
                } 
                else{$postData['iSubmit_terima']=1;} 
                return $postData;

            }
            function before_update_processor($row, $postData) {
                if($postData['isdraft']==true){
                    $postData['iSubmit_terima']=0;
                } 
                else{
                    $postData['iSubmit_terima']=1;
                    // status ke mapping proses
                    $postData['iStatus_proses']=12;
                    $postData['iStatus_terima_req']=1;

                } 

                $postData['dupdate'] = date('Y-m-d H:i:s');
                $postData['cUpdate'] = $this->user->gNIP;
                return $postData; 
            }    
        


            function after_insert_processor($fields, $id, $postData) {
                //update service_request autonumber No Brosur
                $nomor = "RFL".str_pad($id, 8, "0", STR_PAD_LEFT);
                $sql = "UPDATE reformulasi.local_req_refor SET vNo_req_refor = '".$nomor."' WHERE iLocal_req_refor=$id LIMIT 1";
                $query = $this->db->query( $sql );

                $pk=$id;
                $iSubmit_terima = $postData['iSubmit_terima'];

                $iAm = $this->whoAmI($postData['cInisiator']);


                if ($iSubmit_terima > 0) {
                 
                    
                    $qsql="select * 
                            from reformulasi.local_req_refor a 
                            join hrd.employee b on b.cNip=a.cInisiator
                            where a.lDeleted=0
                            and a.iLocal_req_refor='".$pk."'";
                    $rsql = $this->db->query($qsql)->row_array();
                    
                    $callupper = $this->_upper($postData['cInisiator']);

                    $arrnip = '';
                    foreach ($this->arrEmployeeUpper as $key => $nipchild) {
                        //array_push($arrbaru, $nipchild['nip']);
                         if ($key >0 ) {
                            $arrnip .= ",'".$nipchild['nip']."'";
                        }else{
                            $arrnip .= "'".$nipchild['nip']."'";
                        }

                    }

                    $sqlEmpAr = 'select * 
                                from hrd.employee a 
                                join hrd.position b on b.iPostID=a.iPostID
                                where a.cNip in ('.$arrnip.') 
                                and b.iLvlemp <=6
                                ';
                    $dEmpAr =  $this->db->query($sqlEmpAr)->result_array();

                    $arrEmail = '';
                    foreach ($dEmpAr as $key => $emp) {
                         if ($key > 0 ) {
                            $arrEmail .= ",".$emp['vEmail'];
                        }else{
                            $arrEmail .=$emp['vEmail'];
                        }

                    }


                    $to = $cc = '';
                    $to = $arrEmail;
                    $cc = $iAm['vEmail'];

                    $subject="Request Reformulasi: No Request ".$rsql['vNo_req_refor'];

                        $content="
                        Diberitahukan bahwa telah ada permintaan Reformulasi, dan membutuhkan Approval Bpk/Ibu. 
                            dengan rincian sebagai berikut :<br><br>  
                            <table border='0' style='width: 600px;'>
                                <tr>
                                        <td style='width: 110px;'><b>Requestor </b></td><td style='width: 20px;'> : </td>
                                        <td>".$rsql['cNip'].' || '.$rsql['vName']."</td>
                                </tr>
                                <tr>
                                        <td><b>No Request  </b></td><td> : </td>
                                        <td>".$rsql['vNo_req_refor']."</td>
                                </tr> 
                            </table> 
                        <br/> 
                        Link Aplikasi : http://www.npl-net.com/erp/<br>
                        Menu : Reformulasi - Transaksi - Request Reformulasi
                        <br/> <br/>
                        Demikian, mohon segera follow up  pada aplikasi ERP Reformulasi. Terimakasih.<br><br><br>
                        Post Master"; 

                        $this->lib_utilitas->send_email($to, $cc, $subject, $content);

                }


            }
    
            function after_update_processor($fields, $id, $postData) {
                //Example After Update
                /*
                $cNip = $this->sess_auth->gNIP; 
                $sql = 'Place Query In Here';
                $this->dbset->query($sql);
                */

                $pk=$id;
                $iSubmit_terima = $postData['iSubmit_terima'];
                
                $logged_nip = $this->user->gNIP;
                $iAm = $this->whoAmI($logged_nip);

                $fOrmform = $this->whoAmI($postData['cFormulator']);


                if ($iSubmit_terima > 0) {
                 
                    
                    $qsql="select * 
                            from reformulasi.local_req_refor a 
                            join hrd.employee b on b.cNip=a.cInisiator
                            where a.lDeleted=0
                            and a.iLocal_req_refor='".$pk."'";
                    $rsql = $this->db->query($qsql)->row_array();
                    

                    $to = $cc = '';
                    $to = $fOrmform['vEmail'];
                    $cc = $iAm['vEmail'];

                    $subject="Terima Reformulasi: No Request ".$rsql['vNo_req_refor'];

                        $content="
                        Diberitahukan bahwa telah ada assignment Reformulasi, dan membutuhkan Mapping Proses oleh Bpk / Ibu. 
                            dengan rincian sebagai berikut :<br><br>  
                            <table border='0' style='width: 600px;'>
                                <tr>
                                        <td style='width: 110px;'><b>Requestor </b></td><td style='width: 20px;'> : </td>
                                        <td>".$rsql['cNip'].' || '.$rsql['vName']."</td>
                                </tr>
                                <tr>
                                        <td><b>No Request  </b></td><td> : </td>
                                        <td>".$rsql['vNo_req_refor']."</td>
                                </tr> 
                            </table> 
                        <br/> 
                        Link Aplikasi : http://www.npl-net.com/erp/<br>
                        Menu : Reformulasi - Transaksi - Mapping Proses
                        <br/> <br/>
                        Demikian, mohon segera follow up  pada aplikasi ERP Reformulasi. Terimakasih.<br><br><br>
                        Post Master"; 

                        $this->lib_utilitas->send_email($to, $cc, $subject, $content);

                }


            }

           function manipulate_grid_button($button) {
                    $logged_nip =$this->user->gNIP;
                    $iAm = $this->whoAmI($logged_nip);


                    if ($iAm['iLvlemp'] >=3 and $iAm['iLvlemp'] <=4 ) {
                            
                            // yang bisa buat request hanya level 3 & 4                            
                    }else{
                            
                            //unset($button['create']);
                            $button['create'] = $iAm['cNip'].' Employee Level '.$iAm['iLvlemp'].' . Hanya level 3 dan 4 saja yang bisa request';
                    }

                    return $button;
            } 


            function manipulate_update_button($buttons, $rowData) { 
                //Load Javascript In Here 
                $logged_nip =$this->user->gNIP;

                $Requestor = $this->whoAmI($rowData['cInisiator']);
                $iSubmit_terima = $rowData['iSubmit_terima'];
                $iStatus = $rowData['iStatus'];
                $cInisiator = $rowData['cInisiator'];
                $userLogin = $this->whoAmI($logged_nip);
                


                $update = '<button onclick="javascript:update_btn_back(\'local_terima_request\', \''.base_url().'processor/reformulasi/local/terima/request?company_id='.$this->input->get('company_id').'&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this)" class="ui-button-text icon-save" id="button_save_request_refor">Update & Submit</button>';
                $updatedraft = '<button onclick="javascript:update_draft_btn(\'local_terima_request\', \''.base_url().'processor/reformulasi/local/terima/request?company_id='.$this->input->get('company_id').'&draft=true&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this, true)" class="ui-button-text icon-save" id="button_save_request_refor">Update as Draft</button>';


               // $reqBB = '<button id="2476" rel="plc/sample/permintaan/sample" style="cursor:pointer;" group="47" class="ui-button-text icon-save" >Permintaan Sample</button>';
                
                $reqBB1 = '<span class="file ui-button-text icon-save" id="2476" rel="plc/sample/permintaan/sample" style="cursor:pointer;" group="47">Permintaan Sample</span>';
                $reqBB = '<span class="file ui-button-text ui-button ui-widget ui-state-default ui-corner-all ui-button-text-icon-primary" id="2476" rel="plc/sample/permintaan/sample" style="cursor:pointer;" group="47" role="button" aria-disabled="false"><span class="ui-button-icon-primary "></span><span class="ui-button-text">Permintaan Sample</span></span>';

                $approve = '<button onclick="javascript:load_popup(\''.base_url().'processor/reformulasi/local/terima/request?action=approve&iLocal_req_refor='.$rowData['iLocal_req_refor'].'&cNip='.$logged_nip.'&lvl=1&status=1&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\')" class="ui-button-text icon-save" id="button_approve_request_refor">Approve</button>';
                $reject = '<button onclick="javascript:load_popup(\''.base_url().'processor/reformulasi/local/terima/request?action=reject&iLocal_req_refor='.$rowData['iLocal_req_refor'].'&cNip='.$logged_nip.'&lvl=1&status=1&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\')" class="ui-button-text icon-save" id="button_reject_request_refor">Reject</button>';
               
                $js = $this->load->view('local/js/local_terima_request_js');
                $js .= $this->load->view('local/js/upload_js');

                if ($this->input->get('action') == 'view') {
                    unset($buttons['update']);
                }
                else{ 

                    if($iSubmit_terima > 0){
                        //sudah submit
                        unset($buttons['update']);
                    }else{
                        $buttons['update'] = $updatedraft.$update.$js; 
                    }
                }
                
                return $buttons;
            }
            function manipulate_insert_button($buttons) {
                unset($buttons['save']);


                $save_draft = '<button onclick="javascript:save_draft_btn_multiupload(\'local_terima_request\', \''.base_url().'processor/reformulasi/local/terima/request?draft=true\', this, true)" class="ui-button-text icon-save" id="button_save_draft_local_terima_request">Save as Draft</button>';
                $save = '<button onclick="javascript:save_btn_multiupload(\'local_terima_request\', \''.base_url().'processor/reformulasi/local/terima/request?company_id='.$this->input->get('company_id').'&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this)" class="ui-button-text icon-save" id="button_save_local_terima_request">Save &amp; Submit</button>';
                $js = $this->load->view('local/js/local_terima_request_js');
                $js .= $this->load->view('local/js/upload_js');
                $buttons['save'] = $save_draft.$save.$js;

                return $buttons;
            }

            function download($vFilename) {
                $this->load->helper('download');        
                $name = $vFilename;
                $id = $_GET['id'];
                $tempat = $_GET['path'];
                $path = file_get_contents('./files/reformulasi/local/'.$tempat.'/'.$id.'/'.$name);    
                force_download($name, $path);
            }

            function readDirektory($path, $empty="") {
                $vFilename = array();
                        
                if (empty($empty)) {
                    if ($handle = opendir($path)) {     
                        while (false !== ($entry = readdir($handle))) {
                           if ($entry != '.' && $entry != '..' && $entry != '.svn') {                   
                                //unlink($path."/".$entry);
                                $vFilename[] = $entry;
                            }
                        }       
                        closedir($handle);
                    }
                        
                    $x =  $vFilename;
                } else {
                    if ($handle = opendir($path)) {     
                        while (false !== ($entry = readdir($handle))) {
                           if ($entry != '.' && $entry != '..' && $entry != '.svn') {                   
                                //echo $path."/".$entry;
                                unlink($path."/".$entry);                   
                            }
                        }       
                        closedir($handle);
                    }
                    
                    $x = "";
                }
                
                return $x;
            }

            function hapusfile($path, $file_name, $table, $lastId){
                $path = $path."/".$lastId;
                $path = str_replace("\\", "/", $path);
                //echo 'aa : '.$file_name;
                //
                if (is_array($file_name)) {
                                
                    $list_dir  = $this->readDirektory($path);
                    $list_sql  = $this->readSQL($table, $lastId);
                    asort($file_name);      
                    asort($list_dir);       
                    asort($list_sql);
                    
                    //print_r($list_dir);
                    //print_r($list_sql);
                    //print_r($file_name);
                    //$del = array();
                    foreach($list_dir as $v) {              
                        if (!in_array($v, $file_name)) {                
                            unlink($path.'/'.$v);   
                        }           
                    }
                    foreach($list_sql as $v) {
                        if (!in_array($v, $file_name)) {                
                            $del = "delete from reformulasi.".$table." where iLocal_req_refor = {$lastId} and vFilename= '{$v}'";
                            mysql_query($del);  
                        }
                        
                    }
                    
                    //print_r($del);
                    //exit;
                } else {
                    $this->readDirektory($path, 1);
                    $this->readSQL($table, $lastId, 1);
                }
            } 

            function readSQL($table, $lastId, $empty="") {
                $list_file = array();
                if (empty($empty)) {
                    $sql = "SELECT vFilename from reformulasi.".$table." where iLocal_req_refor=".$lastId;
                    $query = mysql_query($sql);
                    while($row = mysql_fetch_array($query, MYSQL_ASSOC)) {  
                        $list_file[] = $row['vFilename'];
                    }
                    
                    $x = $list_file;
                } else {            
                    $sql = "SELECT vFilename from reformulasi.".$table." where iLocal_req_refor=".$lastId;
                    $query = mysql_query($sql);
                    $sql2 = array();
                    while($row = mysql_fetch_array($query, MYSQL_ASSOC)) {
                        $sql2[] = "DELETE FROM reformulasi.".$table." where iLocal_req_refor=".$lastId." and vFilename='".$row['vFilename']."'";         
                    }
                    
                    foreach($sql2 as $q) {
                        try {
                            mysql_query($q);
                        }catch(Exception $e) {
                            die($e);
                        }
                    }
                    
                  $x = "";
                }
                
                return $x;
            } 

            function getBatch() {
                $term = $this->input->get('term');
                $sql='
                        select * 
                        from kanban.kbn_mbr a 
                        where a.iDeleted=0
                        and ( a.vBatch_no like "%'.$term.'%" or  a.vNama like "%'.$term.'%")
                        order by a.vNama
                       ';
                $dt=$this->db->query($sql);
                $data = array();
                if($dt->num_rows>0){
                    foreach($dt->result_array() as $line) {
            
                        $row_array['value'] = trim($line['vBatch_no']).' - '.trim($line['vNama']);
                        $row_array['id']    = trim($line['vBatch_no']);
            
                        array_push($data, $row_array);
                    }
                }
                echo json_encode($data);
                exit;
            }

            function getProduk() {
                $term = $this->input->get('term');
                $sql='
                        select * 
                        from sales.itemas a 
                        where ( a.c_iteno like "%'.$term.'%" or  a.c_itnam like "%'.$term.'%")
                        and a.c_iteno not in (select aa.cIteno 
                                            from reformulasi.local_req_refor aa 
                                            where aa.lDeleted=0 and aa.iStatus <> 0)
                        order by a.c_itnam
                       ';
                $dt=$this->db->query($sql);
                $data = array();
                if($dt->num_rows>0){
                    foreach($dt->result_array() as $line) {
            
                        $row_array['value'] = trim($line['c_iteno']).' - '.trim($line['c_itnam']);
                        $row_array['id']    = trim($line['c_iteno']);
            
                        array_push($data, $row_array);
                    }
                }
                echo json_encode($data);
                exit;
            }



            //Output
            public function output(){
                $this->index($this->input->get('action'));
            }
        }