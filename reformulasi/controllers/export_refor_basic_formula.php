
        <?php
        /* Generated by Sovdev 2 ERP CRUD Generator 2018-02-22 15:05:24 */
        /* Location: ./modules/reformulasi/controllers/export_refor_basic_formula.php */
        /* Please DO NOT modify this information : */

        if ( ! defined('BASEPATH')) exit('No direct script access allowed');
        class export_refor_basic_formula extends MX_Controller {
            function __construct() {
                parent::__construct();
                $this->load->library('auth_export');
                $this->db = $this->load->database('formulasi', false, true);
                $this->user = $this->auth_export->user();
            }
            function index($action = '') {
                $action = $this->input->get('action');
                //Bikin Object Baru Nama nya $grid
                $grid = new Grid;
                $grid->setTitle('Export Refor Basic Formula');
                $grid->setTable('reformulasi.export_refor_basic_formula');
                $grid->setUrl('export_refor_basic_formula');

                //List Table
                $grid->addList('export_req_refor.vno_export_req_refor','export_refor_formula.vnoFormulasi','dossier_upd.vUpd_no','itemas.c_itnam','isubmited_proses','iappbasic');
                $grid->setSortBy('iexport_refor_basic_formula');
                $grid->setSortOrder('asc');

                //List field
                $grid->addFields('iexport_refor_formula','lblbasic','dtanggal_mulai_formula',
                    'dtanggal_selesai_formula','cpic_formula','dtanggal_berlaku_formula','dtanggal_upload_formula','iuploadbaseformula',
                    'lblbasicspesifikasi','dtanggal_mulai_spesifikasi','dtanggal_selesai_spesifikasi',
                    'dtanggal_upload_spesifikasi','cpic_spesifikasi','iuploadbasespesifikasi',
                    'cpic_formulator','iappbasic');

                //Setting Grid Width Name
                /*
                    Kamu bisa merubah nama label dari sini, Contoh :
                    $grid->setLabel('nama field','nama field yang akan diubah');

                */

                $grid->setWidth('lblbasic', '100');
                $grid->setAlign('lblbasic', 'left');
                $grid->setLabel('lblbasic','Pembuatan Basic Formula ');

                $grid->setWidth('iuploadbasespesifikasi', '100');
                $grid->setAlign('iuploadbasespesifikasi', 'left');
                $grid->setLabel('iuploadbasespesifikasi','File Spesifikasi');

                $grid->setWidth('iuploadbaseformula', '100');
                $grid->setAlign('iuploadbaseformula', 'left');
                $grid->setLabel('iuploadbaseformula','File Basic Formula');

                $grid->setWidth('lblbasicspesifikasi', '100');
                $grid->setAlign('lblbasicspesifikasi', 'left');
                $grid->setLabel('lblbasicspesifikasi','Pembuatan Spesifikasi FG ');

                $grid->setWidth('iexport_refor_formula', '100');
                $grid->setAlign('iexport_refor_formula', 'left');
                $grid->setLabel('iexport_refor_formula','Nomor Formulasi');

                $grid->setWidth('dtanggal_mulai_formula', '100');
                $grid->setAlign('dtanggal_mulai_formula', 'left');
                $grid->setLabel('dtanggal_mulai_formula','Tanggal Mulai Fomula');

                $grid->setWidth('dtanggal_selesai_formula', '100');
                $grid->setAlign('dtanggal_selesai_formula', 'left');
                $grid->setLabel('dtanggal_selesai_formula','Tanggal Selesai Fomula');

                $grid->setWidth('dtanggal_upload_formula', '100');
                $grid->setAlign('dtanggal_upload_formula', 'left');
                $grid->setLabel('dtanggal_upload_formula','Tanggal Upload Formula');

                $grid->setWidth('dtanggal_berlaku_formula', '100');
                $grid->setAlign('dtanggal_berlaku_formula', 'left');
                $grid->setLabel('dtanggal_berlaku_formula','Tanggal Berlaku / Terbit');

                $grid->setWidth('cpic_formula', '100');
                $grid->setAlign('cpic_formula', 'left');
                $grid->setLabel('cpic_formula','PIC Fomula');

                $grid->setWidth('dtanggal_upload_spesifikasi', '100');
                $grid->setAlign('dtanggal_upload_spesifikasi', 'left');
                $grid->setLabel('dtanggal_upload_spesifikasi','Tanggal Upload Spesifikasi');

                $grid->setWidth('dtanggal_mulai_spesifikasi', '100');
                $grid->setAlign('dtanggal_mulai_spesifikasi', 'left');
                $grid->setLabel('dtanggal_mulai_spesifikasi','Tanggal Mulai Spesifikasi');

                $grid->setWidth('dtanggal_selesai_spesifikasi', '100');
                $grid->setAlign('dtanggal_selesai_spesifikasi', 'left');
                $grid->setLabel('dtanggal_selesai_spesifikasi','Tanggal Selesai Spesifikasi');

                $grid->setWidth('cpic_spesifikasi', '100');
                $grid->setAlign('cpic_spesifikasi', 'left');
                $grid->setLabel('cpic_spesifikasi','PIC Sepesifikasi');

                $grid->setWidth('iproses_selanjutnya', '100');
                $grid->setAlign('iproses_selanjutnya', 'left');
                $grid->setLabel('iproses_selanjutnya','Proses Selanjutnya');

                $grid->setWidth('cpic_formulator', '100');
                $grid->setAlign('cpic_formulator', 'left');
                $grid->setLabel('cpic_formulator','PIC Fomulator');

                $grid->setWidth('isubmited_proses', '100');
                $grid->setAlign('isubmited_proses', 'left');
                $grid->setLabel('isubmited_proses','Submitted');

                $grid->setWidth('iappbasic', '100');
                $grid->setAlign('iappbasic', 'left');
                $grid->setLabel('iappbasic','Approval PD');

                $grid->setWidth('cappbasic', '100');
                $grid->setAlign('cappbasic', 'left');
                $grid->setLabel('cappbasic','cappbasic');

                $grid->setWidth('dappbasic', '100');
                $grid->setAlign('dappbasic', 'left');
                $grid->setLabel('dappbasic','dappbasic');

                $grid->setWidth('tappbasic', '100');
                $grid->setAlign('tappbasic', 'left');
                $grid->setLabel('tappbasic','tappbasic');

                $grid->setWidth('export_req_refor.vno_export_req_refor', '200');
                $grid->setAlign('export_req_refor.vno_export_req_refor', 'left');
                $grid->setLabel('export_req_refor.vno_export_req_refor','No Request Reformulasi');

                $grid->setWidth('export_refor_formula.vnoFormulasi', '100');
                $grid->setAlign('export_refor_formula.vnoFormulasi', 'left');
                $grid->setLabel('export_refor_formula.vnoFormulasi','No Formulasi');

                $grid->setWidth('dossier_upd.vUpd_no', '100');
                $grid->setAlign('dossier_upd.vUpd_no', 'left');
                $grid->setLabel('dossier_upd.vUpd_no','No UPD');

                $grid->setWidth('itemas.c_itnam', '300');
                $grid->setAlign('itemas.c_itnam', 'left');
                $grid->setLabel('itemas.c_itnam','Nama Produk');

                 $grid->changeFieldType('isubmited_proses','combobox','',array(''=>'--Selected--',0=>'Draft - Need to be Publish',1=>'Submitted'));

                //Example modifikasi GRID ERP
                /*
                    - Set Query
                        $grid->setQuery('lDeleted = 0 ', null);
                        $grid->setQuery('plc2_upb.iupb_id IN (select distinct(bk.iupb_id) from plc2.plc2_upb_spesifikasi_fg bk where bk.iappqa=2 and bk.ldeleted=0)', null);

                    - Join Table
                        $grid->setJoinTable('hrd.employee', 'employee.cNip = pk_master.vnip', 'inner');

                    - Change Field Name
                        $grid->changeFieldType('ideleted','combobox','',array(''=>'Pilih',0=>'Aktif',1=>'Tidak aktif'));
                */
                $grid->setJoinTable('reformulasi.export_refor_formula', 'export_refor_formula.iexport_refor_formula = export_refor_basic_formula.iexport_refor_formula', 'inner');
                $grid->setJoinTable('reformulasi.export_req_refor', 'export_req_refor.iexport_req_refor = export_refor_formula.iexport_req_refor', 'inner');
                $grid->setJoinTable('dossier.dossier_upd', 'dossier_upd.idossier_upd_id = export_req_refor.idossier_upd_id', 'inner');
                $grid->setJoinTable('sales.itemas', 'itemas.c_iteno = dossier_upd.iupb_id', 'inner');

                 //set search
                $grid->setSearch('export_req_refor.vno_export_req_refor','export_refor_formula.vnoFormulasi','dossier_upd.vUpd_no');

                //set required
                $grid->setRequired('dtanggal_mulai_formula','dtanggal_selesai_formula','dtanggal_upload_formula','dtanggal_berlaku_formula','cpic_formula','dtanggal_upload_spesifikasi','dtanggal_mulai_spesifikasi','dtanggal_selesai_spesifikasi','cpic_spesifikasi','cpic_formulator','iappbasic');

                $grid->setGridView('grid');

                switch ($action) {
                    case 'json':
                            $grid->getJsonData();
                            break;
                    case 'view':
                            $grid->render_form($this->input->get('id'), true);
                            break;
                    case 'download':
                            $this->download($this->input->get('file'));
                            break;
                    case 'create':
                            $grid->render_form();
                            break;
                    case 'searchcNip':
                        echo $this->searchcNip();
                        break;
                    case 'createproses':
                            $isUpload = $this->input->get('isUpload');
                            if($isUpload) {
                                $lastId=$this->input->get('lastId');
                                $path = realpath("files/reformulasi/");

                                if(!file_exists($path."/"."export/basic_formula"."/".$lastId)){
                                    if (!mkdir($path."/"."export/basic_formula"."/".$lastId, 0777, true)) {
                                        die('Failed upload, try again!');
                                    }
                                }
                                $fileketerangan = array();
                                foreach($_POST as $key=>$value) {
                                    if ($key == 'fileketerangan_export_refor_basic_formula_file') {
                                        foreach($value as $k=>$v) {
                                            $fileketerangan[$k] = $v;
                                        }
                                    }
                                }

                                $i=0;
                                $sql = array();
                                foreach ($_FILES['fileid_export_refor_basic_formula_file_upload_export_refor_basic_formula_file']["error"] as $key => $error) {
                                    if ($error == UPLOAD_ERR_OK) {
                                        $tmp_name = $_FILES['fileid_export_refor_basic_formula_file_upload_export_refor_basic_formula_file']["tmp_name"][$key];
                                        $name =$_FILES['fileid_export_refor_basic_formula_file_upload_export_refor_basic_formula_file']["name"][$key];
                                        $data['filename'] = $name;
                                        $data['dInsertDate'] = date('Y-m-d H:i:s');
                                            if(move_uploaded_file($tmp_name, $path."/"."export/basic_formula"."/".$lastId."/".$name)) {
                                                $sql[]="INSERT INTO reformulasi.export_refor_basic_formula_file(iexport_refor_basic_formula,
                                                        vFilename, dCreate, cCreated,
                                                        tKeterangan,iJenisfile)
                                                        VALUES (".$lastId.",'".$data['filename']."',
                                                            '".$data['dInsertDate']."','".$this->user->gNIP."',
                                                            '".$fileketerangan[$i]."',0)";
                                                $i++;
                                            }
                                            else{
                                                echo "Upload ke folder gagal";
                                            }
                                    }
                                }
                                foreach($sql as $q) {
                                    try {
                                        $this->db->query($q);
                                    }catch(Exception $e) {
                                    die($e);
                                    }
                                }


                                ///////-------------------------------------

                                if(!file_exists($path."/"."export/basic_formula_sps"."/".$lastId)){
                                    if (!mkdir($path."/"."export/basic_formula_sps"."/".$lastId, 0777, true)) {
                                        die('Failed upload, try again!');
                                    }
                                }
                                $fileketerangan = array();
                                foreach($_POST as $key=>$value) {
                                    if ($key == 'fileketerangan_export_refor_basic_formula_sps_file') {
                                        foreach($value as $k=>$v) {
                                            $fileketerangan[$k] = $v;
                                        }
                                    }
                                }

                                $i=0;
                                $sql2 = array();
                                foreach ($_FILES['fileid_export_refor_basic_formula_sps_file_upload_export_refor_basic_formula_sps_file']["error"] as $key => $error) {
                                    if ($error == UPLOAD_ERR_OK) {
                                        $tmp_name = $_FILES['fileid_export_refor_basic_formula_sps_file_upload_export_refor_basic_formula_sps_file']["tmp_name"][$key];
                                        $name =$_FILES['fileid_export_refor_basic_formula_sps_file_upload_export_refor_basic_formula_sps_file']["name"][$key];
                                        $data['filename'] = $name;
                                        $data['dInsertDate'] = date('Y-m-d H:i:s');
                                            if(move_uploaded_file($tmp_name, $path."/"."export/basic_formula_sps"."/".$lastId."/".$name)) {
                                                $sql2[]="INSERT INTO reformulasi.export_refor_basic_formula_file(iexport_refor_basic_formula,
                                                        vFilename, dCreate, cCreated,
                                                        tKeterangan,iJenisfile)
                                                        VALUES (".$lastId.",'".$data['filename']."',
                                                            '".$data['dInsertDate']."','".$this->user->gNIP."',
                                                            '".$fileketerangan[$i]."',1)";
                                                $i++;
                                            }
                                            else{
                                                echo "Upload ke folder gagal";
                                            }
                                    }
                                }
                                foreach($sql2 as $q) {
                                    try {
                                        $this->db->query($q);
                                    }catch(Exception $e) {
                                    die($e);
                                    }
                                }

                            }else{
                                echo $grid->saved_form();
                            }
                            break;
                    case 'update':
                            $grid->render_form($this->input->get('id'));
                            break;
                    case 'updateproses':
                            $post=$this->input->post();
                            $lastId=$post['iexport_refor_basic_formula'];
                            $isUpload = $this->input->get('isUpload');
                            if($isUpload) {
                                $path = realpath("files/reformulasi/");

                                if(!file_exists($path."/"."export/basic_formula"."/".$lastId)){
                                    if (!mkdir($path."/"."export/basic_formula"."/".$lastId, 0777, true)) {
                                        die('Failed upload, try again!');
                                    }
                                }
                                $fileketerangan = array();
                                foreach($_POST as $key=>$value) {
                                    if ($key == 'fileketerangan_export_refor_basic_formula_file') {
                                        foreach($value as $k=>$v) {
                                            $fileketerangan[$k] = $v;
                                        }
                                    }
                                }

                                $i=0;
                                $sql = array();
                                foreach ($_FILES['fileid_export_refor_basic_formula_file_upload_export_refor_basic_formula_file']["error"] as $key => $error) {
                                    if ($error == UPLOAD_ERR_OK) {
                                        $tmp_name = $_FILES['fileid_export_refor_basic_formula_file_upload_export_refor_basic_formula_file']["tmp_name"][$key];
                                        $name =$_FILES['fileid_export_refor_basic_formula_file_upload_export_refor_basic_formula_file']["name"][$key];
                                        $data['filename'] = $name;
                                        $data['dInsertDate'] = date('Y-m-d H:i:s');
                                            if(move_uploaded_file($tmp_name, $path."/"."export/basic_formula"."/".$lastId."/".$name)) {
                                                $sql[]="INSERT INTO reformulasi.export_refor_basic_formula_file(iexport_refor_basic_formula,
                                                        vFilename, dCreate, cCreated,
                                                        tKeterangan,iJenisfile)
                                                        VALUES (".$lastId.",'".$data['filename']."',
                                                            '".$data['dInsertDate']."','".$this->user->gNIP."',
                                                            '".$fileketerangan[$i]."',0)";
                                                $i++;
                                            }
                                            else{
                                                echo "Upload ke folder gagal";
                                            }
                                    }
                                }
                                foreach($sql as $q) {
                                    try {
                                        $this->db->query($q);
                                    }catch(Exception $e) {
                                    die($e);
                                    }
                                }


                                ///////-------------------------------------

                                if(!file_exists($path."/"."export/basic_formula_sps"."/".$lastId)){
                                    if (!mkdir($path."/"."export/basic_formula_sps"."/".$lastId, 0777, true)) {
                                        die('Failed upload, try again!');
                                    }
                                }
                                $fileketerangan = array();
                                foreach($_POST as $key=>$value) {
                                    if ($key == 'fileketerangan_export_refor_basic_formula_sps_file') {
                                        foreach($value as $k=>$v) {
                                            $fileketerangan[$k] = $v;
                                        }
                                    }
                                }

                                $i=0;
                                $sql2 = array();
                                foreach ($_FILES['fileid_export_refor_basic_formula_sps_file_upload_export_refor_basic_formula_sps_file']["error"] as $key => $error) {
                                    if ($error == UPLOAD_ERR_OK) {
                                        $tmp_name = $_FILES['fileid_export_refor_basic_formula_sps_file_upload_export_refor_basic_formula_sps_file']["tmp_name"][$key];
                                        $name =$_FILES['fileid_export_refor_basic_formula_sps_file_upload_export_refor_basic_formula_sps_file']["name"][$key];
                                        $data['filename'] = $name;
                                        $data['dInsertDate'] = date('Y-m-d H:i:s');
                                            if(move_uploaded_file($tmp_name, $path."/"."export/basic_formula_sps"."/".$lastId."/".$name)) {
                                                $sql2[]="INSERT INTO reformulasi.export_refor_basic_formula_file(iexport_refor_basic_formula,
                                                        vFilename, dCreate, cCreated,
                                                        tKeterangan,iJenisfile)
                                                        VALUES (".$lastId.",'".$data['filename']."',
                                                            '".$data['dInsertDate']."','".$this->user->gNIP."',
                                                            '".$fileketerangan[$i]."',1)";
                                                $i++;
                                            }
                                            else{
                                                echo "Upload ke folder gagal";
                                            }
                                    }
                                }
                                foreach($sql2 as $q) {
                                    try {
                                        $this->db->query($q);
                                    }catch(Exception $e) {
                                    die($e);
                                    }
                                }

                            }else{

                                $fileid1='';
                                foreach($_POST as $key=>$value) {
                                    if ($key == 'fileid_export_refor_basic_formula_file_upload_export_refor_basic_formula_file') {
                                        $i=0;
                                        foreach($value as $k=>$v) {
                                            if($i==0){
                                                $fileid1 .= "'".$v."'";
                                            }else{
                                                $fileid1 .= ",'".$v."'";
                                            }
                                            $i++;
                                        }
                                    }
                                }
                                if($fileid1==""){
                                    $fileid1=0;
                                }
                                $tgl= date('Y-m-d H:i:s');
                                $sql1="update reformulasi.export_refor_basic_formula_file set lDeleted=1,
                                    dupdate='".$tgl."', cUpdate='".$this->user->gNIP."' where
                                    iexport_refor_basic_formula='".$lastId."' and iJenisfile =0 and
                                    iexport_refor_basic_formula_file not in (".$fileid1.")";
                                $this->db->query($sql1);

                                //Disolusi
                                $fileid1='';
                                foreach($_POST as $key=>$value) {
                                    if ($key == 'fileid_export_refor_basic_formula_sps_file_upload_export_refor_basic_formula_sps_file') {
                                        $i=0;
                                        foreach($value as $k=>$v) {
                                            if($i==0){
                                                $fileid1 .= "'".$v."'";
                                            }else{
                                                $fileid1 .= ",'".$v."'";
                                            }
                                            $i++;
                                        }
                                    }
                                }
                                if($fileid1==""){
                                    $fileid1=0;
                                }
                                $tgl= date('Y-m-d H:i:s');
                                $sql1="update reformulasi.export_refor_basic_formula_file set lDeleted=1,
                                    dupdate='".$tgl."', cUpdate='".$this->user->gNIP."' where
                                    iexport_refor_basic_formula='".$lastId."' and iJenisfile =1 and
                                    iexport_refor_basic_formula_file not in (".$fileid1.")";
                                $this->db->query($sql1);
                                echo $grid->updated_form();
                            }
                            break;
                    case 'delete':
                            echo $grid->delete_row();
                            break;

                        //Ini Merupakan Standart Case Untuk Approve

                        case 'approve':
                            echo $this->approve_view();
                            break;
                        case 'approve_process':
                            echo $this->approve_process();
                            break;
                        case 'reject':
                            echo $this->reject_view();
                            break;
                        case 'reject_process':
                            echo $this->reject_process();
                            break;

                    default:
                            $grid->render_grid();
                            break;
                }
            }
            //Create Manipulate Field

            //Jika Ingin Menambahkan Seting grid seperti button edit enable dalam kondisi tertentu

            function listBox_Action($row, $actions) {
                if ($row->isubmited_proses<>0 ) {
                    if ($row->iappbasic<>0 ) {
                        unset($actions['edit']);
                    }else{
                        $type = '';
                        if($this->auth_export->is_manager()){
                            $x=$this->auth_export->tipe();
                            $manager=$x['manager'];
                            if(in_array('PD', $manager)){
                                $type='PD';
                            }
                            else{
                                $type='';
                            }
                        }
                        if(!$this->auth_export->is_manager() && $type!='PD'){
                            unset($actions['edit']);
                        }
                    }
                }
                return $actions;
            }


            // function insertBox_export_refor_basic_formula_iexport_refor_formula($field, $id) {
            //     $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
            //     $return .= '<script>
            //                     $("#'.$id.'").keyup(function() {
            //                          this.value = this.value.replace(/[^0-9\.]/g,"");
            //                     });
            //                  </script>';
            //     return $return;
            // }


             public function searchcNip() {
                    $tgl        = date('Y-m-d');
                    $term       = $this->input->get('term');

                    $data = array();

                    //$sql = "select cNip, vName from hrd.employee where (cNip like '%{$term}%') limit 1 ";
                    $sql = "SELECT a.cNip,a.vName,a.iDivisionID,a.iDepartementId,a.ibagid,a.iArea,a.iPostId,
                            (SELECT vDescription FROM hrd.msdivision WHERE iDivID=a.iDivisionID) AS divisi,
                            (SELECT vDescription FROM hrd.msdepartement WHERE iDeptID=a.iDepartementId) AS departement,
                            (SELECT vDescription FROM hrd.bagian WHERE ibagid=a.ibagid) AS bagian,
                            (SELECT vAreaname FROM hrd.area WHERE iAreaID=a.iArea) AS vAreaname,
                            (SELECT vDescription FROM hrd.position WHERE iPostId=a.iPostId) AS jabatan,
                            (SELECT c.vDescription FROM hrd.position AS b LEFT JOIN hrd.lvlemp AS c ON c.iLvlEmp=b.iLvlID
                              WHERE b.iPostId=a.iPostID) AS lvlemply

                            FROM hrd.employee AS a WHERE
                            (a.dresign='0000-00-00' OR a.dresign>'".date('Y-m-d H:i:s')."') AND
                            (a.cNip LIKE '%{$term}%' OR a.vName LIKE '%{$term}%') limit 50";
                    //echo $sql;exit;

                    $query = $this->db->query($sql);
                    if ($query->num_rows > 0) {
                        foreach($query->result_array() as $line) {
                            $row_array['id']        = trim($line['cNip']);
                            $row_array['value']     = trim($line['cNip']).' - '.trim($line['vName']);
                            $row_array['divisi']    = trim($line['divisi']);
                            $row_array['vAreaname'] = trim($line['vAreaname']);
                            $row_array['jabatan']   = trim($line['jabatan']);
                            $row_array['departement']   = trim($line['departement']);
                            $row_array['bagian']        = trim($line['bagian']);
                            $row_array['lvlemply']      = trim($line['lvlemply']);

                            $row_array['iDivisionID']   = trim($line['iDivisionID']);
                            $row_array['iDepartementId']    = trim($line['iDepartementId']);
                            $row_array['ibagid']        = trim($line['ibagid']);
                            $row_array['iArea']         = trim($line['iArea']);
                            $row_array['iPostId']       = trim($line['iPostId']);

                            array_push($data, $row_array);
                        }
                    }

                    echo json_encode($data);
                    exit;
                }

            function listBox_export_refor_basic_formula_iappbasic($value) {
                if($value==0){$vstatus='Waiting for approval';}
                elseif($value==1){$vstatus='Rejected';}
                elseif($value==2){$vstatus='Approved';}
                return $vstatus;
            }

            function insertBox_export_refor_basic_formula_iexport_refor_formula($field, $id) {
                $uri = 'export_refor_basic_formula';
                $o = "";
                $o   .= "<div style='
                                padding: 3px;
                                width: 500px;
                                border: 1px solid rgba(51, 23, 93, 0.2);
                                background-color: #FFF;'>";


                $o   .= "<table border='0' style='width: 100%;'>
                            <tbody>";
                $o  .="         <tr>
                                    <td width='20%'>No Formulasi</td>
                                    <td>:</td>
                                    <td width='75%'>";
                $o .= '         <input type="hidden" name="'.$field.'"  id="'.$id.'"  class="'.$id.' input_rows1 required" size="30" />';
                $o .= '         <input readonly type="text" name="'.$uri.'_vnoFormulasi"  id="'.$uri.'_vnoFormulasi"  class="'.$uri.'_vnoFormulasi required input_rows1" size="30" />';
                $o .= '         &nbsp;<button class="icon_pop"  onclick="browse(\''.base_url().'processor/reformulasi/browse/basic/noformula/?field=export_refor_basic_formula\',\'Request Reformulasi\')" type="button">Browse</button>';
                $o  .="             </td>
                                </tr>

                                <tr>
                                    <td width='20%'>No Request</td>
                                    <td>:</td>
                                    <td width='75%'>
                                        <span class='".$uri."_vno_export_req_refor' id='".$uri."_vno_export_req_refor'></span>
                                    </td>
                                </tr>

                                <tr>
                                    <td width='20%'>No UPD</td>
                                    <td>:</td>
                                    <td width='75%'>
                                        <span class='".$uri."_vUpd_no' id='".$uri."_vUpd_no'></span>
                                    </td>
                                </tr>

                                <tr>
                                    <td width='20%'>Nama Produk</td>
                                    <td>:</td>
                                    <td width='75%'>
                                        <span class='".$uri."_cIteno' id='".$uri."_cIteno'></span>
                                    </td>
                                </tr>

                            </tbody>
                        </table>";
                $o .= "    </div>";

                $o .= '<script>
                        $( "button.icon_pop" ).button({
                            icons: {
                                primary: "ui-icon-newwin"
                            },
                        })
                    </script>';


                return $o;
            }
            function updateBox_export_refor_basic_formula_iexport_refor_formula($field, $id, $value, $rowData) {

                $sqlData = 'SELECT  ef.`vnoFormulasi`,er.`vno_export_req_refor`, du.`vUpd_no`, it.`c_itnam` FROM reformulasi.`export_req_refor` er
                    JOIN reformulasi.`export_refor_formula` ef ON ef.`iexport_req_refor` = er.`iexport_req_refor`
                    JOIN dossier.`dossier_upd` du ON du.`idossier_upd_id`  = er.`idossier_upd_id`
                    JOIN sales.`itemas` it ON it.`c_iteno` = du.`iupb_id`
                    WHERE er.`lDeleted` = 0
                    AND du.`lDeleted` = 0
                    AND it.`lDeleted` = 0
                    AND ef.`iexport_refor_formula` = "'.$value.'"';

                    $dtOut = $this->db->query($sqlData)->row_array();
                    if(empty($dtOut['vno_export_req_refor'])){
                        $dtOut['vno_export_req_refor'] = '-';
                    }
                    if(empty($dtOut['vUpd_no'])){
                        $dtOut['vUpd_no'] = '-';
                    }
                    if(empty($dtOut['c_itnam'])){
                        $dtOut['c_itnam'] = '-';
                    }
                    if(empty($dtOut['vnoFormulasi'])){
                        $dtOut['vnoFormulasi'] = '-';
                    }

                $uri = 'export_refor_basic_formula';
                $o = "";
                $o   .= "<div style='
                                padding: 3px;
                                width: 500px;
                                border: 1px solid rgba(51, 23, 93, 0.2);
                                background-color: #FFF;'>";


                $o   .= "<table border='0' style='width: 100%;'>
                            <tbody>";
                $o  .="         <tr>
                                    <td width='20%'>No Formulasi</td>
                                    <td>:</td>
                                    <td width='75%'>";
                $o .= '         <input type="hidden" name="'.$field.'"  id="'.$id.'"  class="'.$id.' input_rows1 required" size="30" value="'.$value.'" />';
                $o .= '         <input readonly type="text" name="'.$uri.'_vnoFormulasi"  id="'.$uri.'_vnoFormulasi"  class="'.$uri.'_vnoFormulasi required input_rows1" size="30" value="'.$dtOut['vnoFormulasi'].'"/>';
                $o .= '         &nbsp;<button class="icon_pop"  onclick="browse(\''.base_url().'processor/reformulasi/browse/basic/noformula/?field=export_refor_basic_formula\',\'Request Reformulasi\')" type="button">Browse</button>';
                $o  .="             </td>
                                </tr>

                                <tr>
                                    <td width='20%'>No Request</td>
                                    <td>:</td>
                                    <td width='75%'>
                                        <span class='".$uri."_vno_export_req_refor' id='".$uri."_vno_export_req_refor'>".$dtOut['vno_export_req_refor']."</span>
                                    </td>
                                </tr>

                                <tr>
                                    <td width='20%'>No UPD</td>
                                    <td>:</td>
                                    <td width='75%'>
                                        <span class='".$uri."_vUpd_no' id='".$uri."_vUpd_no'>".$dtOut['vUpd_no']."</span>
                                    </td>
                                </tr>

                                <tr>
                                    <td width='20%'>Nama Produk</td>
                                    <td>:</td>
                                    <td width='75%'>
                                        <span class='".$uri."_cIteno' id='".$uri."_cIteno'>".$dtOut['c_itnam']."</span>
                                    </td>
                                </tr>

                            </tbody>
                        </table>";
                $o .= "    </div>";

                $o .= '<script>
                        $( "button.icon_pop" ).button({
                            icons: {
                                primary: "ui-icon-newwin"
                            },
                        })
                    </script>';


                return $o;
            }
            function insertBox_export_refor_basic_formula_lblbasic($field, $id){
                $return = '<script>
                    $("label[for=\'export_refor_basic_formula_lblbasic\']").css({"border": "1px solid #dddddd", "background": "#548cb6", "border-collapse": "collapse","width":"99%","font-weight":"bold","color":"#ffffff","text-shadow": "0 1px 1px rgba(0, 0, 0, 0.3)","text-transform": "uppercase"});
                </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_lblbasic($field, $id, $value, $rowData){
                $return = '<script>
                    $("label[for=\'export_refor_basic_formula_lblbasic\']").css({"border": "1px solid #dddddd", "background": "#548cb6", "border-collapse": "collapse","width":"99%","font-weight":"bold","color":"#ffffff","text-shadow": "0 1px 1px rgba(0, 0, 0, 0.3)","text-transform": "uppercase"});
                </script>';
                return $return;
            }

            function insertBox_export_refor_basic_formula_lblbasicspesifikasi($field, $id){
                $return = '<script>
                    $("label[for=\'export_refor_basic_formula_lblbasicspesifikasi\']").css({"border": "1px solid #dddddd", "background": "#548cb6", "border-collapse": "collapse","width":"99%","font-weight":"bold","color":"#ffffff","text-shadow": "0 1px 1px rgba(0, 0, 0, 0.3)","text-transform": "uppercase"});
                </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_lblbasicspesifikasi($field, $id, $value, $rowData){
                $return = '<script>
                    $("label[for=\'export_refor_basic_formula_lblbasicspesifikasi\']").css({"border": "1px solid #dddddd", "background": "#548cb6", "border-collapse": "collapse","width":"99%","font-weight":"bold","color":"#ffffff","text-shadow": "0 1px 1px rgba(0, 0, 0, 0.3)","text-transform": "uppercase"});
                </script>';
                return $return;
            }

            function insertBox_export_refor_basic_formula_dtanggal_mulai_formula($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"});
                             </script>';
                $return .= '<input type="hidden" name="isdraft" id="isdraft" class="isdraft">';
                return $return;
            }
            function updateBox_export_refor_basic_formula_dtanggal_mulai_formula($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                }
                $return .= '<input type="hidden" name="isdraft" id="isdraft" class="isdraft">';
                return $return;
            }

            function insertBox_export_refor_basic_formula_dtanggal_selesai_formula($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"});
                             </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_dtanggal_selesai_formula($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_dtanggal_upload_formula($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"});
                             </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_dtanggal_upload_formula($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_dtanggal_berlaku_formula($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"});
                             </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_dtanggal_berlaku_formula($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_cpic_formula($field, $id) {
                // $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "8" />';
                // $return .= '<script>
                //                 $("#'.$id.'").keyup(function() {
                //                     var len = this.value.length;
                //                         if (len >= 250) {
                //                             this.value = this.value.substring(0, 8);
                //                         }
                //                     $("#maxlengthnote_'.$id.'").text(8 - len);
                //                 });
                //              </script>';
                // $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">8</span> karakter<br/>';
                // return $return;

                $url6 = base_url().'processor/reformulasi/export/refor/basic/formula?action=searchcNip';
                $o = "<script type='text/javascript'>
                                $(document).ready(function() {
                                    $('#".$id."_').live('keyup', function(e) {
                                        var config = {
                                            source: '".$url6."',
                                            select: function(event, ui){
                                                $('#".$id."').val(ui.item.id);
                                                $('#".$id."_').val(ui.item.value);
                                                return false;
                                            },
                                            minLength: 2,
                                            autoFocus: true,
                                            };
                                        $('#".$id."_').autocomplete(config);
                                        $(this).keypress(function(e){
                                            if(e.which != 13) {
                                                $('#".$id."').val('');
                                            }
                                        });
                                        $(this).blur(function(){
                                            if($('#".$id."').val() == '') {
                                                $(this).val('');
                                            }
                                        });

                                    });

                                });
                          </script>";
                $o   .= '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value=""/>';
                $o   .= '<input type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 required" size="30" maxlength = "50"  value=""/>';
                return $o;
            }
            function updateBox_export_refor_basic_formula_cpic_formula($field, $id, $value, $rowData) {
                // if ($this->input->get('action') == 'view') {
                //      $return= $value;
                // }else{
                // $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "8"  value="'.$value.'"/>';
                // $return .= '<script>
                //                 $("#'.$id.'").keyup(function() {
                //                     var len = this.value.length;
                //                         if (len >= 8) {
                //                             this.value = this.value.substring(0, 8);
                //                         }
                //                     $("#maxlengthnote_'.$id.'").text(8 - len);
                //                 });
                //              </script>';
                // $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">8</span> karakter<br/>';

                // }
                // return $return;

                $vn = "SELECT e.`vName` FROM hrd.`employee` e WHERE e.`cNip` = '".$value."'";
                $vName = $this->db->query($vn)->row_array();
                if(empty($vName['vName'])){
                    $vName['vName'] = '-';
                }
                if ($this->input->get('action') == 'view') {
                     $o= $value.' - '.$vName['vName'];
                }else{
                    $url6 = base_url().'processor/reformulasi/export/refor/basic/formula?action=searchcNip';
                    $o = "<script type='text/javascript'>
                                    $(document).ready(function() {
                                        $('#".$id."_').live('keyup', function(e) {
                                            var config = {
                                                source: '".$url6."',
                                                select: function(event, ui){
                                                    $('#".$id."').val(ui.item.id);
                                                    $('#".$id."_').val(ui.item.value);
                                                    return false;
                                                },
                                                minLength: 2,
                                                autoFocus: true,
                                                };
                                            $('#".$id."_').autocomplete(config);
                                            $(this).keypress(function(e){
                                                if(e.which != 13) {
                                                    $('#".$id."').val('');
                                                }
                                            });
                                            $(this).blur(function(){
                                                if($('#".$id."').val() == '') {
                                                    $(this).val('');
                                                }
                                            });

                                        });

                                    });
                              </script>";
                    $o   .= '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.'"/>';
                    $o   .= '<input type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 required" size="30" maxlength = "50"  value="'.$value.' - '.$vName['vName'].'"/>';
                }


                return $o;
            }

            function insertBox_export_refor_basic_formula_dtanggal_upload_spesifikasi($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"});
                             </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_dtanggal_upload_spesifikasi($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_iuploadbaseformula($field, $id) {
                $data['rows']=array();
                $return = $this->load->view('export/export_refor_basic_formula_file',$data,TRUE);
                return $return;
            }
            function updateBox_export_refor_basic_formula_iuploadbaseformula($field, $id, $value, $rowData) {
                $sq = "SELECT * FROM reformulasi.`export_refor_basic_formula_file` e WHERE
                e.`iexport_refor_basic_formula` = '".$rowData['iexport_refor_basic_formula']."' AND iJenisfile=0";
                $data['rows']=$this->db->query($sq)->result_array();
                $return = $this->load->view('export/export_refor_basic_formula_file',$data,TRUE);
                return $return;
            }

             function insertBox_export_refor_basic_formula_iuploadbasespesifikasi($field, $id) {
                $data['rows']=array();
                $return = $this->load->view('export/export_refor_basic_formula_sps_file',$data,TRUE);
                return $return;
            }
            function updateBox_export_refor_basic_formula_iuploadbasespesifikasi($field, $id, $value, $rowData) {
                $sq = "SELECT * FROM reformulasi.`export_refor_basic_formula_file` e WHERE
                e.`iexport_refor_basic_formula` = '".$rowData['iexport_refor_basic_formula']."' AND iJenisfile=1";
                $data['rows']=$this->db->query($sq)->result_array();
                $return = $this->load->view('export/export_refor_basic_formula_sps_file',$data,TRUE);
                return $return;
            }

            function insertBox_export_refor_basic_formula_dtanggal_mulai_spesifikasi($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"});
                             </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_dtanggal_mulai_spesifikasi($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_dtanggal_selesai_spesifikasi($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"});
                             </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_dtanggal_selesai_spesifikasi($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_cpic_spesifikasi($field, $id) {
                $url6 = base_url().'processor/reformulasi/export/refor/basic/formula?action=searchcNip';
                $o = "<script type='text/javascript'>
                                $(document).ready(function() {
                                    $('#".$id."_').live('keyup', function(e) {
                                        var config = {
                                            source: '".$url6."',
                                            select: function(event, ui){
                                                $('#".$id."').val(ui.item.id);
                                                $('#".$id."_').val(ui.item.value);
                                                return false;
                                            },
                                            minLength: 2,
                                            autoFocus: true,
                                            };
                                        $('#".$id."_').autocomplete(config);
                                        $(this).keypress(function(e){
                                            if(e.which != 13) {
                                                $('#".$id."').val('');
                                            }
                                        });
                                        $(this).blur(function(){
                                            if($('#".$id."').val() == '') {
                                                $(this).val('');
                                            }
                                        });

                                    });

                                });
                          </script>";
                $o   .= '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value=""/>';
                $o   .= '<input type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value=""/>';
                return $o;
            }
            function updateBox_export_refor_basic_formula_cpic_spesifikasi($field, $id, $value, $rowData) {
                $vn = "SELECT e.`vName` FROM hrd.`employee` e WHERE e.`cNip` = '".$value."'";
                $vName = $this->db->query($vn)->row_array();
                if(empty($vName['vName'])){
                    $vName['vName'] = '-';
                }
                if ($this->input->get('action') == 'view') {
                     $o= $value.' - '.$vName['vName'];
                }else{
                    $url6 = base_url().'processor/reformulasi/export/refor/basic/formula?action=searchcNip';
                    $o = "<script type='text/javascript'>
                                    $(document).ready(function() {
                                        $('#".$id."_').live('keyup', function(e) {
                                            var config = {
                                                source: '".$url6."',
                                                select: function(event, ui){
                                                    $('#".$id."').val(ui.item.id);
                                                    $('#".$id."_').val(ui.item.value);
                                                    return false;
                                                },
                                                minLength: 2,
                                                autoFocus: true,
                                                };
                                            $('#".$id."_').autocomplete(config);
                                            $(this).keypress(function(e){
                                                if(e.which != 13) {
                                                    $('#".$id."').val('');
                                                }
                                            });
                                            $(this).blur(function(){
                                                if($('#".$id."').val() == '') {
                                                    $(this).val('');
                                                }
                                            });

                                        });

                                    });
                              </script>";
                    $o   .= '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                    $o   .= '<input type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.' - '.$vName['vName'].'"/>';
                }
                return $o;
            }

            function insertBox_export_refor_basic_formula_iproses_selanjutnya($field, $id) {
                $check='';
                $return='<input type="checkbox" id="'.$id.'_pilot" name="'.$id.'_pilot" value="1" class="checkbox" '.$check.'>Request BB untuk Pilot<br>
                        <input type="checkbox" id="'.$id.'_MBR" name="'.$id.'_MBR" value="0" class="checkbox" checked onclick="return false;">Pembuatan Master Formula dan MBR';
                return $return;
            }
            function updateBox_export_refor_basic_formula_iproses_selanjutnya($field, $id, $value, $rowData) {
                $check=$rowData['iproses_selanjutnya_pilot']==1 ? 'checked' : '' ;
                $return='<input type="checkbox" id="'.$id.'_pilot" name="'.$id.'_pilot" value="1" class="checkbox" '.$check.'>Request BB untuk Pilot<br>
                        <input type="checkbox" id="'.$id.'_MBR" name="'.$id.'_MBR" value="0" class="checkbox" checked onclick="return false;">Pembuatan Master Formula dan MBR';
                return $return;
            }

            function insertBox_export_refor_basic_formula_cpic_formulator($field, $id) {
                $url6 = base_url().'processor/reformulasi/export/refor/basic/formula?action=searchcNip';
                $o = "<script type='text/javascript'>
                                $(document).ready(function() {
                                    $('#".$id."_').live('keyup', function(e) {
                                        var config = {
                                            source: '".$url6."',
                                            select: function(event, ui){
                                                $('#".$id."').val(ui.item.id);
                                                $('#".$id."_').val(ui.item.value);
                                                return false;
                                            },
                                            minLength: 2,
                                            autoFocus: true,
                                            };
                                        $('#".$id."_').autocomplete(config);
                                        $(this).keypress(function(e){
                                            if(e.which != 13) {
                                                $('#".$id."').val('');
                                            }
                                        });
                                        $(this).blur(function(){
                                            if($('#".$id."').val() == '') {
                                                $(this).val('');
                                            }
                                        });

                                    });

                                });
                          </script>";
                $o   .= '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "50"  value=""/>';
                $o   .= '<input type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value=""/>';
                return $o;
            }
            function updateBox_export_refor_basic_formula_cpic_formulator($field, $id, $value, $rowData) {
                $vn = "SELECT e.`vName` FROM hrd.`employee` e WHERE e.`cNip` = '".$value."'";
                $vName = $this->db->query($vn)->row_array();
                if(empty($vName['vName'])){
                    $vName['vName'] = '-';
                }
                if ($this->input->get('action') == 'view') {
                     $o= $value.' - '.$vName['vName'];
                }else{
                    $url6 = base_url().'processor/reformulasi/export/refor/basic/formula?action=searchcNip';
                    $o = "<script type='text/javascript'>
                                    $(document).ready(function() {
                                        $('#".$id."_').live('keyup', function(e) {
                                            var config = {
                                                source: '".$url6."',
                                                select: function(event, ui){
                                                    $('#".$id."').val(ui.item.id);
                                                    $('#".$id."_').val(ui.item.value);
                                                    return false;
                                                },
                                                minLength: 2,
                                                autoFocus: true,
                                                };
                                            $('#".$id."_').autocomplete(config);
                                            $(this).keypress(function(e){
                                                if(e.which != 13) {
                                                    $('#".$id."').val('');
                                                }
                                            });
                                            $(this).blur(function(){
                                                if($('#".$id."').val() == '') {
                                                    $(this).val('');
                                                }
                                            });

                                        });

                                    });
                              </script>";
                    $o   .= '<input type="hidden" name="'.$field.'"  id="'.$id.'"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.'"/>';
                    $o   .= '<input type="text" name="'.$field.'_"  id="'.$id.'_"  class="input_rows1 " size="30" maxlength = "50"  value="'.$value.' - '.$vName['vName'].'"/>';
                }
                return $o;
            }

            function insertBox_export_refor_basic_formula_isubmited_proses($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_isubmited_proses($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                     this.value = this.value.replace(/[^0-9\.]/g,"");
                                });
                             </script>';
                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_iappbasic($field, $id) {
                $return ='';
                $return .= '
                            <script type="text/javascript">
                                $("label[for=\''.$id.'\']").hide();
                                $("label[for=\''.$id.'\']").next().css("margin-left",0);
                            </script>
                        ';
                $return .= '<div></div>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_iappbasic($field, $id, $value, $rowData) {
               if(($value <> 0) || (!empty($value))){
                    $sql_dtapp = "SELECT * FROM reformulasi.`export_refor_basic_formula` a JOIN hrd.employee b on b.cNip=a.cappbasic
                    WHERE a.`lDeleted` = 0 AND a.iexport_refor_basic_formula = '".$rowData['iexport_refor_basic_formula']."'";
                    $row = $this->db->query($sql_dtapp)->row_array();

                    if($value==2){
                        $st='<i><p style="">Approved';
                        $ret= $st.' oleh '.$row['vName'].' pada '.$row['dappbasic'].'</br> Alasan: '.$row['tappbasic'].'</p>';
                    }
                    elseif($value==1){
                        $st='<i><p style="color:red;">Rejected';
                        $ret= $st.' oleh '.$row['vName'].' pada '.$row['dappbasic'].'</br> Alasan: '.$row['tappbasic'].'</p>';
                    }
                }
                else{
                    $ret='Waiting for Approval';
                }
                $ret .= "</i><input type='hidden' name='".$field."' id='".$id."'  value='".$value."'/>";
                return $ret;
            }

            function insertBox_export_refor_basic_formula_cappbasic($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "8" />';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 8);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(8 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">8</span> karakter<br/>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_cappbasic($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" maxlength = "8"  value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 8) {
                                            this.value = this.value.substring(0, 8);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(8 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">8</span> karakter<br/>';

                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_dappbasic($field, $id) {
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" />';
                $return .= '<script>
                                $("#'.$id.'").datepicker({  changeMonth:true,
                                        changeYear:true,
                                        dateFormat:"yy-mm-dd"});
                             </script>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_dappbasic($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= $value;
                }else{
                $return = '<input type="text" name="'.$field.'"  id="'.$id.'"  class="input_rows1 required" size="30" value="'.$value.'"/>';
                $return .= '<script>
                                $("#'.$id.'").datepicker({
                                    changeMonth:true,
                                    changeYear:true,
                                    dateFormat:"yy-mm-dd"
                                });
                             </script>';
                }
                return $return;
            }

            function insertBox_export_refor_basic_formula_tappbasic($field, $id) {
                $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250"></textarea>';
                $return .= '<script>
                                $("#'.$id.'").keyup(function() {
                                    var len = this.value.length;
                                        if (len >= 250) {
                                            this.value = this.value.substring(0, 255);
                                        }
                                    $("#maxlengthnote_'.$id.'").text(255 - len);
                                });
                             </script>';
                $return .= '<br/>tersisa <span id="maxlengthnote_'.$id.'">250</span> karakter<br/>';
                return $return;
            }
            function updateBox_export_refor_basic_formula_tappbasic($field, $id, $value, $rowData) {
                if ($this->input->get('action') == 'view') {
                     $return= '<label title="Note">'.nl2br($value).'</label>';
                }else{
                    $return = '<textarea name="'.$field.'" id="'.$id.'" class="required" style="width: 240px; height: 50px;" size="250" maxlength ="250">'.nl2br($value).'</textarea>';
                }
                return $return;
            }


                //Ini Merupakan Standart Approve yang digunakan di erp

                function approve_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/export_refor_basic_formula";
                                            if(o.status == true) {
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_export_refor_basic_formula").html(data);

                                                });

                                            }
                                                reload_grid("grid_export_refor_basic_formula");
                                        }

                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Approve</h1><br />';
                    $echo .= '<form id="form_export_refor_basic_formula_approve" action="'.base_url().'processor/reformulasi/export_refor_basic_formula?action=approve_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark :
                            <input type="hidden" name="iexport_refor_basic_formula" value="'.$this->input->get('iexport_refor_basic_formula').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_export_refor_basic_formula_approve\')">Approve</button>';

                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                }

                function approve_process() {
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $iexport_refor_basic_formula = $post['iexport_refor_basic_formula'];
                    $vRemark = $post['vRemark'];
                    $lvl = $post['lvl'];

                    $this->db->where('iexport_refor_basic_formula', $post['iexport_refor_basic_formula']);
                    $this->db->update('reformulasi.export_refor_basic_formula', array('iappbasic'=>2,'cappbasic'=>$cNip,
                            'dappbasic'=>date('Y-m-d H:i:s'),'tappbasic'=>$vRemark));
                    //Letakan Query Update approve

                    $data['status']  = true;
                    $data['last_id'] = $post['iexport_refor_basic_formula'];
                    return json_encode($data);
                }

                //Ini Merupakan Standart Reject yang digunakan di erp

                function reject_view() {
                    $echo = '<script type="text/javascript">
                                 function submit_ajax(form_id) {
                                    var remark = $("#export_refor_basic_formula_remark").val();
                                    if (remark=="") {
                                        alert("Remark tidak boleh kosong ");
                                        return
                                    }

                                    return $.ajax({
                                        url: $("#"+form_id).attr("action"),
                                        type: $("#"+form_id).attr("method"),
                                        data: $("#"+form_id).serialize(),
                                        success: function(data) {
                                            var o = $.parseJSON(data);
                                            var last_id = o.last_id;
                                            var url = "'.base_url().'processor/reformulasi/export_refor_basic_formula";
                                            if(o.status == true) {
                                                $("#alert_dialog_form").dialog("close");
                                                     $.get(url+"?action=update&id="+last_id, function(data) {
                                                     $("div#form_export_refor_basic_formula").html(data);

                                                });

                                            }
                                                reload_grid("grid_export_refor_basic_formula");
                                        }

                                     })
                                 }
                             </script>';
                    $echo .= '<h1>Reject</h1><br />';
                    $echo .= '<form id="form_export_refor_basic_formula_reject" action="'.base_url().'processor/reformulasi/export_refor_basic_formula?action=reject_process" method="post">';
                    $echo .= '<div style="vertical-align: top;">';
                    $echo .= 'Remark :
                            <input type="hidden" name="iexport_refor_basic_formula" value="'.$this->input->get('iexport_refor_basic_formula').'" />
                            <input type="hidden" name="lvl" value="'.$this->input->get('lvl').'" />
                            <input type="hidden" name="group_id" value="'.$this->input->get('group_id').'" />
                            <input type="hidden" name="modul_id" value="'.$this->input->get('modul_id').'" />
                            <textarea name="vRemark" id="reject_export_refor_basic_formula_remark"></textarea>
                    <button type="button" onclick="submit_ajax(\'form_export_refor_basic_formula_reject\')">Reject</button>';

                    $echo .= '</div>';
                    $echo .= '</form>';
                    return $echo;
                }



                function reject_process() {
                    $post = $this->input->post();
                    $cNip= $this->user->gNIP;
                    $vName= $this->user->gName;
                    $iexport_refor_basic_formula = $post['iexport_refor_basic_formula'];
                    $vRemark = $post['vRemark'];
                    $lvl = $post['lvl'];

                    $this->db->where('iexport_refor_basic_formula', $post['iexport_refor_basic_formula']);
                    $this->db->update('reformulasi.export_refor_basic_formula', array('iappbasic'=>1,'cappbasic'=>$cNip,
                            'dappbasic'=>date('Y-m-d H:i:s'),'tappbasic'=>$vRemark));

                    //Letakan Query Update approve disini

                    $data['status']  = true;
                    $data['last_id'] = $post['iexport_refor_basic_formula'];
                    return json_encode($data);
                }



            //Standart Setiap table harus memiliki dCreate , cCreated, dupdate, cUpdate
            function before_insert_processor($row, $postData) {
                $postData['dCreate'] = date('Y-m-d H:i:s');
                $postData['cCreated']=$this->user->gNIP;
                if($postData['isdraft']==true){
                    $postData['isubmited_proses']=0;
                }
                else{
                    $postData['isubmited_proses']=1;
                }
                return $postData;

            }
            function before_update_processor($row, $postData) {
                $postData['dupdate'] = date('Y-m-d H:i:s');
                $postData['cUpdate'] = $this->user->gNIP;
                if($postData['isdraft']==true){
                    $postData['isubmited_proses']=0;
                }
                else{
                    $postData['isubmited_proses']=1;
                }
                return $postData;
            }

            function after_insert_processor($fields, $id, $postData) {
                //Example After Insert
                /*
                $cNip = $this->sess_auth->gNIP;
                $sql = 'Place Query In Here';
                $this->dbset->query($sql);
                */
            }

            function after_update_processor($fields, $id, $postData) {
                //Example After Update
                /*
                $cNip = $this->sess_auth->gNIP;
                $sql = 'Place Query In Here';
                $this->dbset->query($sql);
                */
            }

             function manipulate_insert_button($buttons) {
                unset($buttons['save']);
                $js = $this->load->view('export/js/export_refor_basic_formula_js');

                $save_draft = '<button onclick="javascript:save_draft_btn_multiupload(\'export_refor_basic_formula\', \''.base_url().'processor/reformulasi/export/refor/basic/formula?draft=true\', this, true)" class="ui-button-text icon-save" id="button_save_draft_export_refor_basic_formula_js">Save as Draft</button>';
                $save = '<button onclick="javascript:save_btn_multiupload(\'export_refor_basic_formula\', \''.base_url().'processor/reformulasi/export/refor/basic/formula?company_id='.$this->input->get('company_id').'&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this)" class="ui-button-text icon-save" id="button_save_export_refor_basic_formula_js">Save &amp Submit</button>';

                $buttons['save'] = $save_draft.$save.$js;

                return $buttons;
            }

            function download($vFilename) {
                $this->load->helper('download');
                $name = $vFilename;
                $id = $_GET['id'];
                if($_GET['filepath']==1){
                     $path = file_get_contents('./files/reformulasi/export/basic_formula_sps/'.$id.'/'.$name);
                }else{
                     $path = file_get_contents('./files/reformulasi/export/basic_formula/'.$id.'/'.$name);
                }
                force_download($name, $path);
            }

            function manipulate_update_button($buttons, $rowData) {
                //Load Javascript In Here
                if ($this->input->get('action') == 'view') {
                    unset($buttons['update_back']);
                    unset($buttons['update']);
                }
                else{
                    $cNip= $this->user->gNIP;

                    $js = $this->load->view('export/js/export_refor_basic_formula_js');
                    $update = '<button onclick="javascript:update_btn_back(\'export_refor_basic_formula\', \''.base_url().'processor/reformulasi/export/refor/basic/formula?company_id='.$this->input->get('company_id').'&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this)" class="ui-button-text icon-save" id="button_update_export_refor_basic_formula">Update & Submit</button>';
                    $updatedraft = '<button onclick="javascript:update_draft_btn(\'export_refor_basic_formula\', \''.base_url().'processor/reformulasi/export/refor/basic/formula?company_id='.$this->input->get('company_id').'&draft=true&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\', this, true)" class="ui-button-text icon-save" id="button_save_export_refor_basic_formula">Update as Draft</button>';

                    $approve = '<button onclick="javascript:load_popup(\''.base_url().'processor/reformulasi/export/refor/basic/formula?action=approve&iexport_refor_basic_formula='.$rowData['iexport_refor_basic_formula'].'&cNip='.$cNip.'&lvl=1&status=1&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\')" class="ui-button-text icon-save" id="button_approve_export_refor_basic_formula">Approve</button>';
                    $reject = '<button onclick="javascript:load_popup(\''.base_url().'processor/reformulasi/export/refor/basic/formula?action=reject&iexport_refor_basic_formula='.$rowData['iexport_refor_basic_formula'].'&cNip='.$cNip.'&lvl=1&status=2&group_id='.$this->input->get('group_id').'&modul_id='.$this->input->get('modul_id').'\')" class="ui-button-text icon-save" id="button_reject_export_refor_basic_formula">Reject</button>';

                    $user = $this->auth_export->user();

                    unset($buttons['update_back']);
                    unset($buttons['update']);
                    $type = '';
                    if($this->auth_export->is_manager()){
                        $x=$this->auth_export->tipe();
                        $manager=$x['manager'];
                        if(in_array('PD', $manager)){
                            $type='PD';
                        }
                        else{
                            $type='';
                        }
                    }

                    if($rowData['isubmited_proses']!=1){
                        $buttons['update'] = $updatedraft.$update.$js;
                    }else{
                        if($rowData['iappbasic']<>0){
                            unset($buttons['update_back']);
                            unset($buttons['update']);
                        }else{
                            if($this->auth_export->is_manager() && $type=='PD'){
                                $buttons['update'] = $approve.$js;
                            }else{
                                unset($buttons['update_back']);
                                unset($buttons['update']);
                            }
                        }

                    }

                }
                return $buttons;
            }
            //Output
            public function output(){
                $this->index($this->input->get('action'));
            }
        }
